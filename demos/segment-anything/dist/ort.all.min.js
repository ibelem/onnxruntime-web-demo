/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var Z0=Object.create;var Pi=Object.defineProperty;var J0=Object.getOwnPropertyDescriptor;var Q0=Object.getOwnPropertyNames;var ev=Object.getPrototypeOf,tv=Object.prototype.hasOwnProperty;var z=(r,e)=>()=>(r&&(e=r(r=0)),e);var st=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),tn=(r,e)=>{for(var n in e)Pi(r,n,{get:e[n],enumerable:!0})},Hl=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Q0(e))!tv.call(r,o)&&o!==n&&Pi(r,o,{get:()=>e[o],enumerable:!(t=J0(e,o))||t.enumerable});return r};var Kn=(r,e,n)=>(n=r!=null?Z0(ev(r)):{},Hl(e||!r||!r.__esModule?Pi(n,"default",{value:r,enumerable:!0}):n,r)),qr=r=>Hl(Pi({},"__esModule",{value:!0}),r);var ki,wn,jr,rv,Di,Bi=z(()=>{"use strict";ki=new Map,wn=[],jr=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=ki.get(r);if(t===void 0)ki.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=wn.indexOf(r);o!==-1&&wn.splice(o,1);for(let i=0;i<wn.length;i++)if(ki.get(wn[i]).priority<=n){wn.splice(i,0,r);return}wn.push(r)}return}throw new TypeError("not a valid backend")},rv=async r=>{let e=ki.get(r);if(!e)return"backend not found.";if(e.initialized)return e.backend;if(e.aborted)return e.error;{let n=!!e.initPromise;try{return n||(e.initPromise=e.backend.init(r)),await e.initPromise,e.initialized=!0,e.backend}catch(t){return n||(e.error=`${t}`,e.aborted=!0),e.error}finally{delete e.initPromise}}},Di=async r=>{let e=r.executionProviders||[],n=e.map(u=>typeof u=="string"?u:u.name),t=n.length===0?wn:n,o,i=[],s=new Set;for(let u of t){let l=await rv(u);typeof l=="string"?i.push({name:u,err:l}):(o||(o=l),o===l&&s.add(u))}if(!o)throw new Error(`no available backend found. ERR: ${i.map(u=>`[${u.name}] ${u.err}`).join(", ")}`);for(let{name:u,err:l}of i)n.includes(u)&&console.warn(`removing requested execution provider "${u}" from session options because it is not available: ${l}`);let a=e.filter(u=>s.has(typeof u=="string"?u:u.name));return[o,new Proxy(r,{get:(u,l)=>l==="executionProviders"?a:Reflect.get(u,l)})]}});var ql=z(()=>{"use strict";Bi()});var jl,Kl=z(()=>{"use strict";jl="1.18.0"});var Yl,nr,ys=z(()=>{"use strict";Kl();Yl="warning",nr={wasm:{},webgl:{},webgpu:{},versions:{common:jl},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);Yl=r}},get logLevel(){return Yl}};Object.defineProperty(nr,"logLevel",{enumerable:!0})});var ge,Xl=z(()=>{"use strict";ys();ge=nr});var Zl,Jl,Ql=z(()=>{"use strict";Zl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let s=e?.format!==void 0?e.format:"RGB",a=e?.norm,u,l;a===void 0||a.mean===void 0?u=[255,255,255,255]:typeof a.mean=="number"?u=[a.mean,a.mean,a.mean,a.mean]:(u=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(u[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let d=i*o,p=0,m=d,b=d*2,v=-1;s==="RGBA"?(p=0,m=d,b=d*2,v=d*3):s==="RGB"?(p=0,m=d,b=d*2):s==="RBG"&&(p=0,b=d,m=d*2);for(let w=0;w<i;w++)for(let S=0;S<o;S++){let I=(r.data[p++]-l[0])*u[0],_=(r.data[m++]-l[1])*u[1],O=(r.data[b++]-l[2])*u[2],E=v===-1?255:(r.data[v++]-l[3])*u[3];t.fillStyle="rgba("+I+","+_+","+O+","+E+")",t.fillRect(S,w,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Jl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),t;if(n!=null){let o,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],s=r.dims[3]):(o=r.dims[3],i=r.dims[2],s=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",u=e?.norm,l,d;u===void 0||u.mean===void 0?l=[255,255,255,255]:typeof u.mean=="number"?l=[u.mean,u.mean,u.mean,u.mean]:(l=[u.mean[0],u.mean[1],u.mean[2],255],u.mean[3]!==void 0&&(l[3]=u.mean[3])),u===void 0||u.bias===void 0?d=[0,0,0,0]:typeof u.bias=="number"?d=[u.bias,u.bias,u.bias,u.bias]:(d=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(d[3]=u.bias[3]));let p=i*o;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let m=4,b=0,v=1,w=2,S=3,I=0,_=p,O=p*2,E=-1;a==="RGBA"?(I=0,_=p,O=p*2,E=p*3):a==="RGB"?(I=0,_=p,O=p*2):a==="RBG"&&(I=0,O=p,_=p*2),t=n.createImageData(o,i);for(let D=0;D<i*o;b+=m,v+=m,w+=m,S+=m,D++)t.data[b]=(r.data[I++]-d[0])*l[0],t.data[v]=(r.data[_++]-d[1])*l[1],t.data[w]=(r.data[O++]-d[2])*l[2],t.data[S]=E===-1?255:(r.data[E++]-d[3])*l[3]}else throw new Error("Can not access image data");return t}});var vs,ed,td,rd,nd,od=z(()=>{"use strict";Ri();vs=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,s;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?s=[o.bias,o.bias,o.bias,o.bias]:s=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",u=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,d=u==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),p=4,m=0,b=1,v=2,w=3,S=0,I=l,_=l*2,O=-1;a==="RGB"&&(p=3,m=0,b=1,v=2,w=-1),u==="RGBA"?O=l*3:u==="RBG"?(S=0,_=l,I=l*2):u==="BGR"&&(_=0,I=l,S=l*2);for(let D=0;D<l;D++,m+=p,v+=p,b+=p,w+=p)d[S++]=(r[m]+s[0])/i[0],d[I++]=(r[b]+s[1])/i[1],d[_++]=(r[v]+s[2])/i[2],O!==-1&&w!==-1&&(d[O++]=(r[w]+s[3])/i[3]);return u==="RGBA"?new Ft("float32",d,[1,4,n,t]):new Ft("float32",d,[1,3,n,t])},ed=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",s,a=e??{},u=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(n){let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let m=r.height,b=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(m=e.resizedHeight,b=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=m,a.width=b}else a.tensorFormat="RGBA",a.height=m,a.width=b;p.drawImage(r,0,0),s=p.getImageData(0,0,b,m).data}else throw new Error("Can not access image data")}else if(t){let d,p;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,p=e.resizedWidth):(d=r.height,p=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=d,a.width=p,e!==void 0){let m=u();m.width=p,m.height=d;let b=l(m);if(b!=null)b.putImageData(r,0,0),s=b.getImageData(0,0,p,d).data;else throw new Error("Can not access image data")}else s=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let m=r.height,b=r.width;return p.drawImage(r,0,0,b,m),s=p.getImageData(0,0,b,m).data,a.height=m,a.width=b,vs(s,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((d,p)=>{let m=u(),b=l(m);if(!r||!b)return p();let v=new Image;v.crossOrigin="Anonymous",v.src=r,v.onload=()=>{m.width=v.width,m.height=v.height,b.drawImage(v,0,0,m.width,m.height);let w=b.getImageData(0,0,m.width,m.height);a.height=m.height,a.width=m.width,d(vs(w.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return vs(s,a);throw new Error("Input data provided is not supported - aborted tensor creation")},td=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,s=[1,t,n,4];return new Ft({location:"texture",type:"float32",texture:r,dims:s,download:o,dispose:i})},rd=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new Ft({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},nd=(r,e,n)=>new Ft({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var xn,Bo,id,ad,sd=z(()=>{"use strict";xn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Bo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),id=!1,ad=()=>{if(!id){id=!0;let r=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,n=typeof Float16Array<"u"&&Float16Array.from;r&&(xn.set("int64",BigInt64Array),Bo.set(BigInt64Array,"int64")),e&&(xn.set("uint64",BigUint64Array),Bo.set(BigUint64Array,"uint64")),n?(xn.set("float16",Float16Array),Bo.set(Float16Array,"float16")):xn.set("float16",Uint16Array)}}});var ud,ld,dd=z(()=>{"use strict";Ri();ud=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},ld=(r,e)=>{switch(r.location){case"cpu":return new Ft(r.type,r.data,e);case"cpu-pinned":return new Ft({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new Ft({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new Ft({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var Ft,Ri=z(()=>{"use strict";Ql();od();sd();dd();Ft=class{constructor(e,n,t){ad();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=xn.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint8"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,u;if(typeof e=="string")if(o=e,u=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=xn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16"&&l===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(u=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Bo.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(u===void 0)u=[a.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=a,this.dataLocation="cpu"}let s=ud(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=s}static async fromImage(e,n){return ed(e,n)}static fromTexture(e,n){return td(e,n)}static fromGpuBuffer(e,n){return rd(e,n)}static fromPinnedBuffer(e,n,t){return nd(e,n,t)}toDataURL(e){return Zl(this,e)}toImageData(e){return Jl(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return ld(this,e)}}});var $t,zi=z(()=>{"use strict";Ri();$t=Ft});var Ro,cd,jt,Ut,ws=z(()=>{"use strict";ys();Ro=(r,e)=>{(typeof nr.trace>"u"?!nr.wasm.trace:!nr.trace)||console.timeStamp(`${r}::ORT::${e}`)},cd=(r,e)=>{let n=new Error().stack?.split(/\r\n|\r|\n/g)||[],t=!1;for(let o=0;o<n.length;o++){if(t&&!n[o].includes("TRACE_FUNC")){let i=`FUNC_${r}::${n[o].trim().split(" ")[1]}`;e&&(i+=`::${e}`),Ro("CPU",i);return}n[o].includes("TRACE_FUNC")&&(t=!0)}},jt=r=>{(typeof nr.trace>"u"?!nr.wasm.trace:!nr.trace)||cd("BEGIN",r)},Ut=r=>{(typeof nr.trace>"u"?!nr.wasm.trace:!nr.trace)||cd("END",r)}});var Ni,fd=z(()=>{"use strict";Bi();zi();ws();Ni=class r{constructor(e){this.handler=e}async run(e,n,t){jt();let o={},i={};if(typeof e!="object"||e===null||e instanceof $t||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof $t)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(n);for(let p of this.outputNames)if(d.indexOf(p)!==-1){let m=n[p];(m===null||m instanceof $t)&&(l=!0,s=!1,o[p]=m)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),u={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let d=a[l];d instanceof $t?u[l]=d:u[l]=new $t(d.type,d.data,d.dims)}return Ut(),u}async release(){return this.handler.dispose()}static async create(e,n,t,o){jt();let i,s={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let d=e,p=0,m=e.byteLength;if(typeof n=="object"&&n!==null)s=n;else if(typeof n=="number"){if(p=n,!Number.isSafeInteger(p))throw new RangeError("'byteOffset' must be an integer.");if(p<0||p>=d.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${d.byteLength}).`);if(m=e.byteLength-p,typeof t=="number"){if(m=t,!Number.isSafeInteger(m))throw new RangeError("'byteLength' must be an integer.");if(m<=0||p+m>d.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${d.byteLength-p}].`);if(typeof o=="object"&&o!==null)s=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(d,p,m)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,u]=await Di(s),l=await a.createInferenceSessionHandler(i,u);return Ut(),new r(l)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var pd,hd=z(()=>{"use strict";fd();pd=Ni});var md=z(()=>{"use strict"});var gd=z(()=>{"use strict"});var bd=z(()=>{"use strict"});var yd=z(()=>{"use strict"});var nv,Mi,vd=z(()=>{"use strict";Bi();zi();nv="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Mi=class r{constructor(e,n,t){this.handler=e,this.hasOptimizerModel=n,this.hasEvalModel=t}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},[s,a]=await Di(i);if(s.createTrainingSessionHandler){let u=await s.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,a);return new r(u,!!e.optimizerModel,!!e.evalModel)}else throw new Error(nv)}typeNarrowingForRunStep(e,n,t,o,i){let s={},a={};if(typeof t!="object"||t===null||t instanceof $t||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof $t)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of o){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(n.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);s[l]=null}if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(o);for(let p of n)if(d.indexOf(p)!==-1){let m=o[p];(m===null||m instanceof $t)&&(l=!0,u=!1,s[p]=m)}if(l){if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else a=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of n)s[l]=null;return[s,a]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof $t?n[t]=o:n[t]=new $t(o.type,o.data,o.dims)}return n}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,n,t),s=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,n,t){if(this.hasEvalModel){let[o,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,n,t),s=await this.handler.runEvalStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,n=!0){let t=await this.getParametersSize(n);if(e.length!==4*t)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,n)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}});var wd,xd=z(()=>{"use strict";vd();wd=Mi});var xs={};tn(xs,{InferenceSession:()=>pd,TRACE:()=>Ro,TRACE_FUNC_BEGIN:()=>jt,TRACE_FUNC_END:()=>Ut,Tensor:()=>$t,TrainingSession:()=>wd,env:()=>ge,registerBackend:()=>jr});var Pt=z(()=>{"use strict";ql();Xl();hd();zi();md();gd();ws();bd();yd();xd()});function rn(r,e,n,t){if(e===void 0)return iv(r);if(n===void 0)Li(r,e,1);else if(typeof n=="number"&&t===void 0)Li(r,e,n);else if(typeof n=="string"&&t===void 0)Li(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")Li(r,n,t,e);else throw new TypeError("input is valid")}function iv(r){return{verbose:rn.verbose.bind(null,r),info:rn.info.bind(null,r),warning:rn.warning.bind(null,r),error:rn.error.bind(null,r),fatal:rn.fatal.bind(null,r)}}function Li(r,e,n,t){let o=zo[t||""]||zo[""];$d[r]<$d[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,ov[o.provider].log(r,e,t))}var _s,$s,$d,ov,Td,zo,Qe,Ui,Vi,Gi,Fi,ar=z(()=>{"use strict";_s=class{log(e,n,t){}},$s=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},$d={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},ov={none:new _s,console:new $s},Td={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},zo={"":Td};(u=>{function r(l,d){u("verbose",l,d)}u.verbose=r;function e(l,d){u("info",l,d)}u.info=e;function n(l,d){u("warning",l,d)}u.warning=n;function t(l,d){u("error",l,d)}u.error=t;function o(l,d){u("fatal",l,d)}u.fatal=o;function i(l){zo={},s("",l||{})}u.reset=i;function s(l,d){if(l==="*")i(d);else{let p=zo[l]||Td;zo[l]={provider:d.provider||p.provider,minimalSeverity:d.minimalSeverity||p.minimalSeverity,logDateTime:d.logDateTime===void 0?p.logDateTime:d.logDateTime,logSourceLocation:d.logSourceLocation===void 0?p.logSourceLocation:d.logSourceLocation}}}u.set=s;function a(l){let d={};l.logLevel&&(d.minimalSeverity=l.logLevel),s("",d)}u.setWithEnv=a})(rn||={});Qe=rn,Ui=class{constructor(e,n,t,o,i,s){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=s}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Vi=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},Gi=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=Fi(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,s=!1,a=t();if(a&&typeof a.then=="function")return s=!0,new Promise((u,l)=>{a.then(async d=>{i&&await i.end(),u(d)},async d=>{i&&await i.end(),l(d)})});if(!s&&i){let u=i.end();if(u&&typeof u.then=="function")return new Promise((l,d)=>{u.then(()=>{l(a)},p=>{d(p)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=Fi();return this.flush(o),new Ui(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new Ui(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Vi(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=Fi();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Vi(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){Qe.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=Fi()}}get started(){return this._started}},Fi=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function Sd(r,e,n){for(let t of n){let o=t[0],i=t[1],s=t[2],a=t[3],u=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&av(l.version,s))return{opImpl:a,opInit:u}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function av(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var Id=z(()=>{"use strict"});var Ad=st(Ts=>{"use strict";Ts.__esModule=!0;var sv=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();Ts.Guid=sv});function ut(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function kt(r){return(r&&r.__isLong__)===!0}function Od(r){var e=Math.clz32(r&-r);return r?31-e:e}function _n(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=Cd[r],t)?t:(n=Ye(r,0,!0),o&&(Cd[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=Ed[r],t)?t:(n=Ye(r,r<0?-1:0,!1),o&&(Ed[r]=n),n))}function ur(r,e){if(isNaN(r))return e?Kr:yr;if(e){if(r<0)return Kr;if(r>=Bd)return Nd}else{if(r<=-kd)return Kt;if(r+1>=kd)return zd}return r<0?ur(-r,e).neg():Ye(r%Xn|0,r/Xn|0,e)}function Ye(r,e,n){return new ut(r,e,n)}function Is(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?Kr:yr;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return Is(r.substring(1),e,n).neg();for(var o=ur(Wi(n,8)),i=yr,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),u=parseInt(r.substring(s,s+a),n);if(a<8){var l=ur(Wi(n,a));i=i.mul(l).add(ur(u))}else i=i.mul(o),i=i.add(ur(u))}return i.unsigned=e,i}function vr(r,e){return typeof r=="number"?ur(r,e):typeof r=="string"?Is(r,e):Ye(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var sr,Ed,Cd,Wi,Pd,uv,Xn,Bd,kd,Dd,yr,Kr,Yn,Rd,Ss,zd,Nd,Kt,X,Yr,As=z(()=>{sr=null;try{sr=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}ut.prototype.__isLong__;Object.defineProperty(ut.prototype,"__isLong__",{value:!0});ut.isLong=kt;Ed={},Cd={};ut.fromInt=_n;ut.fromNumber=ur;ut.fromBits=Ye;Wi=Math.pow;ut.fromString=Is;ut.fromValue=vr;Pd=65536,uv=1<<24,Xn=Pd*Pd,Bd=Xn*Xn,kd=Bd/2,Dd=_n(uv),yr=_n(0);ut.ZERO=yr;Kr=_n(0,!0);ut.UZERO=Kr;Yn=_n(1);ut.ONE=Yn;Rd=_n(1,!0);ut.UONE=Rd;Ss=_n(-1);ut.NEG_ONE=Ss;zd=Ye(-1,2147483647,!1);ut.MAX_VALUE=zd;Nd=Ye(-1,-1,!0);ut.MAX_UNSIGNED_VALUE=Nd;Kt=Ye(0,-2147483648,!1);ut.MIN_VALUE=Kt;X=ut.prototype;X.toInt=function(){return this.unsigned?this.low>>>0:this.low};X.toNumber=function(){return this.unsigned?(this.high>>>0)*Xn+(this.low>>>0):this.high*Xn+(this.low>>>0)};X.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Kt)){var n=ur(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=ur(Wi(e,6),this.unsigned),s=this,a="";;){var u=s.div(i),l=s.sub(u.mul(i)).toInt()>>>0,d=l.toString(e);if(s=u,s.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}};X.getHighBits=function(){return this.high};X.getHighBitsUnsigned=function(){return this.high>>>0};X.getLowBits=function(){return this.low};X.getLowBitsUnsigned=function(){return this.low>>>0};X.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Kt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};X.isZero=function(){return this.high===0&&this.low===0};X.eqz=X.isZero;X.isNegative=function(){return!this.unsigned&&this.high<0};X.isPositive=function(){return this.unsigned||this.high>=0};X.isOdd=function(){return(this.low&1)===1};X.isEven=function(){return(this.low&1)===0};X.equals=function(e){return kt(e)||(e=vr(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};X.eq=X.equals;X.notEquals=function(e){return!this.eq(e)};X.neq=X.notEquals;X.ne=X.notEquals;X.lessThan=function(e){return this.comp(e)<0};X.lt=X.lessThan;X.lessThanOrEqual=function(e){return this.comp(e)<=0};X.lte=X.lessThanOrEqual;X.le=X.lessThanOrEqual;X.greaterThan=function(e){return this.comp(e)>0};X.gt=X.greaterThan;X.greaterThanOrEqual=function(e){return this.comp(e)>=0};X.gte=X.greaterThanOrEqual;X.ge=X.greaterThanOrEqual;X.compare=function(e){if(kt(e)||(e=vr(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};X.comp=X.compare;X.negate=function(){return!this.unsigned&&this.eq(Kt)?Kt:this.not().add(Yn)};X.neg=X.negate;X.add=function(e){kt(e)||(e=vr(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,s=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,p=0,m=0,b=0;return b+=i+l,m+=b>>>16,b&=65535,m+=o+u,p+=m>>>16,m&=65535,p+=t+a,d+=p>>>16,p&=65535,d+=n+s,d&=65535,Ye(m<<16|b,d<<16|p,this.unsigned)};X.subtract=function(e){return kt(e)||(e=vr(e)),this.add(e.neg())};X.sub=X.subtract;X.multiply=function(e){if(this.isZero())return this;if(kt(e)||(e=vr(e)),sr){var n=sr.mul(this.low,this.high,e.low,e.high);return Ye(n,sr.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?Kr:yr;if(this.eq(Kt))return e.isOdd()?Kt:yr;if(e.eq(Kt))return this.isOdd()?Kt:yr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Dd)&&e.lt(Dd))return ur(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,s=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,d=e.low&65535,p=0,m=0,b=0,v=0;return v+=s*d,b+=v>>>16,v&=65535,b+=i*d,m+=b>>>16,b&=65535,b+=s*l,m+=b>>>16,b&=65535,m+=o*d,p+=m>>>16,m&=65535,m+=i*l,p+=m>>>16,m&=65535,m+=s*u,p+=m>>>16,m&=65535,p+=t*d+o*l+i*u+s*a,p&=65535,Ye(b<<16|v,p<<16|m,this.unsigned)};X.mul=X.multiply;X.divide=function(e){if(kt(e)||(e=vr(e)),e.isZero())throw Error("division by zero");if(sr){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?sr.div_u:sr.div_s)(this.low,this.high,e.low,e.high);return Ye(n,sr.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Kr:yr;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Kr;if(e.gt(this.shru(1)))return Rd;i=Kr}else{if(this.eq(Kt)){if(e.eq(Yn)||e.eq(Ss))return Kt;if(e.eq(Kt))return Yn;var s=this.shr(1);return t=s.div(e).shl(1),t.eq(yr)?e.isNegative()?Yn:Ss:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(Kt))return this.unsigned?Kr:yr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=yr}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),u=a<=48?1:Wi(2,a-48),l=ur(t),d=l.mul(e);d.isNegative()||d.gt(o);)t-=u,l=ur(t,this.unsigned),d=l.mul(e);l.isZero()&&(l=Yn),i=i.add(l),o=o.sub(d)}return i};X.div=X.divide;X.modulo=function(e){if(kt(e)||(e=vr(e)),sr){var n=(this.unsigned?sr.rem_u:sr.rem_s)(this.low,this.high,e.low,e.high);return Ye(n,sr.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};X.mod=X.modulo;X.rem=X.modulo;X.not=function(){return Ye(~this.low,~this.high,this.unsigned)};X.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};X.clz=X.countLeadingZeros;X.countTrailingZeros=function(){return this.low?Od(this.low):Od(this.high)+32};X.ctz=X.countTrailingZeros;X.and=function(e){return kt(e)||(e=vr(e)),Ye(this.low&e.low,this.high&e.high,this.unsigned)};X.or=function(e){return kt(e)||(e=vr(e)),Ye(this.low|e.low,this.high|e.high,this.unsigned)};X.xor=function(e){return kt(e)||(e=vr(e)),Ye(this.low^e.low,this.high^e.high,this.unsigned)};X.shiftLeft=function(e){return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ye(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ye(0,this.low<<e-32,this.unsigned)};X.shl=X.shiftLeft;X.shiftRight=function(e){return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ye(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ye(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};X.shr=X.shiftRight;X.shiftRightUnsigned=function(e){return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ye(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?Ye(this.high,0,this.unsigned):Ye(this.high>>>e-32,0,this.unsigned)};X.shru=X.shiftRightUnsigned;X.shr_u=X.shiftRightUnsigned;X.rotateLeft=function(e){var n;return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Ye(this.high,this.low,this.unsigned):e<32?(n=32-e,Ye(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,Ye(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};X.rotl=X.rotateLeft;X.rotateRight=function(e){var n;return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Ye(this.high,this.low,this.unsigned):e<32?(n=32-e,Ye(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,Ye(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};X.rotr=X.rotateRight;X.toSigned=function(){return this.unsigned?Ye(this.low,this.high,!1):this};X.toUnsigned=function(){return this.unsigned?this:Ye(this.low,this.high,!0)};X.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};X.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};X.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};ut.fromBytes=function(e,n,t){return t?ut.fromBytesLE(e,n):ut.fromBytesBE(e,n)};ut.fromBytesLE=function(e,n){return new ut(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};ut.fromBytesBE=function(e,n){return new ut(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};Yr=ut});var N,Hi=z(()=>{N={};N.Offset;N.Table;N.SIZEOF_SHORT=2;N.SIZEOF_INT=4;N.FILE_IDENTIFIER_LENGTH=4;N.SIZE_PREFIX_LENGTH=4;N.Encoding={UTF8_BYTES:1,UTF16_STRING:2};N.int32=new Int32Array(2);N.float32=new Float32Array(N.int32.buffer);N.float64=new Float64Array(N.int32.buffer);N.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;N.Long=function(r,e){this.low=r|0,this.high=e|0};N.Long.create=function(r,e){return r==0&&e==0?N.Long.ZERO:new N.Long(r,e)};N.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};N.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};N.Long.ZERO=new N.Long(0,0);N.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=N.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};N.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};N.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};N.Builder.prototype.dataBuffer=function(){return this.bb};N.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};N.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=N.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};N.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};N.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};N.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};N.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};N.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};N.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};N.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};N.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};N.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};N.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};N.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};N.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};N.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};N.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};N.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};N.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};N.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};N.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};N.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};N.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};N.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};N.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};N.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};N.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};N.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};N.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=N.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};N.Builder.prototype.addOffset=function(r){this.prep(N.SIZEOF_INT,0),this.writeInt32(this.offset()-r+N.SIZEOF_INT)};N.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};N.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*N.SIZEOF_SHORT;this.addInt16(o);var i=0,s=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var u=N.SIZEOF_SHORT;u<o;u+=N.SIZEOF_SHORT)if(this.bb.readInt16(s+u)!=this.bb.readInt16(a+u))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};N.Builder.prototype.finish=function(r,e,n){var t=n?N.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,N.SIZEOF_INT+N.FILE_IDENTIFIER_LENGTH+t),o.length!=N.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+N.FILE_IDENTIFIER_LENGTH);for(var i=N.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,N.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};N.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};N.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};N.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(N.SIZEOF_INT,r*e),this.prep(n,r*e)};N.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};N.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,s=this.space,a=this.bb.bytes();n<e.length;n++)a[s++]=e[n];return this.endVector()};N.Builder.prototype.createLong=function(r,e){return N.Long.create(r,e)};N.ByteBuffer=function(r){this.bytes_=r,this.position_=0};N.ByteBuffer.allocate=function(r){return new N.ByteBuffer(new Uint8Array(r))};N.ByteBuffer.prototype.clear=function(){this.position_=0};N.ByteBuffer.prototype.bytes=function(){return this.bytes_};N.ByteBuffer.prototype.position=function(){return this.position_};N.ByteBuffer.prototype.setPosition=function(r){this.position_=r};N.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};N.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};N.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};N.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};N.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};N.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};N.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};N.ByteBuffer.prototype.readInt64=function(r){return new N.Long(this.readInt32(r),this.readInt32(r+4))};N.ByteBuffer.prototype.readUint64=function(r){return new N.Long(this.readUint32(r),this.readUint32(r+4))};N.ByteBuffer.prototype.readFloat32=function(r){return N.int32[0]=this.readInt32(r),N.float32[0]};N.ByteBuffer.prototype.readFloat64=function(r){return N.int32[N.isLittleEndian?0:1]=this.readInt32(r),N.int32[N.isLittleEndian?1:0]=this.readInt32(r+4),N.float64[0]};N.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};N.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};N.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};N.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};N.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};N.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};N.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};N.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};N.ByteBuffer.prototype.writeFloat32=function(r,e){N.float32[0]=e,this.writeInt32(r,N.int32[0])};N.ByteBuffer.prototype.writeFloat64=function(r,e){N.float64[0]=e,this.writeInt32(r,N.int32[N.isLittleEndian?0:1]),this.writeInt32(r+4,N.int32[N.isLittleEndian?1:0])};N.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+N.SIZEOF_INT+N.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<N.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+N.SIZEOF_INT+e));return r};N.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};N.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};N.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=N.SIZEOF_INT,e===N.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,s=this.readUint8(r+o++);if(s<192)i=s;else{var a=this.readUint8(r+o++);if(s<224)i=(s&31)<<6|a&63;else{var u=this.readUint8(r+o++);if(s<240)i=(s&15)<<12|(a&63)<<6|u&63;else{var l=this.readUint8(r+o++);i=(s&7)<<18|(a&63)<<12|(u&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};N.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};N.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+N.SIZEOF_INT};N.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};N.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=N.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+N.FILE_IDENTIFIER_LENGTH);for(var e=0;e<N.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+N.SIZEOF_INT+e))return!1;return!0};N.ByteBuffer.prototype.createLong=function(r,e){return N.Long.create(r,e)}});var fe,No=z(()=>{"use strict";Hi();(e=>{let r;(t=>{let n;(i=>{let o;(O=>(O[O.UNDEFINED=0]="UNDEFINED",O[O.FLOAT=1]="FLOAT",O[O.INT=2]="INT",O[O.STRING=3]="STRING",O[O.TENSOR=4]="TENSOR",O[O.GRAPH=5]="GRAPH",O[O.FLOATS=6]="FLOATS",O[O.INTS=7]="INTS",O[O.STRINGS=8]="STRINGS",O[O.TENSORS=9]="TENSORS",O[O.GRAPHS=10]="GRAPHS",O[O.SPARSE_TENSOR=11]="SPARSE_TENSOR",O[O.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{let o;(R=>(R[R.UNDEFINED=0]="UNDEFINED",R[R.FLOAT=1]="FLOAT",R[R.UINT8=2]="UINT8",R[R.INT8=3]="INT8",R[R.UINT16=4]="UINT16",R[R.INT16=5]="INT16",R[R.INT32=6]="INT32",R[R.INT64=7]="INT64",R[R.STRING=8]="STRING",R[R.BOOL=9]="BOOL",R[R.FLOAT16=10]="FLOAT16",R[R.DOUBLE=11]="DOUBLE",R[R.UINT32=12]="UINT32",R[R.UINT64=13]="UINT64",R[R.COMPLEX64=14]="COMPLEX64",R[R.COMPLEX128=15]="COMPLEX128",R[R.BFLOAT16=16]="BFLOAT16",R[R.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",R[R.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",R[R.FLOAT8E5M2=19]="FLOAT8E5M2",R[R.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{let o;(u=>(u[u.Primitive=0]="Primitive",u[u.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{let o;(d=>(d[d.NONE=0]="NONE",d[d.tensor_type=1]="tensor_type",d[d.sequence_type=2]="sequence_type",d[d.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,u){a.addFieldOffset(0,u,0)}static createDimVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startDimVector(a,u){a.startVector(4,u,4)}static endShape(a){return a.endObject()}static createShape(a,u){return o.startShape(a),o.addDim(a,u),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimension(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}denotation(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimension(a){a.startObject(2)}static addValue(a,u){a.addFieldOffset(0,u,0)}static addDenotation(a,u){a.addFieldOffset(1,u,0)}static endDimension(a){return a.endObject()}static createDimension(a,u,l){return o.startDimension(a),o.addValue(a,u),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimensionValue(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,u){a.addFieldInt8(0,u,0)}static addDimValue(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static addDimParam(a,u){a.addFieldOffset(2,u,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,u,l,d){return o.startDimensionValue(a),o.addDimType(a,u),o.addDimValue(a,l),o.addDimParam(a,d),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensorTypeAndShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,u){a.addFieldInt32(0,u,0)}static addShape(a,u){a.addFieldOffset(1,u,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,u,l){return o.startTensorTypeAndShape(a),o.addElemType(a,u),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsMapType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,u){a.addFieldInt32(0,u,0)}static addValueType(a,u){a.addFieldOffset(1,u,0)}static endMapType(a){return a.endObject()}static createMapType(a,u,l){return o.startMapType(a),o.addKeyType(a,u),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSequenceType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,u){a.addFieldOffset(0,u,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,u){return o.startSequenceType(a),o.addElemType(a,u),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,u,l,d){return a.prep(4,12),a.writeInt32(d),a.writeInt32(l),a.writeInt32(u),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNodeEdge(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,u){a.addFieldInt32(0,u,0)}static addInputEdges(a,u){a.addFieldOffset(1,u,0)}static startInputEdgesVector(a,u){a.startVector(12,u,4)}static addOutputEdges(a,u){a.addFieldOffset(2,u,0)}static startOutputEdgesVector(a,u){a.startVector(12,u,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,u,l,d){return o.startNodeEdge(a),o.addNodeIndex(a,u),o.addInputEdges(a,l),o.addOutputEdges(a,d),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNode(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let u=this.bb.__offset(this.bb_pos,18);return u?this.bb.__string(this.bb_pos+u,a):null}inputs(a,u){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?(u||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let u=this.bb.__offset(this.bb_pos,26);return u?this.bb.readInt32(this.bb.__vector(this.bb_pos+u)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDomain(a,u){a.addFieldOffset(2,u,0)}static addSinceVersion(a,u){a.addFieldInt32(3,u,0)}static addIndex(a,u){a.addFieldInt32(4,u,0)}static addOpType(a,u){a.addFieldOffset(5,u,0)}static addType(a,u){a.addFieldInt32(6,u,0)}static addExecutionProviderType(a,u){a.addFieldOffset(7,u,0)}static addInputs(a,u){a.addFieldOffset(8,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(9,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addAttributes(a,u){a.addFieldOffset(10,u,0)}static createAttributesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startAttributesVector(a,u){a.startVector(4,u,4)}static addInputArgCounts(a,u){a.addFieldOffset(11,u,0)}static createInputArgCountsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startInputArgCountsVector(a,u){a.startVector(4,u,4)}static addImplicitInputs(a,u){a.addFieldOffset(12,u,0)}static createImplicitInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startImplicitInputsVector(a,u){a.startVector(4,u,4)}static endNode(a){return a.endObject()}static createNode(a,u,l,d,p,m,b,v,w,S,I,_,O,E){return o.startNode(a),o.addName(a,u),o.addDocString(a,l),o.addDomain(a,d),o.addSinceVersion(a,p),o.addIndex(a,m),o.addOpType(a,b),o.addType(a,v),o.addExecutionProviderType(a,w),o.addInputs(a,S),o.addOutputs(a,I),o.addAttributes(a,_),o.addInputArgCounts(a,O),o.addImplicitInputs(a,E),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsValueInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldOffset(2,u,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,u,l,d){return o.startValueInfo(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTypeInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__union(a,this.bb_pos+u):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,u){a.addFieldOffset(0,u,0)}static addValueType(a,u){a.addFieldInt8(1,u,0)}static addValue(a,u){a.addFieldOffset(2,u,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,u,l,d){return o.startTypeInfo(a),o.addDenotation(a,u),o.addValueType(a,l),o.addValue(a,d),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsOperatorSetId(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,u){a.addFieldOffset(0,u,0)}static addVersion(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,u,l){return o.startOperatorSetId(a),o.addDomain(a,u),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.readUint8(this.bb.__vector(this.bb_pos+u)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static addDataType(a,u){a.addFieldInt32(3,u,0)}static addRawData(a,u){a.addFieldOffset(4,u,0)}static createRawDataVector(a,u){a.startVector(1,u.length,1);for(let l=u.length-1;l>=0;l--)a.addInt8(u[l]);return a.endVector()}static startRawDataVector(a,u){a.startVector(1,u,1)}static addStringData(a,u){a.addFieldOffset(5,u,0)}static createStringDataVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringDataVector(a,u){a.startVector(4,u,4)}static endTensor(a){return a.endObject()}static createTensor(a,u,l,d,p,m,b){return o.startTensor(a),o.addName(a,u),o.addDocString(a,l),o.addDims(a,d),o.addDataType(a,p),o.addRawData(a,m),o.addStringData(a,b),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSparseTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}indices(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,u){a.addFieldOffset(0,u,0)}static addIndices(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,u,l,d){return o.startSparseTensor(a),o.addValues(a,u),o.addIndices(a,l),o.addDims(a,d),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsAttribute(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}t(a){let u=this.bb.__offset(this.bb_pos,16);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}g(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}floats(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.readFloat32(this.bb.__vector(this.bb_pos+u)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let u=this.bb.__offset(this.bb_pos,22);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,u){let l=this.bb.__offset(this.bb_pos,26);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?(u||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldInt32(2,u,0)}static addF(a,u){a.addFieldFloat32(3,u,0)}static addI(a,u){a.addFieldInt64(4,u,a.createLong(0,0))}static addS(a,u){a.addFieldOffset(5,u,0)}static addT(a,u){a.addFieldOffset(6,u,0)}static addG(a,u){a.addFieldOffset(7,u,0)}static addFloats(a,u){a.addFieldOffset(8,u,0)}static createFloatsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addFloat32(u[l]);return a.endVector()}static startFloatsVector(a,u){a.startVector(4,u,4)}static addInts(a,u){a.addFieldOffset(9,u,0)}static createIntsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startIntsVector(a,u){a.startVector(8,u,8)}static addStrings(a,u){a.addFieldOffset(10,u,0)}static createStringsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringsVector(a,u){a.startVector(4,u,4)}static addTensors(a,u){a.addFieldOffset(11,u,0)}static createTensorsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startTensorsVector(a,u){a.startVector(4,u,4)}static addGraphs(a,u){a.addFieldOffset(12,u,0)}static createGraphsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startGraphsVector(a,u){a.startVector(4,u,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,u,l,d,p,m,b,v,w,S,I,_,O,E){return o.startAttribute(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.addF(a,p),o.addI(a,m),o.addS(a,b),o.addT(a,v),o.addG(a,w),o.addFloats(a,S),o.addInts(a,I),o.addStrings(a,_),o.addTensors(a,O),o.addGraphs(a,E),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsGraph(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,u){let l=this.bb.__offset(this.bb_pos,12);return l?(u||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,u){let l=this.bb.__offset(this.bb_pos,18);return l?(u||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,u){a.addFieldOffset(0,u,0)}static createInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInitializersVector(a,u){a.startVector(4,u,4)}static addNodeArgs(a,u){a.addFieldOffset(1,u,0)}static createNodeArgsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeArgsVector(a,u){a.startVector(4,u,4)}static addNodes(a,u){a.addFieldOffset(2,u,0)}static createNodesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodesVector(a,u){a.startVector(4,u,4)}static addMaxNodeIndex(a,u){a.addFieldInt32(3,u,0)}static addNodeEdges(a,u){a.addFieldOffset(4,u,0)}static createNodeEdgesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeEdgesVector(a,u){a.startVector(4,u,4)}static addInputs(a,u){a.addFieldOffset(5,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(6,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addSparseInitializers(a,u){a.addFieldOffset(7,u,0)}static createSparseInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSparseInitializersVector(a,u){a.startVector(4,u,4)}static endGraph(a){return a.endObject()}static createGraph(a,u,l,d,p,m,b,v,w){return o.startGraph(a),o.addInitializers(a,u),o.addNodeArgs(a,l),o.addNodes(a,d),o.addMaxNodeIndex(a,p),o.addNodeEdges(a,m),o.addInputs(a,b),o.addOutputs(a,v),o.addSparseInitializers(a,w),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsModel(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}producerVersion(a){let u=this.bb.__offset(this.bb_pos,10);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.__string(this.bb_pos+u,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let u=this.bb.__offset(this.bb_pos,16);return u?this.bb.__string(this.bb_pos+u,a):null}graph(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}graphDocString(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.__string(this.bb_pos+u,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,u){a.addFieldInt64(0,u,a.createLong(0,0))}static addOpsetImport(a,u){a.addFieldOffset(1,u,0)}static createOpsetImportVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOpsetImportVector(a,u){a.startVector(4,u,4)}static addProducerName(a,u){a.addFieldOffset(2,u,0)}static addProducerVersion(a,u){a.addFieldOffset(3,u,0)}static addDomain(a,u){a.addFieldOffset(4,u,0)}static addModelVersion(a,u){a.addFieldInt64(5,u,a.createLong(0,0))}static addDocString(a,u){a.addFieldOffset(6,u,0)}static addGraph(a,u){a.addFieldOffset(7,u,0)}static addGraphDocString(a,u){a.addFieldOffset(8,u,0)}static endModel(a){return a.endObject()}static createModel(a,u,l,d,p,m,b,v,w,S){return o.startModel(a),o.addIrVersion(a,u),o.addOpsetImport(a,l),o.addProducerName(a,d),o.addProducerVersion(a,p),o.addDomain(a,m),o.addModelVersion(a,b),o.addDocString(a,v),o.addGraph(a,w),o.addGraphDocString(a,S),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsKernelCreateInfos(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.readUint32(this.bb.__vector(this.bb_pos+u)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.readUint64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,u){a.addFieldOffset(0,u,0)}static createNodeIndicesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startNodeIndicesVector(a,u){a.startVector(4,u,4)}static addKernelDefHashes(a,u){a.addFieldOffset(1,u,0)}static createKernelDefHashesVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startKernelDefHashesVector(a,u){a.startVector(8,u,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,u,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,u),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSubGraphSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,u){a.addFieldOffset(0,u,0)}static addSessionState(a,u){a.addFieldOffset(1,u,0)}static endSubGraphSessionState(a){let u=a.endObject();return a.requiredField(u,4),u}static createSubGraphSessionState(a,u,l){return o.startSubGraphSessionState(a),o.addGraphId(a,u),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}subGraphSessionStates(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,u){a.addFieldOffset(0,u,0)}static addSubGraphSessionStates(a,u){a.addFieldOffset(1,u,0)}static createSubGraphSessionStatesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,u){a.startVector(4,u,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,u,l){return o.startSessionState(a),o.addKernels(a,u),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsInferenceSession(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,u){return a.setPosition(a.position()+N.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}model(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,u){a.addFieldOffset(0,u,0)}static addModel(a,u){a.addFieldOffset(1,u,0)}static addSessionState(a,u){a.addFieldOffset(2,u,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,u){a.finish(u,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,u){a.finish(u,"ORTM",!0)}static createInferenceSession(a,u,l,d){return o.startInferenceSession(a),o.addOrtVersion(a,u),o.addModel(a,l),o.addSessionState(a,d),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={})});var Ld=st((PT,Md)=>{"use strict";Md.exports=lv;function lv(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,u){n[t]=function(d){if(i)if(i=!1,d)u(d);else{for(var p=new Array(arguments.length-1),m=0;m<p.length;)p[m++]=arguments[m];a.apply(null,p)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,u(l))}})}});var Gd=st(Vd=>{"use strict";var qi=Vd;qi.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var Zn=new Array(64),Ud=new Array(123);for(wr=0;wr<64;)Ud[Zn[wr]=wr<26?wr+65:wr<52?wr+71:wr<62?wr-4:wr-59|43]=wr++;var wr;qi.encode=function(e,n,t){for(var o=null,i=[],s=0,a=0,u;n<t;){var l=e[n++];switch(a){case 0:i[s++]=Zn[l>>2],u=(l&3)<<4,a=1;break;case 1:i[s++]=Zn[u|l>>4],u=(l&15)<<2,a=2;break;case 2:i[s++]=Zn[u|l>>6],i[s++]=Zn[l&63],a=0;break}s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),s=0)}return a&&(i[s++]=Zn[u],i[s++]=61,a===1&&(i[s++]=61)),o?(s&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))};var Fd="invalid encoding";qi.decode=function(e,n,t){for(var o=t,i=0,s,a=0;a<e.length;){var u=e.charCodeAt(a++);if(u===61&&i>1)break;if((u=Ud[u])===void 0)throw Error(Fd);switch(i){case 0:s=u,i=1;break;case 1:n[t++]=s<<2|(u&48)>>4,s=u,i=2;break;case 2:n[t++]=(s&15)<<4|(u&60)>>2,s=u,i=3;break;case 3:n[t++]=(s&3)<<6|u,i=0;break}}if(i===1)throw Error(Fd);return t-o};qi.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Hd=st((DT,Wd)=>{"use strict";Wd.exports=ji;function ji(){this._listeners={}}ji.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};ji.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};ji.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var Jd=st((BT,Zd)=>{"use strict";Zd.exports=qd(qd);function qd(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3]}function i(u,l,d){e[0]=u,l[d]=n[3],l[d+1]=n[2],l[d+2]=n[1],l[d+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],e[0]}function a(u,l){return n[3]=u[l],n[2]=u[l+1],n[1]=u[l+2],n[0]=u[l+3],e[0]}r.readFloatLE=t?s:a,r.readFloatBE=t?a:s}():function(){function e(t,o,i,s){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,s);else if(isNaN(o))t(2143289344,i,s);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,s);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,s);else{var u=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-u)*8388608)&8388607;t((a<<31|u+127<<23|l)>>>0,i,s)}}r.writeFloatLE=e.bind(null,jd),r.writeFloatBE=e.bind(null,Kd);function n(t,o,i){var s=t(o,i),a=(s>>31)*2+1,u=s>>>23&255,l=s&8388607;return u===255?l?NaN:a*(1/0):u===0?a*1401298464324817e-60*l:a*Math.pow(2,u-150)*(l+8388608)}r.readFloatLE=n.bind(null,Yd),r.readFloatBE=n.bind(null,Xd)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3],l[d+4]=n[4],l[d+5]=n[5],l[d+6]=n[6],l[d+7]=n[7]}function i(u,l,d){e[0]=u,l[d]=n[7],l[d+1]=n[6],l[d+2]=n[5],l[d+3]=n[4],l[d+4]=n[3],l[d+5]=n[2],l[d+6]=n[1],l[d+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],n[4]=u[l+4],n[5]=u[l+5],n[6]=u[l+6],n[7]=u[l+7],e[0]}function a(u,l){return n[7]=u[l],n[6]=u[l+1],n[5]=u[l+2],n[4]=u[l+3],n[3]=u[l+4],n[2]=u[l+5],n[1]=u[l+6],n[0]=u[l+7],e[0]}r.readDoubleLE=t?s:a,r.readDoubleBE=t?a:s}():function(){function e(t,o,i,s,a,u){var l=s<0?1:0;if(l&&(s=-s),s===0)t(0,a,u+o),t(1/s>0?0:2147483648,a,u+i);else if(isNaN(s))t(0,a,u+o),t(2146959360,a,u+i);else if(s>17976931348623157e292)t(0,a,u+o),t((l<<31|2146435072)>>>0,a,u+i);else{var d;if(s<22250738585072014e-324)d=s/5e-324,t(d>>>0,a,u+o),t((l<<31|d/4294967296)>>>0,a,u+i);else{var p=Math.floor(Math.log(s)/Math.LN2);p===1024&&(p=1023),d=s*Math.pow(2,-p),t(d*4503599627370496>>>0,a,u+o),t((l<<31|p+1023<<20|d*1048576&1048575)>>>0,a,u+i)}}}r.writeDoubleLE=e.bind(null,jd,0,4),r.writeDoubleBE=e.bind(null,Kd,4,0);function n(t,o,i,s,a){var u=t(s,a+o),l=t(s,a+i),d=(l>>31)*2+1,p=l>>>20&2047,m=4294967296*(l&1048575)+u;return p===2047?m?NaN:d*(1/0):p===0?d*5e-324*m:d*Math.pow(2,p-1075)*(m+4503599627370496)}r.readDoubleLE=n.bind(null,Yd,0,4),r.readDoubleBE=n.bind(null,Xd,4,0)}(),r}function jd(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function Kd(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function Yd(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function Xd(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var Qd=st((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var tc=st(ec=>{"use strict";var Os=ec;Os.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};Os.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,s=[],a=0,u;n<t;)u=e[n++],u<128?s[a++]=u:u>191&&u<224?s[a++]=(u&31)<<6|e[n++]&63:u>239&&u<365?(u=((u&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,s[a++]=55296+(u>>10),s[a++]=56320+(u&1023)):s[a++]=(u&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,s.slice(0,a))),i.join("")):String.fromCharCode.apply(String,s.slice(0,a))};Os.write=function(e,n,t){for(var o=t,i,s,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((s=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(s&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var nc=st((zT,rc)=>{"use strict";rc.exports=dv;function dv(r,e,n){var t=n||8192,o=t>>>1,i=null,s=t;return function(u){if(u<1||u>o)return r(u);s+u>t&&(i=r(t),s=0);var l=e.call(i,s,s+=u);return s&7&&(s=(s|7)+1),l}}});var ic=st((NT,oc)=>{"use strict";oc.exports=Tt;var Mo=on();function Tt(r,e){this.lo=r>>>0,this.hi=e>>>0}var $n=Tt.zero=new Tt(0,0);$n.toNumber=function(){return 0};$n.zzEncode=$n.zzDecode=function(){return this};$n.length=function(){return 1};var cv=Tt.zeroHash="\0\0\0\0\0\0\0\0";Tt.fromNumber=function(e){if(e===0)return $n;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new Tt(t,o)};Tt.from=function(e){if(typeof e=="number")return Tt.fromNumber(e);if(Mo.isString(e))if(Mo.Long)e=Mo.Long.fromString(e);else return Tt.fromNumber(parseInt(e,10));return e.low||e.high?new Tt(e.low>>>0,e.high>>>0):$n};Tt.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};Tt.prototype.toLong=function(e){return Mo.Long?new Mo.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var nn=String.prototype.charCodeAt;Tt.fromHash=function(e){return e===cv?$n:new Tt((nn.call(e,0)|nn.call(e,1)<<8|nn.call(e,2)<<16|nn.call(e,3)<<24)>>>0,(nn.call(e,4)|nn.call(e,5)<<8|nn.call(e,6)<<16|nn.call(e,7)<<24)>>>0)};Tt.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};Tt.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};Tt.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};Tt.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var on=st(Es=>{"use strict";var pe=Es;pe.asPromise=Ld();pe.base64=Gd();pe.EventEmitter=Hd();pe.float=Jd();pe.inquire=Qd();pe.utf8=tc();pe.pool=nc();pe.LongBits=ic();pe.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);pe.global=pe.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||Es;pe.emptyArray=Object.freeze?Object.freeze([]):[];pe.emptyObject=Object.freeze?Object.freeze({}):{};pe.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};pe.isString=function(e){return typeof e=="string"||e instanceof String};pe.isObject=function(e){return e&&typeof e=="object"};pe.isset=pe.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};pe.Buffer=function(){try{var r=pe.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();pe._Buffer_from=null;pe._Buffer_allocUnsafe=null;pe.newBuffer=function(e){return typeof e=="number"?pe.Buffer?pe._Buffer_allocUnsafe(e):new pe.Array(e):pe.Buffer?pe._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};pe.Array=typeof Uint8Array<"u"?Uint8Array:Array;pe.Long=pe.global.dcodeIO&&pe.global.dcodeIO.Long||pe.global.Long||pe.inquire("long");pe.key2Re=/^true|false|0|1$/;pe.key32Re=/^-?(?:0|[1-9][0-9]*)$/;pe.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;pe.longToHash=function(e){return e?pe.LongBits.from(e).toHash():pe.LongBits.zeroHash};pe.longFromHash=function(e,n){var t=pe.LongBits.fromHash(e);return pe.Long?pe.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function ac(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}pe.merge=ac;pe.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function sc(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&ac(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}pe.newError=sc;pe.ProtocolError=sc("ProtocolError");pe.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};pe.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};pe.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};pe._configure=function(){var r=pe.Buffer;if(!r){pe._Buffer_from=pe._Buffer_allocUnsafe=null;return}pe._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},pe._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var zs=st((LT,cc)=>{"use strict";cc.exports=We;var lr=on(),Cs,Ki=lr.LongBits,uc=lr.base64,lc=lr.utf8;function Lo(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function ks(){}function fv(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function We(){this.len=0,this.head=new Lo(ks,0,0),this.tail=this.head,this.states=null}var dc=function(){return lr.Buffer?function(){return(We.create=function(){return new Cs})()}:function(){return new We}};We.create=dc();We.alloc=function(e){return new lr.Array(e)};lr.Array!==Array&&(We.alloc=lr.pool(We.alloc,lr.Array.prototype.subarray));We.prototype._push=function(e,n,t){return this.tail=this.tail.next=new Lo(e,n,t),this.len+=n,this};function Ds(r,e,n){e[n]=r&255}function pv(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function Bs(r,e){this.len=r,this.next=void 0,this.val=e}Bs.prototype=Object.create(Lo.prototype);Bs.prototype.fn=pv;We.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new Bs((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};We.prototype.int32=function(e){return e<0?this._push(Rs,10,Ki.fromNumber(e)):this.uint32(e)};We.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function Rs(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}We.prototype.uint64=function(e){var n=Ki.from(e);return this._push(Rs,n.length(),n)};We.prototype.int64=We.prototype.uint64;We.prototype.sint64=function(e){var n=Ki.from(e).zzEncode();return this._push(Rs,n.length(),n)};We.prototype.bool=function(e){return this._push(Ds,1,e?1:0)};function Ps(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}We.prototype.fixed32=function(e){return this._push(Ps,4,e>>>0)};We.prototype.sfixed32=We.prototype.fixed32;We.prototype.fixed64=function(e){var n=Ki.from(e);return this._push(Ps,4,n.lo)._push(Ps,4,n.hi)};We.prototype.sfixed64=We.prototype.fixed64;We.prototype.float=function(e){return this._push(lr.float.writeFloatLE,4,e)};We.prototype.double=function(e){return this._push(lr.float.writeDoubleLE,8,e)};var hv=lr.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};We.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(Ds,1,0);if(lr.isString(e)){var t=We.alloc(n=uc.length(e));uc.decode(e,t,0),e=t}return this.uint32(n)._push(hv,n,e)};We.prototype.string=function(e){var n=lc.length(e);return n?this.uint32(n)._push(lc.write,n,e):this._push(Ds,1,0)};We.prototype.fork=function(){return this.states=new fv(this),this.head=this.tail=new Lo(ks,0,0),this.len=0,this};We.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Lo(ks,0,0),this.len=0),this};We.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};We.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};We._configure=function(r){Cs=r,We.create=dc(),Cs._configure()}});var hc=st((FT,pc)=>{"use strict";pc.exports=Cr;var fc=zs();(Cr.prototype=Object.create(fc.prototype)).constructor=Cr;var an=on();function Cr(){fc.call(this)}Cr._configure=function(){Cr.alloc=an._Buffer_allocUnsafe,Cr.writeBytesBuffer=an.Buffer&&an.Buffer.prototype instanceof Uint8Array&&an.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};Cr.prototype.bytes=function(e){an.isString(e)&&(e=an._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(Cr.writeBytesBuffer,n,e),this};function mv(r,e,n){r.length<40?an.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}Cr.prototype.string=function(e){var n=an.Buffer.byteLength(e);return this.uint32(n),n&&this._push(mv,n,e),this};Cr._configure()});var Ls=st((UT,vc)=>{"use strict";vc.exports=gt;var Pr=on(),Ms,bc=Pr.LongBits,gv=Pr.utf8;function xr(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function gt(r){this.buf=r,this.pos=0,this.len=r.length}var mc=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new gt(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new gt(e);throw Error("illegal buffer")},yc=function(){return Pr.Buffer?function(n){return(gt.create=function(o){return Pr.Buffer.isBuffer(o)?new Ms(o):mc(o)})(n)}:mc};gt.create=yc();gt.prototype._slice=Pr.Array.prototype.subarray||Pr.Array.prototype.slice;gt.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,xr(this,10);return e}}();gt.prototype.int32=function(){return this.uint32()|0};gt.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function Ns(){var r=new bc(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw xr(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw xr(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}gt.prototype.bool=function(){return this.uint32()!==0};function Yi(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}gt.prototype.fixed32=function(){if(this.pos+4>this.len)throw xr(this,4);return Yi(this.buf,this.pos+=4)};gt.prototype.sfixed32=function(){if(this.pos+4>this.len)throw xr(this,4);return Yi(this.buf,this.pos+=4)|0};function gc(){if(this.pos+8>this.len)throw xr(this,8);return new bc(Yi(this.buf,this.pos+=4),Yi(this.buf,this.pos+=4))}gt.prototype.float=function(){if(this.pos+4>this.len)throw xr(this,4);var e=Pr.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};gt.prototype.double=function(){if(this.pos+8>this.len)throw xr(this,4);var e=Pr.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};gt.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw xr(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};gt.prototype.string=function(){var e=this.bytes();return gv.read(e,0,e.length)};gt.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw xr(this,e);this.pos+=e}else do if(this.pos>=this.len)throw xr(this);while(this.buf[this.pos++]&128);return this};gt.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};gt._configure=function(r){Ms=r,gt.create=yc(),Ms._configure();var e=Pr.Long?"toLong":"toNumber";Pr.merge(gt.prototype,{int64:function(){return Ns.call(this)[e](!1)},uint64:function(){return Ns.call(this)[e](!0)},sint64:function(){return Ns.call(this).zzDecode()[e](!1)},fixed64:function(){return gc.call(this)[e](!0)},sfixed64:function(){return gc.call(this)[e](!1)}})}});var $c=st((VT,_c)=>{"use strict";_c.exports=Tn;var xc=Ls();(Tn.prototype=Object.create(xc.prototype)).constructor=Tn;var wc=on();function Tn(r){xc.call(this,r)}Tn._configure=function(){wc.Buffer&&(Tn.prototype._slice=wc.Buffer.prototype.slice)};Tn.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};Tn._configure()});var Sc=st((GT,Tc)=>{"use strict";Tc.exports=Fo;var Fs=on();(Fo.prototype=Object.create(Fs.EventEmitter.prototype)).constructor=Fo;function Fo(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");Fs.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}Fo.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var s=this;if(!i)return Fs.asPromise(r,s,e,n,t,o);if(!s.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return s.rpcImpl(e,n[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(u,l){if(u)return s.emit("error",u,e),i(u);if(l===null){s.end(!0);return}if(!(l instanceof t))try{l=t[s.responseDelimited?"decodeDelimited":"decode"](l)}catch(d){return s.emit("error",d,e),i(d)}return s.emit("data",l,e),i(null,l)})}catch(a){s.emit("error",a,e),setTimeout(function(){i(a)},0);return}};Fo.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var Ac=st(Ic=>{"use strict";var bv=Ic;bv.Service=Sc()});var Ec=st((HT,Oc)=>{"use strict";Oc.exports={}});var kc=st(Pc=>{"use strict";var Yt=Pc;Yt.build="minimal";Yt.Writer=zs();Yt.BufferWriter=hc();Yt.Reader=Ls();Yt.BufferReader=$c();Yt.util=on();Yt.rpc=Ac();Yt.roots=Ec();Yt.configure=Cc;function Cc(){Yt.util._configure(),Yt.Writer._configure(Yt.BufferWriter),Yt.Reader._configure(Yt.BufferReader)}Cc()});var Bc=st((jT,Dc)=>{"use strict";Dc.exports=kc()});var Jn=st((KT,Rc)=>{"use strict";var lt=Bc(),Q=lt.Reader,bt=lt.Writer,P=lt.util,A=lt.roots.default||(lt.roots.default={});A.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=P.Long?P.Long.fromBits(0,0,!1):0,e.prototype.s=P.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=P.emptyArray,e.prototype.ints=P.emptyArray,e.prototype.strings=P.emptyArray,e.prototype.tensors=P.emptyArray,e.prototype.graphs=P.emptyArray,e.prototype.sparseTensors=P.emptyArray,e.prototype.typeProtos=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&A.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&A.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)A.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)A.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&A.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)A.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&A.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)A.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 21:{s.refAttrName=t.string();break}case 13:{s.docString=t.string();break}case 20:{s.type=t.int32();break}case 2:{s.f=t.float();break}case 3:{s.i=t.int64();break}case 4:{s.s=t.bytes();break}case 5:{s.t=A.onnx.TensorProto.decode(t,t.uint32());break}case 6:{s.g=A.onnx.GraphProto.decode(t,t.uint32());break}case 22:{s.sparseTensor=A.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{s.tp=A.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(s.floats&&s.floats.length||(s.floats=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floats.push(t.float());else s.floats.push(t.float());break}case 8:{if(s.ints&&s.ints.length||(s.ints=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.ints.push(t.int64());else s.ints.push(t.int64());break}case 9:{s.strings&&s.strings.length||(s.strings=[]),s.strings.push(t.bytes());break}case 10:{s.tensors&&s.tensors.length||(s.tensors=[]),s.tensors.push(A.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{s.graphs&&s.graphs.length||(s.graphs=[]),s.graphs.push(A.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{s.sparseTensors&&s.sparseTensors.length||(s.sparseTensors=[]),s.sparseTensors.push(A.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{s.typeProtos&&s.typeProtos.length||(s.typeProtos=[]),s.typeProtos.push(A.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!P.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!P.isInteger(t.i)&&!(t.i&&P.isInteger(t.i.low)&&P.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||P.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=A.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=A.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=A.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=A.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!P.isInteger(t.ints[i])&&!(t.ints[i]&&P.isInteger(t.ints[i].low)&&P.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||P.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=A.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=A.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=A.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=A.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof A.onnx.AttributeProto)return t;var o=new A.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(P.Long?(o.i=P.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new P.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?P.base64.decode(t.s,o.s=P.newBuffer(P.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=A.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=A.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=A.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=A.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)P.Long?(o.ints[i]=P.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new P.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?P.base64.decode(t.strings[i],o.strings[i]=P.newBuffer(P.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=A.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=A.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=A.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=A.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,P.Long){var s=new P.Long(0,0,!1);i.i=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=P.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?P.Long.prototype.toString.call(t.i):o.longs===Number?new P.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?P.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=A.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=A.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?P.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new P.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?P.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=A.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=A.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=A.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=A.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?A.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:A.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=A.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=A.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=bt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&A.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 2:{s.type=A.onnx.TypeProto.decode(t,t.uint32());break}case 3:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=A.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof A.onnx.ValueInfoProto)return t;var o=new A.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=A.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=A.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=P.emptyArray,e.prototype.output=P.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=P.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)A.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 2:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 3:{s.name=t.string();break}case 4:{s.opType=t.string();break}case 7:{s.domain=t.string();break}case 5:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(A.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!P.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!P.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!P.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!P.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=A.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof A.onnx.NodeProto)return t;var o=new A.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=A.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=A.onnx.AttributeProto.toObject(t.attribute[s],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=P.emptyArray,e.prototype.updateBinding=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&A.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&A.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)A.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)A.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.initialization=A.onnx.GraphProto.decode(t,t.uint32());break}case 2:{s.algorithm=A.onnx.GraphProto.decode(t,t.uint32());break}case 3:{s.initializationBinding&&s.initializationBinding.length||(s.initializationBinding=[]),s.initializationBinding.push(A.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{s.updateBinding&&s.updateBinding.length||(s.updateBinding=[]),s.updateBinding.push(A.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=A.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=A.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=A.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=A.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof A.onnx.TrainingInfoProto)return t;var o=new A.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=A.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=A.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=A.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=A.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=A.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=A.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var s=0;s<t.initializationBinding.length;++s)i.initializationBinding[s]=A.onnx.StringStringEntryProto.toObject(t.initializationBinding[s],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var s=0;s<t.updateBinding.length;++s)i.updateBinding[s]=A.onnx.StringStringEntryProto.toObject(t.updateBinding[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=P.Long?P.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=P.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=P.Long?P.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=P.emptyArray,e.prototype.trainingInfo=P.emptyArray,e.prototype.functions=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&A.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)A.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)A.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)A.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)A.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.irVersion=t.int64();break}case 8:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(A.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{s.producerName=t.string();break}case 3:{s.producerVersion=t.string();break}case 4:{s.domain=t.string();break}case 5:{s.modelVersion=t.int64();break}case 6:{s.docString=t.string();break}case 7:{s.graph=A.onnx.GraphProto.decode(t,t.uint32());break}case 14:{s.metadataProps&&s.metadataProps.length||(s.metadataProps=[]),s.metadataProps.push(A.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{s.trainingInfo&&s.trainingInfo.length||(s.trainingInfo=[]),s.trainingInfo.push(A.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{s.functions&&s.functions.length||(s.functions=[]),s.functions.push(A.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!P.isInteger(t.irVersion)&&!(t.irVersion&&P.isInteger(t.irVersion.low)&&P.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=A.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!P.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!P.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!P.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!P.isInteger(t.modelVersion)&&!(t.modelVersion&&P.isInteger(t.modelVersion.low)&&P.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=A.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=A.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=A.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=A.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof A.onnx.ModelProto)return t;var o=new A.onnx.ModelProto;if(t.irVersion!=null&&(P.Long?(o.irVersion=P.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new P.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=A.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(P.Long?(o.modelVersion=P.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new P.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=A.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=A.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=A.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=A.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(P.Long){var s=new P.Long(0,0,!1);i.irVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",P.Long){var s=new P.Long(0,0,!1);i.modelVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?P.Long.prototype.toString.call(t.irVersion):o.longs===Number?new P.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?P.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new P.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=A.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=A.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=A.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=A.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=A.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=bt.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.key=t.string();break}case 2:{s.value=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!P.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!P.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof A.onnx.StringStringEntryProto)return t;var o=new A.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)A.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.tensorName=t.string();break}case 2:{s.quantParameterTensorNames&&s.quantParameterTensorNames.length||(s.quantParameterTensorNames=[]),s.quantParameterTensorNames.push(A.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!P.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=A.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof A.onnx.TensorAnnotation)return t;var o=new A.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=A.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var s=0;s<t.quantParameterTensorNames.length;++s)i.quantParameterTensorNames[s]=A.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=P.emptyArray,e.prototype.name="",e.prototype.initializer=P.emptyArray,e.prototype.sparseInitializer=P.emptyArray,e.prototype.docString="",e.prototype.input=P.emptyArray,e.prototype.output=P.emptyArray,e.prototype.valueInfo=P.emptyArray,e.prototype.quantizationAnnotation=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)A.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)A.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)A.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)A.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)A.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)A.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)A.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.node&&s.node.length||(s.node=[]),s.node.push(A.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{s.name=t.string();break}case 5:{s.initializer&&s.initializer.length||(s.initializer=[]),s.initializer.push(A.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{s.sparseInitializer&&s.sparseInitializer.length||(s.sparseInitializer=[]),s.sparseInitializer.push(A.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{s.docString=t.string();break}case 11:{s.input&&s.input.length||(s.input=[]),s.input.push(A.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{s.output&&s.output.length||(s.output=[]),s.output.push(A.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{s.valueInfo&&s.valueInfo.length||(s.valueInfo=[]),s.valueInfo.push(A.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{s.quantizationAnnotation&&s.quantizationAnnotation.length||(s.quantizationAnnotation=[]),s.quantizationAnnotation.push(A.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=A.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=A.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=A.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=A.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=A.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=A.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=A.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof A.onnx.GraphProto)return t;var o=new A.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=A.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=A.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=A.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=A.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=A.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=A.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=A.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=A.onnx.NodeProto.toObject(t.node[s],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var s=0;s<t.initializer.length;++s)i.initializer[s]=A.onnx.TensorProto.toObject(t.initializer[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=A.onnx.ValueInfoProto.toObject(t.input[s],o)}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=A.onnx.ValueInfoProto.toObject(t.output[s],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var s=0;s<t.valueInfo.length;++s)i.valueInfo[s]=A.onnx.ValueInfoProto.toObject(t.valueInfo[s],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var s=0;s<t.quantizationAnnotation.length;++s)i.quantizationAnnotation[s]=A.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[s],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var s=0;s<t.sparseInitializer.length;++s)i.sparseInitializer[s]=A.onnx.SparseTensorProto.toObject(t.sparseInitializer[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=P.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=P.emptyArray,e.prototype.int32Data=P.emptyArray,e.prototype.stringData=P.emptyArray,e.prototype.int64Data=P.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=P.newBuffer([]),e.prototype.externalData=P.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=P.emptyArray,e.prototype.uint64Data=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&A.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)A.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}case 2:{s.dataType=t.int32();break}case 3:{s.segment=A.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(s.floatData&&s.floatData.length||(s.floatData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floatData.push(t.float());else s.floatData.push(t.float());break}case 5:{if(s.int32Data&&s.int32Data.length||(s.int32Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int32Data.push(t.int32());else s.int32Data.push(t.int32());break}case 6:{s.stringData&&s.stringData.length||(s.stringData=[]),s.stringData.push(t.bytes());break}case 7:{if(s.int64Data&&s.int64Data.length||(s.int64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int64Data.push(t.int64());else s.int64Data.push(t.int64());break}case 8:{s.name=t.string();break}case 12:{s.docString=t.string();break}case 9:{s.rawData=t.bytes();break}case 13:{s.externalData&&s.externalData.length||(s.externalData=[]),s.externalData.push(A.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{s.dataLocation=t.int32();break}case 10:{if(s.doubleData&&s.doubleData.length||(s.doubleData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.doubleData.push(t.double());else s.doubleData.push(t.double());break}case 11:{if(s.uint64Data&&s.uint64Data.length||(s.uint64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.uint64Data.push(t.uint64());else s.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!P.isInteger(t.dims[o])&&!(t.dims[o]&&P.isInteger(t.dims[o].low)&&P.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!P.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=A.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!P.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||P.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!P.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&P.isInteger(t.int64Data[o].low)&&P.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||P.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=A.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!P.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&P.isInteger(t.uint64Data[o].low)&&P.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof A.onnx.TensorProto)return t;var o=new A.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)P.Long?(o.dims[i]=P.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new P.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=A.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?P.base64.decode(t.stringData[i],o.stringData[i]=P.newBuffer(P.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)P.Long?(o.int64Data[i]=P.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new P.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?P.base64.decode(t.rawData,o.rawData=P.newBuffer(P.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=A.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)P.Long?(o.uint64Data[i]=P.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new P.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=P.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?P.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new P.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=A.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var s=0;s<t.floatData.length;++s)i.floatData[s]=o.json&&!isFinite(t.floatData[s])?String(t.floatData[s]):t.floatData[s]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var s=0;s<t.int32Data.length;++s)i.int32Data[s]=t.int32Data[s]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var s=0;s<t.stringData.length;++s)i.stringData[s]=o.bytes===String?P.base64.encode(t.stringData[s],0,t.stringData[s].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[s]):t.stringData[s]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var s=0;s<t.int64Data.length;++s)typeof t.int64Data[s]=="number"?i.int64Data[s]=o.longs===String?String(t.int64Data[s]):t.int64Data[s]:i.int64Data[s]=o.longs===String?P.Long.prototype.toString.call(t.int64Data[s]):o.longs===Number?new P.LongBits(t.int64Data[s].low>>>0,t.int64Data[s].high>>>0).toNumber():t.int64Data[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?P.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var s=0;s<t.doubleData.length;++s)i.doubleData[s]=o.json&&!isFinite(t.doubleData[s])?String(t.doubleData[s]):t.doubleData[s]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var s=0;s<t.uint64Data.length;++s)typeof t.uint64Data[s]=="number"?i.uint64Data[s]=o.longs===String?String(t.uint64Data[s]):t.uint64Data[s]:i.uint64Data[s]=o.longs===String?P.Long.prototype.toString.call(t.uint64Data[s]):o.longs===Number?new P.LongBits(t.uint64Data[s].low>>>0,t.uint64Data[s].high>>>0).toNumber(!0):t.uint64Data[s]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var s=0;s<t.externalData.length;++s)i.externalData[s]=A.onnx.StringStringEntryProto.toObject(t.externalData[s],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?A.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:A.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=P.Long?P.Long.fromBits(0,0,!1):0,n.prototype.end=P.Long?P.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=bt.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof Q||(o=Q.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new A.onnx.TensorProto.Segment;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(u&7);break}}return a},n.decodeDelimited=function(o){return o instanceof Q||(o=new Q(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!P.isInteger(o.begin)&&!(o.begin&&P.isInteger(o.begin.low)&&P.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!P.isInteger(o.end)&&!(o.end&&P.isInteger(o.end.low)&&P.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof A.onnx.TensorProto.Segment)return o;var i=new A.onnx.TensorProto.Segment;return o.begin!=null&&(P.Long?(i.begin=P.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new P.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(P.Long?(i.end=P.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new P.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var s={};if(i.defaults){if(P.Long){var a=new P.Long(0,0,!1);s.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.begin=i.longs===String?"0":0;if(P.Long){var a=new P.Long(0,0,!1);s.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?s.begin=i.longs===String?String(o.begin):o.begin:s.begin=i.longs===String?P.Long.prototype.toString.call(o.begin):i.longs===Number?new P.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?s.end=i.longs===String?String(o.end):o.end:s.end=i.longs===String?P.Long.prototype.toString.call(o.end):i.longs===Number?new P.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),s},n.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&A.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&A.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.values=A.onnx.TensorProto.decode(t,t.uint32());break}case 2:{s.indices=A.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=A.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=A.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!P.isInteger(t.dims[i])&&!(t.dims[i]&&P.isInteger(t.dims[i].low)&&P.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof A.onnx.SparseTensorProto)return t;var o=new A.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=A.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=A.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)P.Long?(o.dims[i]=P.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new P.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=A.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=A.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?P.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new P.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)A.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.dim&&s.dim.length||(s.dim=[]),s.dim.push(A.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=A.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof A.onnx.TensorShapeProto)return t;var o=new A.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=A.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var s=0;s<t.dim.length;++s)i.dim[s]=A.onnx.TensorShapeProto.Dimension.toObject(t.dim[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:P.oneOfGetter(t=["dimValue","dimParam"]),set:P.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,s){return s||(s=bt.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&s.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&s.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&s.uint32(26).string(i.denotation),s},n.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},n.decode=function(i,s){i instanceof Q||(i=Q.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new A.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.dimValue=i.int64();break}case 2:{u.dimParam=i.string();break}case 3:{u.denotation=i.string();break}default:i.skipType(l&7);break}}return u},n.decodeDelimited=function(i){return i instanceof Q||(i=new Q(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var s={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(s.value=1,!P.isInteger(i.dimValue)&&!(i.dimValue&&P.isInteger(i.dimValue.low)&&P.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(s.value===1)return"value: multiple values";if(s.value=1,!P.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!P.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof A.onnx.TensorShapeProto.Dimension)return i;var s=new A.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(P.Long?(s.dimValue=P.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?s.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?s.dimValue=i.dimValue:typeof i.dimValue=="object"&&(s.dimValue=new P.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(s.dimParam=String(i.dimParam)),i.denotation!=null&&(s.denotation=String(i.denotation)),s},n.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=s.longs===String?String(i.dimValue):i.dimValue:a.dimValue=s.longs===String?P.Long.prototype.toString.call(i.dimValue):s.longs===Number?new P.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,s.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,s.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:P.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:P.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=bt.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&A.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&A.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&A.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&A.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&A.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof Q||(o=Q.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new A.onnx.TypeProto;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.tensorType=A.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=A.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=A.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=A.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=A.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(u&7);break}}return a},e.decodeDelimited=function(o){return o instanceof Q||(o=new Q(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var s=A.onnx.TypeProto.Tensor.verify(o.tensorType);if(s)return"tensorType."+s}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=A.onnx.TypeProto.Sequence.verify(o.sequenceType);if(s)return"sequenceType."+s}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=A.onnx.TypeProto.Map.verify(o.mapType);if(s)return"mapType."+s}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=A.onnx.TypeProto.Optional.verify(o.optionalType);if(s)return"optionalType."+s}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=A.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(s)return"sparseTensorType."+s}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!P.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof A.onnx.TypeProto)return o;var i=new A.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=A.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=A.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=A.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=A.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=A.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var s={};return i.defaults&&(s.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(s.tensorType=A.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(s.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(s.sequenceType=A.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(s.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(s.mapType=A.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(s.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(s.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(s.sparseTensorType=A.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(s.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(s.optionalType=A.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(s.value="optionalType")),s},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=bt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&A.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Q||(i=Q.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new A.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=A.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Q||(i=new Q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!P.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=A.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof A.onnx.TypeProto.Tensor)return i;var s=new A.onnx.TypeProto.Tensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");s.shape=A.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=A.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=bt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&A.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Q||(i=Q.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new A.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=A.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Q||(i=new Q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=A.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof A.onnx.TypeProto.Sequence)return i;var s=new A.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");s.elemType=A.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=A.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=bt.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&s.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&A.onnx.TypeProto.encode(i.valueType,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Q||(i=Q.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new A.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.keyType=i.int32();break}case 2:{u.valueType=A.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Q||(i=new Q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!P.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var s=A.onnx.TypeProto.verify(i.valueType);if(s)return"valueType."+s}return null},t.fromObject=function(i){if(i instanceof A.onnx.TypeProto.Map)return i;var s=new A.onnx.TypeProto.Map;if(i.keyType!=null&&(s.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");s.valueType=A.onnx.TypeProto.fromObject(i.valueType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=A.onnx.TypeProto.toObject(i.valueType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=bt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&A.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Q||(i=Q.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new A.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=A.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Q||(i=new Q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=A.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof A.onnx.TypeProto.Optional)return i;var s=new A.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");s.elemType=A.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=A.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=bt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&A.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Q||(i=Q.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new A.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=A.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Q||(i=new Q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!P.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=A.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof A.onnx.TypeProto.SparseTensor)return i;var s=new A.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");s.shape=A.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=A.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=P.Long?P.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=bt.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.domain=t.string();break}case 2:{s.version=t.int64();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!P.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!P.isInteger(t.version)&&!(t.version&&P.isInteger(t.version.low)&&P.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof A.onnx.OperatorSetIdProto)return t;var o=new A.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(P.Long?(o.version=P.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new P.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",P.Long){var s=new P.Long(0,0,!1);i.version=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?P.Long.prototype.toString.call(t.version):o.longs===Number?new P.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=P.emptyArray,e.prototype.output=P.emptyArray,e.prototype.attribute=P.emptyArray,e.prototype.attributeProto=P.emptyArray,e.prototype.node=P.emptyArray,e.prototype.docString="",e.prototype.opsetImport=P.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=bt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)A.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)A.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)A.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Q||(t=Q.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new A.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 4:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 5:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 6:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(t.string());break}case 11:{s.attributeProto&&s.attributeProto.length||(s.attributeProto=[]),s.attributeProto.push(A.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{s.node&&s.node.length||(s.node=[]),s.node.push(A.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{s.docString=t.string();break}case 9:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(A.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{s.domain=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Q||(t=new Q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!P.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!P.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!P.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=A.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=A.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=A.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!P.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof A.onnx.FunctionProto)return t;var o=new A.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=A.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=A.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=A.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=t.attribute[s]}if(t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=A.onnx.NodeProto.toObject(t.node[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var s=0;s<t.opsetImport.length;++s)i.opsetImport[s]=A.onnx.OperatorSetIdProto.toObject(t.opsetImport[s],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var s=0;s<t.attributeProto.length;++s)i.attributeProto[s]=A.onnx.AttributeProto.toObject(t.attributeProto[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();Rc.exports=A});function Qn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Vo(r){return new TextDecoder().decode(r)}var dt,Sn,Us,Vt,Xi,Ct,Xt,le,Uo,In,An,On,Xe=z(()=>{"use strict";Hi();As();dt=Kn(Jn());En();Sn=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},Us=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Vt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Us.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let s=r.calcShape(e.dims,n.dims);if(s){if(o&&!le.areEqual(s,e.dims))return;let a=le.size(s),u=o?e:new vt(s,i||e.type);if(s.length===0)u.set([],t(e.get([]),n.get([])));else{let l=new Array(s.length),d=new Array(e.dims.length),p=new Array(n.dims.length),m=0,b=0,v=!1,w=!1;e.dims.length===0&&(m=e.get([]),v=!0),n.dims.length===0&&(b=n.get([]),w=!0);let S;for(let I=0;I<a;I++){S=I;for(let _=s.length-1;_>=0;_--)l[_]=S%s[_],S=Math.floor(S/s[_]);v||(r.fillIndex(l,e.dims,d),m=e.get(d)),w||(r.fillIndex(l,n.dims,p),b=n.get(p)),u.set(l,t(m,b))}}return u}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let s=t-1-i,a=e[s]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(s)}return o}},Xi=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Vt.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Ct=class r{static tensorDataTypeFromProto(e){switch(e){case dt.onnx.TensorProto.DataType.INT8:return"int8";case dt.onnx.TensorProto.DataType.UINT8:return"uint8";case dt.onnx.TensorProto.DataType.BOOL:return"bool";case dt.onnx.TensorProto.DataType.INT16:return"int16";case dt.onnx.TensorProto.DataType.UINT16:return"uint16";case dt.onnx.TensorProto.DataType.INT32:return"int32";case dt.onnx.TensorProto.DataType.UINT32:return"uint32";case dt.onnx.TensorProto.DataType.FLOAT:return"float32";case dt.onnx.TensorProto.DataType.DOUBLE:return"float64";case dt.onnx.TensorProto.DataType.STRING:return"string";case dt.onnx.TensorProto.DataType.INT64:return"int32";case dt.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${dt.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return dt.onnx.TensorProto.DataType.INT8;case"uint8":return dt.onnx.TensorProto.DataType.UINT8;case"bool":return dt.onnx.TensorProto.DataType.BOOL;case"int16":return dt.onnx.TensorProto.DataType.INT16;case"uint16":return dt.onnx.TensorProto.DataType.UINT16;case"int32":return dt.onnx.TensorProto.DataType.INT32;case"uint32":return dt.onnx.TensorProto.DataType.UINT32;case"float32":return dt.onnx.TensorProto.DataType.FLOAT;case"float64":return dt.onnx.TensorProto.DataType.DOUBLE;case"string":return dt.onnx.TensorProto.DataType.STRING;case"int64":return dt.onnx.TensorProto.DataType.INT64;case"uint64":return dt.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>Yr.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Xt.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Xt=class{static longToNumber(e,n){return Yr.isLong(e)?e.toNumber():e instanceof N.Long?Yr.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return Yr.isLong(e)||e instanceof N.Long}},le=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,s=1;for(let u=0;u<t;u++){if(n[u]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[u]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=u}else{if(n[u]===0){if(u>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[u]=e[u]}else o[u]=n[u];s*=o[u]}}let a=r.size(e);if(i!==-1){if(a%s!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/s}else if(s!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((s,a)=>s*a,1),o=e.slice(n).reduce((s,a)=>s*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let s=r.normalizeAxis(n[i],t.length);if(s>=t.length)throw new Error("'axes' has an out of range axis");if(t[s]!==0)throw new Error("'axes' has a duplicate axis");t[s]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},Uo=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],s=[0];for(let a=0;a<t.length;++a){a!==0&&s.push(s[a-1]+t[a-1]);let u=e.slice();u[n]=t[a],i.push(u)}return[i,s]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},In=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,s)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},An=-34028234663852886e22,On=34028234663852886e22});function yv(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function zc(r){switch(r){case Pe.onnx.TensorProto.DataType.UINT8:case Pe.onnx.TensorProto.DataType.INT8:case Pe.onnx.TensorProto.DataType.BOOL:return 1;case Pe.onnx.TensorProto.DataType.UINT16:case Pe.onnx.TensorProto.DataType.INT16:return 2;case Pe.onnx.TensorProto.DataType.FLOAT:case Pe.onnx.TensorProto.DataType.INT32:case Pe.onnx.TensorProto.DataType.UINT32:return 4;case Pe.onnx.TensorProto.DataType.INT64:case Pe.onnx.TensorProto.DataType.DOUBLE:case Pe.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${Pe.onnx.TensorProto.DataType[r]}`)}}function vv(r,e){return new(Lc(e))(r)}function Lc(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Gs(r,e){if(e===Pe.onnx.TensorProto.DataType.INT64||e===Vs.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===Pe.onnx.TensorProto.DataType.UINT32||e===Vs.TensorDataType.UINT32||e===Pe.onnx.TensorProto.DataType.UINT64||e===Vs.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${Pe.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function Nc(r,e,n){switch(e){case Pe.onnx.TensorProto.DataType.BOOL:case Pe.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case Pe.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case Pe.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case Pe.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case Pe.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case Pe.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case Pe.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case Pe.onnx.TensorProto.DataType.INT64:return Gs(Yr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case Pe.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case Pe.onnx.TensorProto.DataType.UINT64:return Gs(Yr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${Pe.onnx.TensorProto.DataType[e]}`)}}var Mc,Pe,Vs,vt,En=z(()=>{"use strict";Mc=Kn(Ad());As();No();Pe=Kn(Jn());Xe();Vs=fe.experimental.fbs,vt=class r{constructor(e,n,t,o,i,s=Mc.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=s;this.size=le.validateDimsAndCalcSize(e);let a=this.size,u=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");u&&(this.cache=new Array(a))}else{if(i!==void 0){let l=Lc(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(u){let l=new ArrayBuffer(a*yv(n));this.cache=vv(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[le.indicesToOffset(e,this.strides)]}set(e,n){this.data[le.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=le.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=Ct.tensorDataTypeFromProto(e.dataType),t=Ct.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,s)=>{o.data[s]=Vo(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,s=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=zc(e.dataType),u=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Nc(s,e.dataType,l*a);i[l]=d}}else{let i;switch(e.dataType){case Pe.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case Pe.onnx.TensorProto.DataType.INT32:case Pe.onnx.TensorProto.DataType.INT16:case Pe.onnx.TensorProto.DataType.UINT16:case Pe.onnx.TensorProto.DataType.INT8:case Pe.onnx.TensorProto.DataType.UINT8:case Pe.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case Pe.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case Pe.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case Pe.onnx.TensorProto.DataType.UINT32:case Pe.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let s=o.data;if(s.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let u=i[a];Yr.isLong(u)?s[a]=Gs(u,e.dataType):s[a]=u}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=Ct.tensorDimsFromORTFormat(e),t=Ct.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,s=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=zc(e.dataType()),u=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Nc(s,e.dataType(),l*a);i[l]=d}}return o}}});function he(r){return r===1?wv:xv}function Fc(r){let e=he(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Uc(r){let e=he(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Vc(r,e){let n=he(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var wv,xv,ct=z(()=>{"use strict";wv={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},xv={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var Ve=z(()=>{"use strict"});async function Ws(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,s=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(s,a)};s()})}function Zi(r){return Qn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function Gc(r){return Qn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function eo(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function to(r,e){return e.map(n=>r[n]).join(", ")}function Gt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function _r(r=6){return["x","y","z","w","u","v"].slice(0,r)}var kr=z(()=>{"use strict";Xe()});function _v(r,e){return _r(e).map(n=>`${r}.${n}`)}function ro(r,e){return e===1?[r]:_v(r,e)}function Dr(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var Cn=z(()=>{"use strict";kr()});function Tv(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function Sv(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",s="rp1, cp1",a="";if(n>2)for(let u=0;u<n-2;++u)a=a+`${e[u]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${s})`}function Iv(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var Wc,$v,Hc,qc=z(()=>{"use strict";ct();Ve();kr();Cn();Wc={name:"pack",inputNames:["A"],inputTypes:[1]},$v=(r,e)=>{let n=he(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,s=Gt(i),a=ro("rc",i),u=Iv(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let d=Tv(i,l,a),p=Sv(t,a),m=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${d}) {
            ${n.output} = vec4(0);
          } else {
            ${u}

            ${n.output} = vec4(${p});
          }
        }
      `;return{...Wc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:m}},Hc=(r,e)=>({...Wc,get:()=>$v(r,e)})});function Hs(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function Kc(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function Ev(r){let e=le.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,s)=>{let a=`int ${n[s]} = ${t} / ${i}`,u=s===e.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * ${i}`:`index -= ${n[s]} * ${i}`;return`${a}; ${u};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function Cv(r){let e=le.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var Av,Ov,jc,Yc=z(()=>{"use strict";Xe();ct();Ve();Cn();Av=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),Ov=(r,e,n,t)=>{let o=e.dims,i=t,s="";for(let l=0;l<4;l++){let d="";switch(l){case 0:d="outputCoords = rc;";break;case 1:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:d="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}s+=`
        ${d}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=he(r.session.backend.glContext.version),u=`
      ${Ev(o)}
      ${Cv(i)}
      ${Dr()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${s}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:u,hasMain:!0}},jc=(r,e,n)=>{let t=Av(n);return{...t,get:()=>Ov(r,e,t,n)}}});var qs,Xc=z(()=>{"use strict";ct();Ve();qs=(r,e)=>{let n=e.shape,t=he(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function kv(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var Zc,Pv,Jc,Qc=z(()=>{"use strict";ct();Ve();kr();Cn();Zc={name:"unpack",inputNames:["A"],inputTypes:[2]},Pv=(r,e)=>{let n=e.dims.length,t=ro("rc",n),o=t.slice(-2),i=Gt(n),s=Dr(),u=e.dims.length===0?"":kv(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,d=he(r.session.backend.glContext.version),p=`
    ${s}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${u});

       ${d.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...Zc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:p}},Jc=(r,e)=>({...Zc,get:()=>Pv(r,e)})});var Ji,Go,Qi,Wo=z(()=>{"use strict";ar();Ji=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(Qe.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(Qe.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,s)=>t[s]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Go=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(Qe.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Qi=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var Ho,ef,js,tf=z(()=>{"use strict";Xe();Ve();Ho=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,s=n===4?e.length-1:void 0,a=n===4?e.map((u,l)=>l===e.length-1?u*4:u):void 0;return js(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:s})},ef=(r,e,n)=>{let t=Ho(r,e,n);return[t.width,t.height]},js=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[s,a]=r.computeTextureWH(i&&t||e,o),u=e.length,l=e.slice(0);if(u===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,u>0&&(l[u-1]=Math.ceil(l[u-1]/2)),u>1&&(l[u-2]=Math.ceil(l[u-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:a,channels:n,isPacked:i,shape:l,strides:le.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var Bv,ea,nf=z(()=>{"use strict";ar();En();Xe();qc();Yc();Xc();Qc();Wo();tf();Ve();Bv=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},ea=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return ef(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=Bv(e,t),i=this.session.programManager.getArtifact(o),s=i?i.programInfo:typeof e.get=="function"?e.get():e,a=Ho(this.session.layoutStrategy,s.output.dims,s.output.textureType),u=this.createTextureData(a,s.output.type);return i||(i=this.session.programManager.build(s,t,u),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,u),u}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=Ho(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let u=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=Ho(this.session.layoutStrategy,u,n),d=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let p=a[0],m=a[1]*a[2]*a[3],b=Math.ceil(m*1/4)*4,v=p*b;d=new Float32Array(v);for(let w=0;w<p;++w){let S=w*m,I=w*b+w%1*m;d.set(e.numberData.subarray(S,S+m),I)}}return this.createTextureData(l,e.type,d,e,1)}}if(n===2){let i=js(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),s=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(s)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){Qe.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let s=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,s,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:le.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(Kc(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:le.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=Hs(e.dims),i=Hs(n),s=this.reshapePacked(e,o),a=this.run(jc(this,s,i),[s]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let s={...e,tensor:o||new vt(e.unpackedShape,n,a=>this.readTexture(s),async a=>this.readTextureAsync(s),void 0,i),texture:t};return this.setTextureData(s.tensor.dataId,s,e.isPacked),s}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(qs(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(qs(this,e))}pack(e){return this.executeProgram(Hc(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(Jc(this,e.tensor),[e.tensor])}}});var Ks,Oe,St=z(()=>{"use strict";Ks=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Oe=r=>new Ks(r)});var of,af,sf,Rv,zv,uf=z(()=>{"use strict";St();ct();Ve();of={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},af=(r,e,n)=>(zv(e),[r.run({...of,cacheHint:n.cacheKey,get:()=>Rv(r,e,n)},e)]),sf=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return Oe({epsilon:e,momentum:n,spatial:t})},Rv=(r,e,n)=>{let t=he(r.session.backend.glContext.version),o=e[0].dims.length,[i,s]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${s});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...of,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},zv=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var ta,dr,te,qo,ra,Xr=z(()=>{"use strict";ta=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},dr=class{constructor(e){this.context=e}},te=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},qo=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},ra=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let s=0;s<i.length;++s)this.dfsTraverse(i[s],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function Mv(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function Lv(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function Fv(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function Uv(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function Vv(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function Gv(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function Wv(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function Hv(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function qv(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function jv(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function Kv(){return Xv("pow")}function Yv(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function Xv(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var cr,Zv,lf,df,cf,ff,pf,hf,mf,gf,bf,yf,vf,wf,xf=z(()=>{"use strict";Xe();Xr();ct();Ve();cr=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>Zv(r,e,n,t)}},Zv=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!le.areEqual(e[0].dims,e[1].dims),s=e[0].dims,a=r.session.pack;if(i){let d=Vt.calcShape(e[0].dims,e[1].dims,!1);if(!d)throw new Error("Can't perform binary op on the given tensors");s=d;let p=s.length,m=e[0].dims.length!==0?e[0].dims.length:1,b=e[1].dims.length!==0?e[1].dims.length:1,v=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",w=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",S=he(r.session.backend.glContext.version),I=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${S.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${p}]) {
        int aindices[${m}];
        int bindices[${b}];
        ${v}
        ${w}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:s,type:t,textureType:o},shaderSource:I,hasMain:a}}let u=he(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${u.texture2D}(A, TexCoords);
      vec4 v2 = ${u.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${u.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},lf=(r,e)=>[r.run(cr(r,e,Mv()),e)],df=(r,e)=>[r.run(cr(r,e,Hv(),"bool"),e)],cf=(r,e)=>[r.run(cr(r,e,Lv()),e)],ff=(r,e)=>[r.run(cr(r,e,Vv(),"bool"),e)],pf=(r,e)=>[r.run(cr(r,e,Gv(),"bool"),e)],hf=(r,e)=>[r.run(cr(r,e,Wv(),"bool"),e)],mf=(r,e)=>[r.run(cr(r,e,Fv()),e)],gf=(r,e)=>[r.run(cr(r,e,qv(),"bool"),e)],bf=(r,e)=>[r.run(cr(r,e,Kv()),e)],yf=(r,e)=>[r.run(cr(r,e,Yv()),e)],vf=(r,e)=>[r.run(cr(r,e,Uv()),e)],wf=(r,e)=>[r.run(cr(r,e,jv(),"bool"),e)]});var _f,$f,Qv,Tf=z(()=>{"use strict";Xe();_f=(r,e,n)=>(Qv(e),[r.cast(e[0],n)]),$f=r=>Ct.tensorDataTypeFromProto(r.attributes.getInt("to")),Qv=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var ew,tw,Sf,na,If=z(()=>{"use strict";ct();Ve();kr();Cn();ew=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),tw=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let D=1;D<n.length;D++){let U=n[D].dims.slice();for(let H=0;H<o.length;H++)if(H===t)i[t]+=U[H];else if(o[H]!==U[H])throw new Error("non concat dimensions must match")}let s=i.length,a=ro("coords",s),u=Gt(s),l=Dr(),d=n.map(D=>D.dims),p=_r(s),m=new Array(d.length-1);m[0]=d[0][t];for(let D=1;D<m.length;D++)m[D]=m[D-1]+d[D][t];let b=p[t],v=p.slice(-2),w=p.join(),S=`if (${b} < ${m[0]}) {
        return getChannel(
            getX0(${w}), vec2(${v.join()}));
        }`;for(let D=1;D<m.length;D++){let U=m[D-1];S+=`
            if (${b} < ${m[D]}  && ${b} >= ${m[D-1]}) {
              return getChannel(
                getX${D}(${na(p,b,U)}),
                vec2(${na(v,b,U)}));
            }`}let I=m.length,_=m[m.length-1];S+=`
            return getChannel(
              getX${I}(${na(p,b,_)}),
              vec2(${na(v,b,_)}));`;let O=he(r.session.backend.glContext.version),E=`
          ${l}
          float getValue(${p.map(D=>"int "+D)}) {
            ${S}
          }

          void main() {
            ${u} coords = getOutputCoords();
            int lastDim = coords.${p[s-1]};
            coords.${p[s-1]} = coords.${p[s-2]};
            coords.${p[s-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[s-1]} = ${a[s-1]} + 1;
            if (${a[s-1]} < ${i[s-1]}) {
              result.g = getValue(${a});
            }

            ${a[s-2]} = ${a[s-2]} + 1;
            if (${a[s-2]} < ${i[s-2]}) {
              result.a = getValue(${a});
            }

            ${a[s-1]} = ${a[s-1]} - 1;
            if (${a[s-2]} < ${i[s-2]} &&
                ${a[s-1]} < ${i[s-1]}) {
              result.b = getValue(${a});
            }
            ${O.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:E,hasMain:!0}},Sf=(r,e,n)=>{let t=ew(e.length,n.cacheKey);return{...t,get:()=>tw(r,t,e,n.axis)}},na=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,s)=>s===t?`${i} - ${n}`:i).join()}});var Af,rw,nw,ow,Of,iw,aw,sw,Ef,uw,Cf=z(()=>{"use strict";St();Ve();If();Af=(r,e,n)=>(uw(e),r.session.pack&&e[0].dims.length>1?[r.run(Sf(r,e,n),e)]:[r.run(ow(r,e,n),e)]),rw=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),nw=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let b=1;b<n.length;b++){let v=n[b].dims.slice();for(let w=0;w<o.length;w++)if(w===t)i[t]+=v[w];else if(o[w]!==v[w])throw new Error("non concat dimensions must match")}let s=i.length,a=new Array(n.length),u=0;for(let b=0;b<a.length;++b)u+=n[b].dims[t],a[b]=u;let l="";n.length<5?l=Of(a):l=iw(a);let d=aw(n.length,s),p=sw(a),m=`
        ${d}
        ${p}
        ${l}
        float process(int indices[${s}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:m}},ow=(r,e,n)=>{let t=rw(e.length,n.cacheKey);return{...t,get:()=>nw(r,t,e,n.axis)}},Of=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,iw=r=>Of(r),aw=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},sw=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},Ef=r=>Oe({axis:r.attributes.getInt("axis")}),uw=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function lw(){return fr("abs")}function dw(){return fr("acos")}function cw(){return fr("asin")}function fw(){return fr("atan")}function pw(){return fr("ceil")}function hw(){return fr("cos")}function mw(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function gw(){return fr("exp")}function bw(){return fr("floor")}function Ys(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function yw(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function vw(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function ww(){return fr("log")}function xw(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function _w(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function $w(){return fr("sin")}function Xs(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function Zs(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function Tw(){return fr("sqrt")}function Sw(){return fr("tan")}function Iw(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function fr(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var Aw,yt,Pf,kf,Df,Bf,Js,Rf,zf,Ow,Nf,Mf,Lf,Ff,Uf,Vf,Qs,Gf,Wf,Hf,qf,jf,Kf,Yf,Xf,Zf,Jf,Qf,eu=z(()=>{"use strict";St();Xe();Xr();ct();Ve();Aw=(r,e,n,t)=>{let o=r.session.pack?2:0,i=he(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},yt=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>Aw(r,i,e,n)}},Pf=(r,e)=>[r.run(yt(r,e[0],lw()),e)],kf=(r,e)=>[r.run(yt(r,e[0],dw()),e)],Df=(r,e)=>[r.run(yt(r,e[0],cw()),e)],Bf=(r,e)=>[r.run(yt(r,e[0],fw()),e)],Js=(r,e,n)=>[r.run(yt(r,e[0],Ys(n.min,n.max),n.cacheKey),e)],Rf=r=>Oe({min:r.attributes.getFloat("min",An),max:r.attributes.getFloat("max",On)}),zf=(r,e)=>{let n=Ow(r,e);return Js(r,[e[0]],n)},Ow=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:An,t=e.length>=3?e[2].numberData[0]:On;return Oe({min:n,max:t})},Nf=(r,e)=>[r.run(yt(r,e[0],pw()),e)],Mf=(r,e)=>[r.run(yt(r,e[0],hw()),e)],Lf=(r,e,n)=>[r.run(yt(r,e[0],mw(n.alpha),n.cacheKey),e)],Ff=r=>Oe({alpha:r.attributes.getFloat("alpha",1)}),Uf=(r,e)=>[r.run(yt(r,e[0],gw()),e)],Vf=(r,e)=>[r.run(yt(r,e[0],bw()),e)],Qs=(r,e)=>[r.run(yt(r,e[0],yw()),e)],Gf=(r,e,n)=>[r.run(yt(r,e[0],vw(n.alpha),n.cacheKey),e)],Wf=r=>Oe({alpha:r.attributes.getFloat("alpha",.01)}),Hf=(r,e)=>[r.run(yt(r,e[0],ww()),e)],qf=(r,e)=>[r.run(yt(r,e[0],xw()),e)],jf=(r,e)=>[r.run(yt(r,e[0],_w()),e)],Kf=(r,e)=>[r.run(yt(r,e[0],Xs()),e)],Yf=(r,e)=>[r.run(yt(r,e[0],Zs()),e)],Xf=(r,e)=>[r.run(yt(r,e[0],$w()),e)],Zf=(r,e)=>[r.run(yt(r,e[0],Tw()),e)],Jf=(r,e)=>[r.run(yt(r,e[0],Sw()),e)],Qf=(r,e)=>[r.run(yt(r,e[0],Iw()),e)]});function Br(r){let e;switch(r.activation){case"Relu":e=Xs();break;case"Sigmoid":e=Zs();break;case"Clip":e=Ys(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var no,Pn=z(()=>{"use strict";Xe();eu();no=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[An,On]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var Cw,Pw,ep,tp=z(()=>{"use strict";ar();ct();Ve();oa();Pn();Cw=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),Pw=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",s=e[0].dims.slice(),a=e[1].dims.slice(),u=a[0]/t.group;Qe.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=oo(s,a,t.dilations,t.pads,t.strides),d=he(r.session.backend.glContext.version),{activationFunction:p,applyActivation:m}=Br(t),b=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${u};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${s[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${s[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${m}
    ${d.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:b,hasMain:!0}},ep=(r,e,n)=>{let t=Cw(e.length>2,n.cacheKey);return{...t,get:()=>Pw(r,e,t,n)}}});var kw,Dw,rp,np=z(()=>{"use strict";ct();Ve();Cn();kw=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),Dw=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=2,l=3,d=o.length,p=[a[1]*a[2]*a[3],o[2]*o[3]],m=a[2]*a[3],b=Dr(),v=he(r.session.backend.glContext.version),w="";for(let I=0;I<=1;I++)for(let _=0;_<=1;_++)w+=`
            blockIndex = rc.x + ${_};
            pos = rc.y + ${I};

            if(blockIndex < ${p[1]} && pos < ${p[0]}) {
              offsetY = int(blockIndex / (${o[d-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${m}) / ${a[2]});

              if(d0 < ${s[u]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[d-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${m}), ${a[2]});

                if(d1 < ${s[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${m}.);
                    innerDims = vec2(d0, d1);
                    result[${I*2+_}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let S=`
      ${b}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${w}
          ${v.output} = result;
      }
            `;return{...e,output:{dims:p,type:n.type,textureType:2},shaderSource:S,hasMain:!0}},rp=(r,e,n,t,o)=>{let i=kw(o.cacheKey);return{...i,get:()=>Dw(r,i,e,n,t,o)}}});function Rw(r,e,n){let t=e[0].dims,o=e[1].dims,i=Vt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let s=Gt(i.length),a=_r(),{activationFunction:u,applyActivation:l}=Br(n),d=e.length>2,p=d?"value += getBiasForMatmul();":"",m=d?`${ru(s,a,e[2].dims,i,!1)}`:"",b=i.length,v=t.length,w=o.length,S=t[t.length-1],I=`
    ${u}
    ${m}
    float process(int indices[${b}]) {
        int a[${v}];
        int b[${w}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${S}; ++k) {
            a[${v-1}] = k;
            b[${w-2}] = k;
            value += _A(a) * _B(b);
        }
        ${p}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:I}}function tu(r,e){let n=Bw(r.length>2,e.activationCacheKey);return{...n,get:()=>Rw(n,r,e)}}function ru(r,e,n,t,o){let i="",s=n.length,a=t.length,u=a-s;a<2&&s>0?i="coords":i=n.map((w,S)=>`coords.${e[S+u]}`).join(", ");let d=Vt.getBroadcastDims(n,t).map(w=>`coords.${e[w+u]} = 0;`).join(`
`),m=le.size(n)===1,b="vec4(outputValue.xx, outputValue.yy)";return m&&(b="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  vec4 outputValue = getBias(${i});
  return ${b};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  return getBias(coords.x);
}`}var op,ip,Bw,zw,ia=z(()=>{"use strict";Xe();Ve();kr();Pn();nu();op=(r,e,n)=>(zw(e),r.session.pack?[r.run(aa(r,e,n),e)]:[r.run(tu(e,n),e)]),ip=r=>no(r.attributes),Bw=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});zw=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function Lw(r,e,n,t){let o=[],i=[],s=n[0].dims,a=n[1].dims,u=s.length,l=a.length,d=t.length,p=d-u,m=d-l;o=s.map((O,E)=>`coords.${e[E+p]}`),o[u-1]="i*2",o.join(", "),i=a.map((O,E)=>`coords.${e[E+m]}`),i[l-2]="i*2",i.join(", ");let b=Vt.getBroadcastDims(s,t),v=Vt.getBroadcastDims(a,t),w=b.map(O=>`coords.${e[O+p]} = 0;`).join(`
`),S=v.map(O=>`coords.${e[O+m]} = 0;`).join(`
`),I=`int lastDim = coords.${e[d-1]};
  coords.${e[d-1]} = coords.${e[d-2]};
  coords.${e[d-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${I}
  ${w}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${I}
  ${S}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function Fw(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function Uw(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var Nw,Mw,aa,nu=z(()=>{"use strict";Xe();ct();Ve();kr();Pn();ia();Nw=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),Mw=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",s=n[0].dims,a=n[1].dims,u=Vt.calcShape(s,a,!0),l=!le.areEqual(n[0].dims,n[1].dims);if(!u)throw new Error("Can't use matmul on the given tensors");let d=s[s.length-1],p=Math.ceil(d/2),m=s.length,b=a.length,v=he(r.session.backend.glContext.version),w=Gt(u.length),S=u.length,I=_r(),{activationFunction:_,applyActivation:O}=Br(t),E=o?`${ru(w,I,n[2].dims,u,!0)}`:"",D=l?`${Lw(w,I,n,u)}`:"",U=l?"getAAtOutCoordsMatmul(i)":`getA(${Fw(I,m)})`,H=l?"getBAtOutCoordsMatmul(i)":`getB(${Uw(I,b)})`,q=l?"":`${w} rc =
          getOutputCoords(); int lastDim = rc.${I[S-1]}; rc.${I[S-1]} =
          rc.${I[S-2]}; rc.${I[S-2]} = lastDim;
      `,ue=`
            ${D}
            ${E}
            ${_}
            void main() {
              ${q}

              vec4 value = vec4(0);
              for (int i = 0; i < ${p}; i++) {
                vec4 a = ${U};
                vec4 b = ${H};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${O}
              ${v.output} = value;
            }`;return{...e,output:{dims:u,type:n[0].type,textureType:2},shaderSource:ue,hasMain:!0}},aa=(r,e,n)=>{let t=Nw(e.length>2,n.activationCacheKey);return{...t,get:()=>Mw(r,t,e,n)}}});var ap,sp=z(()=>{"use strict";oa();np();nu();ap=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=oo(t,o,n.dilations,n.pads,n.strides),s=r.run(rp(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),u=e.length===3?[a,s,e[2]]:[a,s],l=r.run(aa(r,u,n),u);return r.reshapePacked(l,i)}});var Vw,Gw,up,ou,iu=z(()=>{"use strict";Ve();Vw=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),Gw=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=o.length,l=ou(s,a,o,4),d=`
        const int XC = ${s[1]};
        const int XH = ${s[2]};
        const int XW = ${s[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${u}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${s.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:d}},up=(r,e,n,t,o)=>{let i=Vw(o.cacheKey);return{...i,get:()=>Gw(r,i,e,n,t,o)}},ou=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var Ww,Hw,lp,dp=z(()=>{"use strict";Xe();ct();Ve();Pn();iu();Ww=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),Hw=(r,e,n,t,o)=>{let i=n[0].dims,s=n[1].dims,a=[s[0],Math.ceil(i[1]*s[2]*s[3]/4)],u=ou(i,s,t),[l,d]=r.calculateTextureWidthAndHeight(a,4),p=le.computeStrides(u),[m,b]=r.calculateTextureWidthAndHeight(u,4),v=t.length,w=n.length<3?"0.0":"_B(b)",S=Math.ceil(i[1]*s[2]*s[3]/4),{activationFunction:I,applyActivation:_}=Br(o),O=he(r.session.backend.glContext.version),E=`
${I}
float process(int indices[${v}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${p[0]} + im2col[1] * ${p[1]} + im2col[2] * ${p[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${w};
  for (int i = 0; i < ${S}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${m}, ${b});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${d});
    value += dot(${O.texture2D}(Im2Col, im2colCoords), ${O.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${_}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:E}},lp=(r,e,n,t)=>{let o=Ww(e.length>2,t);return{...o,get:()=>Hw(r,o,e,n,t)}}});var oo,au,qw,jw,Kw,Yw,su,Xw,oa=z(()=>{"use strict";St();Xe();tp();sp();dp();Pn();iu();ia();oo=(r,e,n,t,o)=>{let i=r[0],s=r.slice(2),a=s.length,u=e[0],d=e.slice(2).map((v,w)=>v+(v-1)*(n[w]-1)),m=s.map((v,w)=>v+t[w]+t[w+a]).map((v,w)=>Math.floor((v-d[w]+o[w])/o[w]));return[i,u].concat(...m)},au=(r,e,n)=>(Xw(e,n),qw(r,e,n)),qw=(r,e,n)=>{let t=Yw(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(ep(r,e,t),e)]:i&&o?[jw(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[ap(r,e,t)]:[Kw(r,e,t)]},jw=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=oo(t,o,n.dilations,n.pads,n.strides),s=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),u=e.length>2?[a,s,e[2]]:[a,s],l=r.run(tu(u,n),u);return r.reshapeUnpacked(l,i)},Kw=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=oo(t,o,n.dilations,n.pads,n.strides),s=r.run(up(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[s,e[1],e[2]]:[s,e[1]];return r.run(lp(r,e,i,n),a)},Yw=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();In.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},su=r=>{let e=r.attributes,n=no(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),u=e.getInts("strides",[1,1]);return Oe({autoPad:t,dilations:o,group:i,kernelShape:s,pads:a,strides:u,...n})},Xw=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Zw,Jw,Qw,cp,ex,tx,rx,nx,ox,ix,fp,ax,pp=z(()=>{"use strict";St();ct();Ve();Pn();Zw=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Jw=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},Qw=(r,e,n,t,o,i,s,a)=>{let u=r.length-2,l=a.length===0;for(let d=0;d<u;++d){let p=l?r[d+2]*i[d]:a[d],m=Zw(r[d+2],i[d],o[d],e[d],n[d],p);Jw(m,t,o,d,d+u),l&&a.push(i[d]*(r[d+2]-1)+s[d]+(e[d]-1)*n[d]+1-o[d]-o[d+u])}},cp=(r,e,n)=>(ax(e,n),ex(r,e,n)),ex=(r,e,n)=>{let t=ix(n,e);return[ox(r,e,t)]},tx=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),rx=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",s=e[0].dims,a=e[1].dims,u=a[1],l=a[0]/t.group,d=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],p=he(r.session.backend.glContext.version),{activationFunction:m,applyActivation:b}=Br(t),v=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${m}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${u};
    int wOutChannel = output_channel - group_id * ${u};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${s[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${s[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${b}
    ${p.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:d,type:e[0].type,textureType:0},shaderSource:v,hasMain:!0}},nx=(r,e,n)=>{let t=tx(e.length>2,n.cacheKey);return{...t,get:()=>rx(r,e,t,n)}},ox=(r,e,n)=>r.run(nx(r,e,n),e),ix=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;Qw(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let s=Object.assign({},r);return Object.assign(s,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),s},fp=r=>{let e=r.attributes,n=no(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),u=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),d=e.getInts("strides",[1,1]);return Oe({autoPad:t,dilations:o,group:i,kernelShape:s,outputPadding:a,outputShape:u,pads:l,strides:d,...n})},ax=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var hp,kn,mp,sx,gp,ux,lx,dx,sa=z(()=>{"use strict";St();Xe();Ve();hp={name:"Transpose",inputNames:["A"],inputTypes:[0]},kn=(r,e,n)=>(dx(e),[r.run({...hp,cacheHint:n.cacheKey,get:()=>sx(r,e[0],n.perm)},e)]),mp=r=>Oe({perm:r.attributes.getInts("perm",[])}),sx=(r,e,n)=>{let t=e.dims;n=gp(t,n);let o=ux(t,n),i=t.length,s=`
      ${lx("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...hp,output:{dims:o,type:e.type,textureType:0},shaderSource:s}},gp=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),ux=(r,e)=>(e=gp(r,e),le.sortBasedOnPerm(r,e)),lx=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},dx=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var bp,yp,cx,vp=z(()=>{"use strict";sa();bp=(r,e,n)=>{cx(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],s=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],s),u={perm:i,cacheKey:`${i}`},[l]=kn(r,[a],u),d=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,d)]},yp=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},cx=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var wp,xp,fx,_p=z(()=>{"use strict";Xe();wp=(r,e,n)=>{fx(e,n);let t=le.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},xp=r=>r.attributes.getInt("axis",1),fx=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var sn,jo=z(()=>{"use strict";sn=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var $p,Tp,px,hx,mx,gx,Sp=z(()=>{"use strict";St();jo();Xe();Ve();$p=(r,e,n)=>(gx(e,n.axis),[r.run(mx(r,e,n),e)]),Tp=r=>Oe({axis:r.attributes.getInt("axis",0)}),px={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},hx=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),s=new Array(o.length+i.length-1);t=le.normalizeAxis(t,o.length);let a=[];for(let m=0;m<s.length;m++)m<t?(s[m]=o[m],a.push(`inputIdx[${m}] = outputIdx[${m}];`)):m<t+i.length?(s[m]=i[m-t],a.push(`indexDataIdx[${m-t}] = outputIdx[${m}];`)):(s[m]=o[m-i.length+1],a.push(`inputIdx[${m-i.length+1}] = outputIdx[${m}];`));let u=s.length||1,l=o.length,d=i.length||1,p=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${l}];
        int indexDataIdx[${d}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:s,type:n[0].type,textureType:0},shaderSource:p}},mx=(r,e,n)=>{let t={...px,cacheHint:n.cacheKey};return{...t,get:()=>hx(r,t,e,n.axis)}},gx=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(sn.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var uu,Ip,Ap,Op,bx,yx,vx,Ep=z(()=>{"use strict";St();Xe();Ve();uu=(r,e,n)=>(vx(e,n),[r.run(bx(e,n),e)]),Ip=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return Oe({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},Ap=r=>Ip(r,!1),Op=r=>Ip(r,!0),bx=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>yx(n,r,e)}},yx=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,s]=Xi.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,s];if(!a)throw new Error("Can't use gemm on the given tensors");let u=t[t.length-1],l="";n.transA&&(u=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let d=a.length,p=e.length===3?`int c[${e[2].dims.length}];`:"",m=e.length===3?"bcastIndices_C(indices, c);":"",b=e.length===3?"value += beta * _C(c);":"",v=`
      float process(int indices[${d}]) {
          int a[${d}];
          int b[${d}];
          ${p}

          copyVec(indices, a);
          copyVec(indices, b);
          ${m}

          float value = 0.0;
          for (int k=0; k<${u}; ++k) {
              a[${d-1}] = k;
              b[${d-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${b}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:v}},vx=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var Cp,Pp,wx,xx,_x,$x,Tx,kp=z(()=>{"use strict";St();Ve();Cp=(r,e,n)=>(Tx(e),[r.run(_x(r,e,n),e)]),Pp=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return Oe({scale:e,bias:n})},wx={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},xx=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${$x(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},_x=(r,e,n)=>{let t={...wx,cacheHint:n.cacheKey};return{...t,get:()=>xx(r,t,e,n)}},$x=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},Tx=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var Bp,Rp,Dp,Sx,Ix,Ax,Ox,Ex,Cx,zp=z(()=>{"use strict";ct();Ve();Bp=(r,e,n)=>{Cx(e);let t=r.run(Ix(e[0]),e);return[r.run(Ex(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},Rp=r=>r.attributes.getFloat("epsilon",1e-5),Dp={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},Sx=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],s=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:s}},Ix=r=>({...Dp,get:()=>Sx(Dp,r)}),Ax={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},Ox=(r,e,n,t,o)=>{let i=he(r.session.backend.glContext.version),[s,a]=r.calculateTextureWidthAndHeight(o,4),[u,l]=[s/4,a],d=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${u}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:d}},Ex=(r,e,n,t)=>{let o={...Ax,cacheHint:`${n}`};return{...o,get:()=>Ox(r,o,e,n,t)}},Cx=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function Px(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),s=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,u=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${s} * square_sum, ${u});
    }`;return{...Lp,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function kx(r,e){return{...Lp,cacheHint:e.cacheKey,get:()=>Px(r,e)}}var Np,Mp,Lp,Dx,Fp=z(()=>{"use strict";St();Ve();Np=(r,e,n)=>(Dx(e),[r.run(kx(e,n),e)]),Mp=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return Oe({alpha:e,beta:n,bias:t,size:o})},Lp={name:"LRN",inputNames:["X"],inputTypes:[0]};Dx=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var Bx,lu,Up,Vp,Gp,Rx,zx,Nx,Mx,Lx,Fx,Ux,Vx,Wp=z(()=>{"use strict";St();Xe();ct();Ve();Bx={name:"Pad",inputNames:["A"],inputTypes:[0]},lu=(r,e,n)=>(Nx(e),[r.run({...Bx,cacheHint:n.cacheKey,get:()=>zx(r,e[0],n)},e)]),Up=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return Oe({mode:e,value:n,pads:t})},Vp=(r,e,n)=>{Mx(e);let t=Rx(r,e,n);return lu(r,[e[0]],t)},Gp=r=>r.attributes.getString("mode","constant"),Rx=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return Oe({mode:n,pads:t,value:o})},zx=(r,e,n)=>{let t=le.padShape(e.dims.slice(),n.pads),o=t.length,s=`
      ${Lx(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:s}},Nx=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Mx=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},Lx=(r,e,n)=>{let t=he(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),s=le.computeStrides(e.dims);switch(n.mode){case"constant":return Fx(t,e.dims,s,o,i,n.pads,n.value);case"reflect":return Ux(t,e.dims,s,o,i,n.pads);case"edge":return Vx(t,e.dims,s,o,i,n.pads);default:throw new Error("Invalid mode")}},Fx=(r,e,n,t,o,i,s)=>{let a=e.length,u="";for(let l=a-1;l>=0;--l)u+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${s});
        int offset = 0;
        int k = 0;
        ${u}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},Ux=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[u]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[u]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[u]};
        `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},Vx=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0)  k = 0;
        if (k >= ${e[u]}) k = ${e[u]-1};
        offset += k * ${n[u]};
      `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var qp,jp,Kp,Yp,Xp,Zp,Jp,Qp,eh,Gx,Hp,th,la,rh,ua,Wx,nh=z(()=>{"use strict";St();Xe();Ve();qp=(r,e,n)=>{la(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Kp(e,t,!1,n)},e)]},jp=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),s=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return Oe({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:s})},Kp=(r,e,n,t)=>{let[o,i]=eh(r,t,n),s=le.size(o.kernelShape),a="value += _X(x);",u="";o.countIncludePad?u+=`value /= float(${s});`:u+=`value /= float(${s} - pad);`;let d=`
        ${rh(r[0].dims,o,a,u,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:d}},Yp=(r,e,n)=>{la(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>Kp(e,t,!0,n)},e)]},Xp=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return Oe({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},Zp=(r,e,n)=>{la(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Qp(e,t,!1,n)},e)]},Jp=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),s=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(s!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return Oe({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:s,dilations:a})},Qp=(r,e,n,t)=>{let[o,i]=eh(r,t,n),s=`
      value = max(_X(x), value);
    `,a="",l=`
      ${rh(r[0].dims,o,s,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},eh=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),s=e.strides.slice(),a=o?e.dilations.slice():[],u=e.pads.slice();In.adjustPoolAttributes(n,t,i,s,a,u);let l=In.computePoolOutputShape(n,t,s,a,i,u,e.autoPad),d=Object.assign({},e);return o?Object.assign(d,{kernelShape:i,strides:s,pads:u,dilations:a,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:i,strides:s,pads:u,cacheKey:e.cacheKey}),[d,l]},Gx={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Hp={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},th=(r,e)=>(la(e),[r.run({...Hp,get:()=>Qp(e,Hp,!0,Gx)},e)]),la=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},rh=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let s=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],d=r[i-1],p="",m="",b="";if(u+l!==0?p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${d}) {
              pad++;
              continue;
            }
            ${n}
          }`:p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            ${n}
          }`,e.kernelShape.length===2){let w=e.kernelShape[e.kernelShape.length-2],S=e.strides[e.strides.length-2],I=e.pads[e.pads.length/2-2],_=e.pads[e.pads.length-2],O=r[i-2];I+_!==0?m=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${S} - ${I} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${O}) {
                pad+= ${s};
                continue;
              }
          `:m=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${S} - ${I} + j;
            `,b=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${m}
          ${p}
          ${b}
          ${t}
          return value;
        }
      `}else{let s=le.size(e.kernelShape),a=le.computeStrides(e.kernelShape),u=a.length,l=e.pads.length,d=Wx(u),p=ua(r,"inputDims"),m=ua(e.pads,"pads"),b=ua(a,"kernelStrides"),v=ua(e.strides,"strides"),w=e.pads.reduce((_,O)=>_+O),S="";return w?S=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:S=`
          }
          ${n}
        `,`
        ${d}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${u}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${u}];
          int strides[${u}];
          ${m}
          ${p}
          ${v}
          ${b}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${s}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${u}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${u}]
                + offset[j - ${i} + ${u}] - pads[j - 2];
              ${S}
          }
          ${t}

          return value;
        }
      `}},ua=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},Wx=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var Dn,un,Hx,qx,oh,ih,ah,sh,uh,lh,dh,ch=z(()=>{"use strict";St();jo();Xe();Ve();Dn=(r,e,n,t,o)=>{qx(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>Hx(r,e,n,t,o,i)},e)]},un=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return Oe({axes:e,keepDims:n})},Hx=(r,e,n,t,o,i)=>{let s=[],a=e[0].dims.length||1,u=[],l=le.normalizeAxes(n.axes,e[0].dims.length),d=o(e,l),p=d[1];for(let v=0;v<e[0].dims.length;v++)l.indexOf(v)>=0||l.length===0?(n.keepDims&&s.push(1),p=`
          for(int j${v} = 0; j${v} < ${e[0].dims[v]}; j${v}++) {
            inputIdx[${v}] = j${v};
            ${p}
          }`):(u.push(`inputIdx[${v}] = outputIdx[${s.length}];`),s.push(e[0].dims[v]));let b=`
      float process(int outputIdx[${s.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${u.join(`
`)}
        ${d[0]}       // init ops for reduce max/min
        ${p}
        ${d[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:s,type:e[0].type,textureType:0},shaderSource:b}},qx=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(sn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},oh=(r,e,n)=>Dn(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),ih=(r,e,n)=>Dn(r,e,n,"ReduceMean",(o,i)=>{let s=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${s}.;`]}),ah=(r,e,n)=>Dn(r,e,n,"ReduceMax",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),sh=(r,e,n)=>Dn(r,e,n,"ReduceMin",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),uh=(r,e,n)=>Dn(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),lh=(r,e,n)=>Dn(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),dh=(r,e,n)=>Dn(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var fh,ph=z(()=>{"use strict";Xe();fh=(r,e)=>{let n=le.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var hh,du,mh,gh,Ko,jx,cu,da,fu=z(()=>{"use strict";St();ct();Ve();hh={name:"Upsample",inputNames:["X"],inputTypes:[0]},du=(r,e,n)=>(cu(e,n),[r.run({...hh,cacheHint:n.cacheKey,get:()=>jx(r,e,n)},e)]),mh=r=>Ko(r,7),gh=r=>Ko(r,9),Ko=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),da(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),s=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(s)===-1)throw new Error(`coordinate_transform_mode '${s}' is not supported`);let a=s==="tf_crop_and_resize",u=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let d=r.attributes.getFloat("cubic_coeff_a",-.75),p=r.attributes.getInt("exclude_outside",0)!==0;if(p&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let m=e<11?!0:t==="nearest"&&s==="asymmetric"&&l==="floor",b=0,v=0,w=0;return e>10?r.inputs.length>2?(b=1,v=2,w=3):(v=1,w=2):e===9&&(v=1),Oe({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:s,useExtrapolation:u,needRoiInput:a,nearestMode:l,cubicCoefficientA:d,excludeOutside:p,useNearest2xOptimization:m,roiInputIdx:b,scalesInputIdx:v,sizesInputIdx:w})},jx=(r,e,n)=>{let t=he(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),s=e[0].dims.map((w,S)=>Math.floor(w*n.scales[S])),[a,u]=r.calculateTextureWidthAndHeight(s,0),l=s.length,d=new Array(l),p=new Array(l),m=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let w=l-1;w>=0;w--)d[w]=w===l-1?1:d[w+1]*s[w+1],p[w]=w===l-1?1:p[w+1]*e[0].dims[w+1],m+=`
        output_pitches[${w}] = ${d[w]};
        input_pitches[${w}] = ${p[w]};
        `;let b=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,v=n.mode==="nearest"?`
    ${b}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${b}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${b}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...hh,output:{dims:s,type:e[0].type,textureType:0},shaderSource:v,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(w=>Math.ceil(w))}]}},cu=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},da=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var pu,hu,bh,yh,Kx,Yx,Xx,Zx,vh=z(()=>{"use strict";ct();Ve();kr();Cn();fu();pu={name:"Resize",inputNames:["A"],inputTypes:[2]},hu=(r,e,n)=>(cu(e,n),[r.run({...pu,cacheHint:n.cacheKey,get:()=>Kx(r,e,n)},e)]),bh=r=>Ko(r,10),yh=r=>Ko(r,11),Kx=(r,e,n)=>{let t=he(r.session.backend.glContext.version),[o,i]=Yx(e,n);if(o.every(O=>O===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...pu,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let u=i[a-2],l=i[a-1],d=e[0].dims;if(a!==d.length)throw new Error(`output dimension should match input ${d.length}, but got ${a}`);let p=d[a-2],m=d[a-1],b=o[a-2],v=o[a-1],w="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${u}.0 - 1.0, ${l}.0 - 1.0,
                            ${u}.0 - 1.0);
                        vec4 original = vec4(${m}.0 - 1.0, ${p}.0 - 1.0, ${m}.0 - 1.0,
                            ${p}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let S=Gt(a),I=Dr(),_=`
            const vec2 inputWH = vec2(${p}.0, ${m}.0);
            const vec4 scaleWHWH = vec4(float(${b}), float(${v}), float(${b}), float(${v}));
            ${I}
            ${w}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${S} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${u-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...pu,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:_}},Yx=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Xx(a,e.mode,e.isResize)}else{let u=r[e.sizesInputIdx];if(!u||u.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(u.integerData),o=Zx(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let s=i||t.map((a,u)=>Math.floor(a*o[u]));return[o,s]},Xx=(r,e,n)=>{let t=Array.from(r.floatData);return da(t,e,n),t},Zx=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let s=0,a=o;s<a;s++)if(e[s]===0){if(r[s]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[s]=1}else i[s]=r[s]/e[s];return da(i,n,t),i}});var wh,Jx,xh=z(()=>{"use strict";En();wh=(r,e)=>(Jx(e),[new vt([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),Jx=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var mu,_h,$h,Th,Qx,Sh,e2,t2,Ih=z(()=>{"use strict";St();jo();Xe();Ve();mu={name:"Slice",inputNames:["A"],inputTypes:[0]},_h=(r,e,n)=>(Qx(e),[r.run({...mu,cacheHint:n.cacheKey,get:()=>Th(r,e[0],n)},e)]),$h=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return Oe({starts:e,ends:n,axes:t})},Th=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((p,m)=>m):n.axes,o=le.normalizeAxes(t,e.dims.length),i=n.starts.map((p,m)=>p>e.dims[o[m]]-1?e.dims[o[m]]:le.normalizeAxis(p,e.dims[o[m]])),s=n.ends.map((p,m)=>p>e.dims[o[m]]-1?e.dims[o[m]]:le.normalizeAxis(p,e.dims[o[m]])),a=e.dims.slice(),u=[];for(let p=0;p<o.length;p++)a[o[p]]=s[p]-i[p],i[p]>0&&u.push(`outputIdx[${o[p]}] += ${i[p]};`);let d=`
      float process(int outputIdx[${a.length}]) {
        ${u.join(`
      `)}
        return _A(outputIdx);
      }`;return{...mu,output:{dims:a,type:e.type,textureType:0},shaderSource:d}},Qx=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(sn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},Sh=(r,e)=>{t2(e);let n=e2(r,e);return[r.run({...mu,cacheHint:n.cacheKey,get:()=>Th(r,e[0],n)},[e[0]])]},e2=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(s=>s!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},t2=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var Ah,Oh,Eh,Ch,Ph,kh,Dh,Bh,r2,n2,o2,Rh,zh=z(()=>{"use strict";St();Xe();ct();Ve();sa();Ah={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},Oh={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},Eh={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},Ch=(r,e,n)=>{Rh(e);let t=e[0].dims.slice(),o=le.normalizeAxis(n.axis,t.length),i=le.sizeToDimension(t,o),s=le.sizeFromDimension(t,o);return Bh(r,e,n,i,s)},Ph=r=>Oe({axis:r.attributes.getInt("axis",1)}),kh=r=>Oe({axis:r.attributes.getInt("axis",-1)}),Dh=(r,e,n)=>{Rh(e);let t=e[0].dims.slice(),o=le.normalizeAxis(n.axis,t.length),i=t.length,s=o!==i-1,a=[],u=[],l=[],d;s&&(u=Array.from({length:i}).map((v,w)=>w),u[o]=i-1,u[i-1]=o,u.map(v=>a.push(t[v])),d=Oe({perm:u}),l=kn(r,e,d));let p=s?le.sizeToDimension(a,i-1):le.sizeToDimension(t,i-1),m=s?le.sizeFromDimension(a,i-1):le.sizeFromDimension(t,i-1),b=Bh(r,s?l:e,n,p,m);return s?kn(r,b,d):b},Bh=(r,e,n,t,o)=>{let i=r2(r,e[0],t,o,[t]),s=r.run({...Ah,cacheHint:n.cacheKey,get:()=>i},e),a=n2(r,e[0],t,o,i.output.dims,[t]),u=r.run({...Oh,cacheHint:n.cacheKey,get:()=>a},[e[0],s]),l=o2(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...Eh,cacheHint:n.cacheKey,get:()=>l},[e[0],s,u])]},r2=(r,e,n,t,o)=>{let[i,s]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let u=he(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${s} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${s})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...Ah,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},n2=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=he(r.session.backend.glContext.version),d=`
      float process(int[${u}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${s}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...Oh,output:{dims:i,type:e.type,textureType:0},shaderSource:d}},o2=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${u}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${s}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...Eh,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},Rh=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var Nh,Mh,Lh,i2,a2,s2,Fh=z(()=>{"use strict";St();Xe();Ve();Nh={name:"Split",inputNames:["A"],inputTypes:[0]},Mh=(r,e,n)=>{s2(e);let t=le.normalizeAxis(n.axis,e[0].dims.length),o=i2(r,e,t,n),i=[];for(let s=0;s<o;++s)i.push(r.run({...Nh,cacheHint:`${n.cacheKey};${s}`,get:()=>a2(r,e[0],n,t,s)},e));return i},Lh=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return Oe({axis:e,split:n,numOutputs:t})},i2=(r,e,n,t)=>{let[,o]=Uo.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},a2=(r,e,n,t,o)=>{let[i,s]=Uo.splitShape(e.dims,t,n.split,n.numOutputs),a=s[o],u=i[o],d=`
      float process(int indices[${u.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...Nh,cacheHint:`${n.cacheKey}:${o}`,output:{dims:u,type:e.type,textureType:0},shaderSource:d}},s2=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var gu,Uh,Vh,u2,l2,Gh=z(()=>{"use strict";Xe();gu=(r,e,n)=>{u2(e);let t=le.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Uh=(r,e)=>(l2(e),gu(r,[e[0]],Array.from(e[1].integerData))),Vh=r=>r.attributes.getInts("axes"),u2=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},l2=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Wh,d2,c2,Hh=z(()=>{"use strict";ct();Ve();Wh=(r,e)=>{c2(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>d2(r,e,n)},e)]},d2=(r,e,n)=>{let t=he(r.session.backend.glContext.version),o=e[0].dims.slice(),s=`
      void main() {
        vec4 result = ${e.map((a,u)=>`${t.texture2D}(X${u},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:s}},c2=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var qh,f2,p2,jh=z(()=>{"use strict";jo();Ve();qh=(r,e)=>{p2(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>f2(r,e,n)},e)]},f2=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let u=0;u<t.length;u++)o[u]=t[u]*e[1].numberData[u],i.push(`inputIdx[${u}] = int(mod(float(outputIdx[${u}]), ${t[u]}.));`);let s=o.length,a=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${s}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},p2=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(sn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var bu,Kh,Yh,h2,m2,Xh=z(()=>{"use strict";Xe();bu=(r,e,n)=>{h2(e);let t=le.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Kh=(r,e)=>(m2(e),bu(r,[e[0]],Array.from(e[1].integerData))),Yh=r=>r.attributes.getInts("axes"),h2=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},m2=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Zh,Jh=z(()=>{"use strict";uf();xf();Tf();Cf();oa();pp();vp();_p();Sp();Ep();kp();zp();Fp();ia();Wp();nh();ch();ph();vh();xh();Ih();zh();Fh();Gh();Hh();jh();sa();eu();Xh();fu();Zh=[["Abs","","6+",Pf],["Acos","","7+",kf],["Add","","7+",lf],["And","","7+",df],["Asin","","7+",Df],["Atan","","7+",Bf],["AveragePool","","7+",qp,jp],["BatchNormalization","","7+",af,sf],["Cast","","6+",_f,$f],["Ceil","","6+",Nf],["Clip","","6-10",Js,Rf],["Clip","","11+",zf],["Concat","","4+",Af,Ef],["Conv","","1+",au,su],["ConvTranspose","","1+",cp,fp],["Cos","","7+",Mf],["Div","","7+",cf],["Dropout","","7+",Qs],["DepthToSpace","","1+",bp,yp],["Equal","","7+",ff],["Elu","","6+",Lf,Ff],["Exp","","6+",Uf],["Flatten","","1+",wp,xp],["Floor","","6+",Vf],["FusedConv","com.microsoft","1+",au,su],["Gather","","1+",$p,Tp],["Gemm","","7-10",uu,Ap],["Gemm","","11+",uu,Op],["GlobalAveragePool","","1+",Yp,Xp],["GlobalMaxPool","","1+",th],["Greater","","7+",pf],["Identity","","1+",Qs],["ImageScaler","","1+",Cp,Pp],["InstanceNormalization","","6+",Bp,Rp],["LeakyRelu","","6+",Gf,Wf],["Less","","7+",hf],["LRN","","1+",Np,Mp],["Log","","6+",Hf],["MatMul","","1+",op,ip],["MaxPool","","1+",Zp,Jp],["Mul","","7+",mf],["Neg","","6+",qf],["Not","","1+",jf],["Or","","7+",gf],["Pad","","2-10",lu,Up],["Pad","","11+",Vp,Gp],["Pow","","7+",bf],["PRelu","","7+",yf],["ReduceLogSum","","1+",lh,un],["ReduceMax","","1+",ah,un],["ReduceMean","","1+",ih,un],["ReduceMin","","1+",sh,un],["ReduceProd","","1+",uh,un],["ReduceSum","","1-12",oh,un],["ReduceSumSquare","","1+",dh,un],["Relu","","6+",Kf],["Reshape","","5+",fh],["Resize","","10",hu,bh],["Resize","","11+",hu,yh],["Shape","","1+",wh],["Sigmoid","","6+",Yf],["Sin","","7+",Xf],["Slice","","10+",Sh],["Slice","","1-9",_h,$h],["Softmax","","1-12",Ch,Ph],["Softmax","","13+",Dh,kh],["Split","","2-12",Mh,Lh],["Sqrt","","6+",Zf],["Squeeze","","1-12",gu,Vh],["Squeeze","","13+",Uh],["Sub","","7+",vf],["Sum","","6+",Wh],["Tan","","7+",Jf],["Tanh","","6+",Qf],["Tile","","6+",qh],["Transpose","","1+",kn,mp],["Upsample","","7-8",du,mh],["Upsample","","9",du,gh],["Unsqueeze","","1-12",bu,Yh],["Unsqueeze","","13+",Kh],["Xor","","7+",wf]]});function em(r){let e={},n;for(;(n=Qh.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=g2.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let s=n[1],a=n[2],u=n[3].split(","),l=s?`${s} ${a};`:"",d=e[t].body,p="";e[t].params.forEach((b,v)=>{b&&(p+=`${b.type} ${b.name} = ${u[v]};
`)}),d=`${p}
 ${d}`,d=d.replace("return",`${a} = `);let m=`
      ${l}
      {
        ${d}
      }
      `;r=r.replace(n[0],m)}}return r=r.replace(Qh,""),r}var Qh,g2,tm=z(()=>{"use strict";Qh=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,g2="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function io(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:b2(e,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[s]<=a&&s++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function b2(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),Qn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),Qn(r.every(y2),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function y2(r){return r%1===0}function v2(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function rm(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var ca,yu=z(()=>{"use strict";ar();Xe();ca=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,d)=>l*d),u=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,d)=>l*d);if(a>o||u>o)Qe.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,u]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,u)=>u>=i.length-2?i[u]%2===0?i[u]:i[u]+1:i[u]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=io(i).newShape);let s=v2(i);return i.length<=1&&s<=o?[1,s]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?rm(s/4).map(a=>a*2):rm(s)}}});var fa,nm=z(()=>{"use strict";Xe();Xr();ct();yu();kr();fa=class extends dr{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new te(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new te(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputPacked1DCoords(t,o);break;case 2:i[s]=this.getOutputPacked2DCoords(t,o);break;case 3:i[s]=this.getOutputPacked3DCoords(t,o);break;default:i[s]=this.getOutputPackedNDCoords(t,o)}let u=`
      void setOutput(vec4 val) {
        ${he(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new te(u),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[s]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[s]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[s]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[s]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[s]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let u=`
        void setOutput(float val) {
          ${he(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new te(u),i}getOutputScalarCoords(){return new te(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new te(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new te(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new te(i))}getOutputPacked2DCoords(n,t){let o="";if(Sn.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new te(o);let i=t,s=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${s}) * 2;
          int c = 2 * (index / ${s});

          return ivec2(r, c);
        }
      `,new te(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),s=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${s};
          index -= b * ${s};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new te(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),s=i*Math.ceil(n[n.length-2]/2),a=s,u="",l="b, r, c";for(let p=2;p<n.length-1;p++)a*=n[n.length-p-1],u=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+u,l=`b${p}, `+l;let d=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${u}

        int b = index / ${s};
        index -= b * ${s};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new te(d)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new te(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new te(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec3(r, c, d);
        }
      `,new te(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec4(r, c, d, d2);
        }
      `,new te(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec5(r, c, d, d2, d3);
        }
      `,new te(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${u}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new te(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new te(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new te(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new te(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new te(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=he(this.context.glContext.version);return n[t]=new te(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let s=this.context.inputTextureLayouts[i],a=Zi(o);s.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,s):n[a]=this.getUnpackedSamplerFromInput(a,o,s);let u=Gc(o);s.unpackedShape.length<=t.unpackedShape.length&&(s.isPacked?n[u]=this.getPackedSamplerAtOutputCoords(u,s,t,o):n[u]=this.getUnpackedSamplerAtOutputCoords(u,s,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let s=t.unpackedShape,a=o.unpackedShape,l=Zi(i),d=s.length,p=a.length,m=Vt.getBroadcastDims(s,a),b=Gt(p),v=p-d,w,S=_r();d===0?w="":p<2&&m.length>=1?w="coords = 0;":w=m.map(ue=>`coords.${S[ue+v]} = 0;`).join(`
`);let I="";p<2&&d>0?I="coords":I=s.map((ue,ee)=>`coords.${S[ee+v]}`).join(", ");let _="return outputValue;",E=le.size(s)===1,U=le.size(a)===1;if(d===1&&!E&&!U)_=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(E&&!U)p===1?_=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:_=`
          return vec4(outputValue.x);
        `;else if(m.length){let ue=d-2,ee=d-1;m.indexOf(ue)>-1&&m.indexOf(ee)>-1?_="return vec4(outputValue.x);":m.indexOf(ue)>-1?_="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":m.indexOf(ee)>-1&&(_="return vec4(outputValue.xx, outputValue.zz);")}let H=`
        int lastDim = coords.${S[p-1]};
        coords.${S[p-1]} = coords.${S[p-2]};
        coords.${S[p-2]} = lastDim;
      `,q=`
      vec4 ${n}() {
        ${b} coords = getOutputCoords();
        ${H}
        ${w}
        vec4 outputValue = ${l}(${I});
        ${_}
      }
    `;return new te(q,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let s=[o.width,o.height],a=[t.width,t.height],u=t.unpackedShape.length,l=o.unpackedShape.length,d=t.unpackedShape,p=o.unpackedShape,m=Zi(i);if(u===l&&Sn.arraysEqual(a,s)){let E=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new te(E,["coordinates.sampleTexture"])}let b=Gt(l),v=Vt.getBroadcastDims(d,p),w=l-u,S,I=_r();u===0?S="":l<2&&v.length>=1?S="coords = 0;":S=v.map(E=>`coords.${I[E+w]} = 0;`).join(`
`);let _="";l<2&&u>0?_="coords":_=t.unpackedShape.map((E,D)=>`coords.${I[D+w]}`).join(", ");let O=`
        float ${n}() {
          ${b} coords = getOutputCoords();
          ${S}
          return ${m}(${_});
        }
      `;return new te(O,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=he(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new te(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],s=[i[1],i[0]],a=he(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${s[0]}, ${s[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new te(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=he(this.context.glContext.version),u=s[0],l=s[1];if(s!=null&&Sn.arraysEqual(i,s)){let v=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${u}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new te(v)}let d=s,p=Math.ceil(i[1]/2),b=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${p}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new te(b,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=[s[0],s[1]],u=he(this.context.glContext.version);if(i[0]===1){let w=i.slice(1),S=[1,2],I=eo(i,w),_=["b","row","col"],O=JSON.parse(JSON.stringify(o));O.unpackedShape=I;let E=this.getPackedSamplerFromInput(n,t,O),U=`${E.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${to(_,S)});
      } `;return new te(U,E.dependencies)}let l=a[0],d=a[1],p=Math.ceil(i[2]/2),m=p*Math.ceil(i[1]/2),v=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${d}, ${l}, ${m}, ${p}, b, row, col);
      return ${u.texture2D}(${t}, uv);}`;return new te(v,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,s=i.length,a=[o.width,o.height],u=he(this.context.glContext.version),l=[a[0],a[1]],d=l[1],p=l[0],m=Math.ceil(i[s-1]/2),b=m*Math.ceil(i[s-2]/2),v="int b, int row, int col",w=`b * ${b} + (row / 2) * ${m} + (col / 2)`;for(let _=2;_<s-1;_++)v=`int b${_}, `+v,b*=i[s-_-1],w=`b${_} * ${b} + `+w;let I=`vec4 ${n}(${v}) {
      int index = ${w};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${d});
      return ${u.texture2D}(${t}, uv);
    }`;return new te(I)}getUnpackedSamplerScalar(n,t,o){let[i,s]=[o.width,o.height];if(i===1&&s===1){let u=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new te(u,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${s});
          vec2 uv = uvFromFlat(${i}, ${s}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new te(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,s=o.height;if(s===1&&i===1){let u=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new te(u,["coordinates.sampleTexture"])}if(s===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new te(u,["coordinates.sampleTexture"])}if(i===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new te(u,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${s}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new te(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.height,o.width];if(s!=null&&Sn.arraysEqual(i,s)){let b=s[1],v=s[0],w=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${b}.0, ${v}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new te(w,["coordinates.sampleTexture"])}let{newShape:a,keptDims:u}=io(i),l=a;if(l.length<i.length){let b=eo(i,l),v=JSON.parse(JSON.stringify(o));v.unpackedShape=b;let w=["col","row"],S=`
          ${this.getUnpackedSamplerFromInput(n,t,v).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${to(w,u)});
          }
        `;return new te(S,["coordinates.sampleTexture"])}let d=s[1],p=s[0];if(p===1){let b=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new te(b,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(d===1){let b=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new te(b,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let m=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${d}, ${p}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new te(m,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,s=i[1]*i[2],a=i[2],{newShape:u,keptDims:l}=io(i),d=u;if(d.length<i.length){let v=eo(i,d),w=["batch","col","row"],S=JSON.parse(JSON.stringify(o));S.unpackedShape=v;let I=this.getUnpackedSamplerFromInput(n,t,S),_=l.reverse(),O=`
          ${I.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${to(w,_)});
          }
        `;return new te(O,I.dependencies)}let p=o.width,m=o.height,b=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${s} + col * ${a} + row;
            vec2 uv = uvFromFlat(${p}, ${m}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new te(b,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,s=i[3],a=i[2]*s,u=i[1]*a,l=o.width,d=o.height,p=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${u} + col * ${a} +
              depth2 * ${s} + depth;
          vec2 uv = uvFromFlat(${l}, ${d}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new te(p,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,s=i[4],a=i[3]*s,u=i[2]*a,l=i[1]*u,{newShape:d,keptDims:p}=io(i);if(d.length<i.length){let w=eo(i,d),S=["row","col","depth","depth2","depth3"],I=JSON.parse(JSON.stringify(o));I.unpackedShape=w;let _=`
          ${this.getUnpackedSamplerFromInput(n,t,I).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${to(S,p)});
          }
        `;return new te(_,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let m=o.width,b=o.height,v=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${u} + depth * ${a} +
          depth3 * ${s} + depth2;
          vec2 uv = uvFromFlat(${m}, ${b}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new te(v,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,s=i[5],a=i[4]*s,u=i[3]*a,l=i[2]*u,d=i[1]*l,{newShape:p,keptDims:m}=io(i);if(p.length<i.length){let S=eo(i,p),I=["row","col","depth","depth2","depth3","depth4"],_=JSON.parse(JSON.stringify(o));_.unpackedShape=S;let O=`
            ${this.getUnpackedSamplerFromInput(n,t,_).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${to(I,m)});
            }
          `;return new te(O,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let b=o.width,v=o.height,w=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${d} + col * ${l} + depth * ${u} +
            depth2 * ${a} + depth3 * ${s} + depth4;
            vec2 uv = uvFromFlat(${b}, ${v}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new te(w,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,s=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let u=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${s});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new te(u,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,u=`_${t}`;n[u]=new te(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),u=u+"_T",n[u]=new te(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,s){let a=`_${n}`;s&&(a=a+"_T");let u=he(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${u.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,s){let a=`_${n}_Pack`;s&&(a=a+"_T");let u=he(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${u.texture2D}(${n}, coords);
        }
        `}}});var pa,om=z(()=>{"use strict";Xr();pa=class r extends dr{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new te(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new te(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new te(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new te(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var ha,im=z(()=>{"use strict";Xr();ct();ha=class extends dr{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=he(this.context.glContext.version);return{setFragColor:new te(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new te(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var ma,am=z(()=>{"use strict";Xr();ma=class r extends dr{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let s=i.length,a=e-s,u=`bcastIndices_${t}`,l="";for(let p=0;p<s;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u} (int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
        }
        `;n[u]=new te(d)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let s=i.length,a=e-s,u=`bcastMatmulIndices_${t}`,l="";for(let p=0;p<s-2;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u}(int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
          realIndices[${s-1}] = bcastedIndices[${e-1}];
          realIndices[${s-2}] = bcastedIndices[${e-2}];
        }
        `;n[u]=new te(d)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`indicesToOffset_${n}`;e[a]=new te(r.indexToOffsetSingle(a,s,i)),a=`indicesToOffset_${n}_T`,e[a]=new te(r.indexToOffsetSingle(a,s,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`offsetToIndices_${n}`;e[a]=new te(r.offsetToIndicesSingle(a,s,i)),a=`offsetToIndices_${n}_T`,e[a]=new te(r.offsetToIndicesSingle(a,s,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,s=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let u=`
        void ${s}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[s]=new te(u)}),e}}});var ga,sm=z(()=>{"use strict";Xr();ga=class extends dr{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let s=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let u=`
        void ${s}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[s]=new te(u)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new te(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new te(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new te(o)}}}});var vu,um=z(()=>{"use strict";nm();om();im();am();sm();vu={encoding:pa,fragcolor:ha,vec:ga,shapeUtils:ma,coordinates:fa}});var ba,lm=z(()=>{"use strict";Xr();tm();um();ct();ba=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new ta(e,n,t,o),Object.keys(vu).forEach(s=>{let a=new vu[s](this.context);this.libs[s]=a});let i=this.glslLibRoutineDependencyGraph;for(let s in this.libs){let u=this.libs[s].getFunctions();for(let l in u){let d=s+"."+l,p;i[d]?(p=i[d],p.routineBody=u[l].routineBody):(p=new qo(d,u[l].routineBody),i[d]=p);let m=u[l].dependencies;if(m)for(let b=0;b<m.length;++b)if(i[m[b]])p.addDependency(i[m[b]]);else{let v=new qo(m[b]);i[m[b]]=v,p.addDependency(v)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${Vc(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=em(n),`${Uc(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),ra.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var ya,dm=z(()=>{"use strict";Pt();ar();lm();ct();ya=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(s){throw Qe.error("ProgramManager",e.programInfo.shaderSource),s}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new ba(this.glContext,e,n,t),i=o.preprocess(),s=this.compile(i);return{programInfo:e,program:s,uniformLocations:this.getUniformLocations(s,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(s)}})}compile(e){if(!this.vertexShader){Qe.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Fc(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}ge.debug&&Qe.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;Qe.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:s,type:a,location:u,arrayLength:l}of e){let d=n.find(p=>p.name===s)?.data;if(a!=="sampler2D"&&!d)throw new Error(`variable '${s}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],u,i),i++;break;case"float":l?o.uniform1fv(u,d):o.uniform1f(u,d);break;case"int":l?o.uniform1iv(u,d):o.uniform1i(u,d);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var va,cm=z(()=>{"use strict";ar();Wo();va=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),s=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,u=n.height,l,d;if(this.config.reuseTextures){l=`${a}x${u}_${s.format}_${s.internalFormat}_${s.textureType}`,d=this.inUseTextures.get(l),d||(d=[],this.inUseTextures.set(l,d));let m=this.idleTextures.get(l);if(m&&m.length>0){let b=m.pop();return d.push(b),o===1&&this.glContext.updateTexture(b,a,u,s,this.toTextureData(e,t)),b}}Qe.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let p=this.glContext.allocateTexture(a,u,s,this.toTextureData(e,t));return this.config.reuseTextures&&(d.push(p),this.textureLookup.set(p,l)),p}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((s,a)=>s*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(s=>i?.push(s))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,d)=>l*d)*t;await this.glContext.createAndWaitForFence();let s=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,s),u=this.pendingRead.get(o);return this.pendingRead.delete(o),u?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let s=this.idleTextures.get(t);s||(s=[],this.idleTextures.set(t,s)),s.push(e.texture)}}}(!t||n)&&(Qe.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var wa,fm=z(()=>{"use strict";ar();Id();nf();Jh();dm();yu();cm();wa=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new ca(e.glContext.maxTextureSize),this.programManager=new ya(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new va(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new ea(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){Qe.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=Sd(e,n,Zh);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function w2(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var Yo,pm=z(()=>{"use strict";Pt();Wo();Wo();kr();Yo=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,s=i.createTexture();i.bindTexture(i.TEXTURE_2D,s),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),s}updateTexture(e,n,t,o,i){let s=this.gl;s.bindTexture(s.TEXTURE_2D,e);let a=o.encode(i,n*t);s.texSubImage2D(s.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,s){let a=this.gl;s||(s=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let u=this.getEncoder(i,s),l=u.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,u.textureType,l),this.checkError(),u.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(ge.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new Ji(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new Go(this.gl,n):new Go(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new Qi(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,s;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),s=e.createProgram(),!s)?!1:(e.attachShader(s,o),e.attachShader(s,i),e.linkProgram(s),e.useProgram(s),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),s&&e.deleteProgram(s),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Ws(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=w2(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Ws(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function wu(r){let e;if((!r||r==="webgl2")&&"webgl2"in ao?e=ao.webgl2:(!r||r==="webgl")&&"webgl"in ao&&(e=ao.webgl),!e)try{let t=_2();e=hm(t,r)}catch{let o=x2();e=hm(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return ao[r]=e,n.isContextLost()?(delete ao[r],wu(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function hm(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new Yo(t,2)}catch(i){Qe.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new Yo(t,1)}catch(i){Qe.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function x2(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function _2(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var ao,mm=z(()=>{"use strict";ar();pm();ao={}});var xa,gm=z(()=>{"use strict";Pt();ar();fm();mm();xa=class{get contextId(){return ge.webgl.contextId}set contextId(e){ge.webgl.contextId=e}get matmulMaxBatchSize(){return ge.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){ge.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return ge.webgl.textureCacheMode}set textureCacheMode(e){ge.webgl.textureCacheMode=e}get pack(){return ge.webgl.pack}set pack(e){ge.webgl.pack=e}get async(){return ge.webgl.async}set async(e){ge.webgl.async=e}initialize(){try{return this.glContext=wu(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),Qe.setWithEnv(ge),ge.webgl.context||Object.defineProperty(ge.webgl,"context",{value:this.glContext.gl}),Qe.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return Qe.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new wa(this,e)}dispose(){this.glContext.dispose()}}});async function xu(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=bm.get(n);if(t)return t;let o=await T2(n);if(o)return o}}else return xu(["webgl"]);throw new Error("no available backend to use")}async function T2(r){let e=$2;if(typeof e[r]<"u"&&S2(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return bm.set(r,n),n}}function S2(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var bm,$2,ym=z(()=>{"use strict";gm();bm=new Map,$2={webgl:new xa}});var _u,_a,vm=z(()=>{"use strict";ar();_u=class{constructor(e,n){this.op=e;this.node=n}},_a=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new _u(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let s of t.node.inputs)if(!this._values[s]&&this.graph.getInputIndices().indexOf(s)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((d,p)=>{let m=o[p];this._values[m]=d});let i=this._starter.slice(0),s=this.graph.getValues(),a=this.graph.getNodes(),u=0;for(;u<i.length;){let d=i[u++],p=this._ops[d],m=p.node.inputs.map(S=>this._values[S]);if(m.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${p.node}`);let b=m;Qe.verbose("ExecPlan",`Runing op:${p.node.name} (${b.map((S,I)=>`'${p.node.inputs[I]}': ${S.type}[${S.dims.join(",")}]`).join(", ")})`);let v=await this.profiler.event("node",p.node.name,async()=>p.op.impl(t,b,p.op.context));if(v.length!==p.node.outputs.length)throw new Error("the size of output does not match model definition.");v.forEach((S,I)=>{let _=p.node.outputs[I];if(this._values[_])throw new Error(`output [${_}] already has value: op:${p.node.name}`);this._values[_]=S});let w=new Set;v.forEach((S,I)=>{let _=p.node.outputs[I];for(let O of s[_].to){let E=a[O],D=!0;for(let U of E.inputs)if(!this._values[U]){D=!1;break}D&&w.add(O)}}),i.push(...w)}let l=[];for(let d=0;d<this.graph.getOutputIndices().length;d++){let p=this.graph.getOutputIndices()[d],m=this._values[p];if(m===void 0)throw new Error(`required output [${p}] does not have value`);p===0?await m.getData():m.data,l.push(m)}return Qe.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var Me,pr,Xo,wm=z(()=>{"use strict";No();Me=Kn(Jn());En();Xe();pr=fe.experimental.fbs,Xo=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof Me.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof pr.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof Me.onnx.AttributeProto?e.type:e.type();switch(n){case Me.onnx.AttributeProto.AttributeType.FLOAT:return"float";case Me.onnx.AttributeProto.AttributeType.INT:return"int";case Me.onnx.AttributeProto.AttributeType.STRING:return"string";case Me.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case Me.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case Me.onnx.AttributeProto.AttributeType.INTS:return"ints";case Me.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case Me.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${Me.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof Me.onnx.AttributeProto?e.type:e.type();if(n===Me.onnx.AttributeProto.AttributeType.GRAPH||n===Me.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===Me.onnx.AttributeProto.AttributeType.INT&&Xt.isLong(t))return Xt.longToNumber(t);if(n===Me.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let s=0;s<o.length;s++){let a=o[s];i[s]=Xt.longToNumber(a)}return i}if(n===Me.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof Me.onnx.AttributeProto?vt.fromProto(t):vt.fromOrtTensor(t);if(n===Me.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof Me.onnx.AttributeProto)return t.map(i=>vt.fromProto(i));if(e instanceof pr.Attribute)return t.map(i=>vt.fromOrtTensor(i))}return n===Me.onnx.AttributeProto.AttributeType.STRING&&e instanceof Me.onnx.AttributeProto?Vo(t):n===Me.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof Me.onnx.AttributeProto?t.map(Vo):t}static getValueNoCheck(e){return e instanceof Me.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case Me.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case Me.onnx.AttributeProto.AttributeType.INT:return e.i;case Me.onnx.AttributeProto.AttributeType.STRING:return e.s;case Me.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case Me.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case Me.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case Me.onnx.AttributeProto.AttributeType.INTS:return e.ints;case Me.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case Me.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case Me.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${Me.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case pr.AttributeType.FLOAT:return e.f();case pr.AttributeType.INT:return e.i();case pr.AttributeType.STRING:return e.s();case pr.AttributeType.TENSOR:return e.t();case pr.AttributeType.GRAPH:return e.g();case pr.AttributeType.FLOATS:return e.floatsArray();case pr.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case pr.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case pr.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${pr.AttributeType[e.type()]}`)}}}});var Tu,$a,Su,Rr,Ta,$u,xm=z(()=>{"use strict";wm();No();Tu=Kn(Jn());En();Xe();$a=fe.experimental.fbs,Su={from:(r,e)=>new $u(r,e)},Rr=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=Ct.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},Ta=class{constructor(e,n){e instanceof Tu.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new Xo(e.attribute)):e instanceof $a.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new Xo(Ct.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},$u=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof Tu.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof $a.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let s=this._allData.push(new Rr(i))-1;n.set(i.name,s),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let s=n.get(i.name);if(s===void 0){let a=new Rr;a.type={shape:{dims:Ct.tensorDimsFromProto(i.dims)},tensorType:Ct.tensorDataTypeFromProto(i.dataType)},s=this._allData.push(a)-1,n.set(i.name,s)}this._allData[s]._from=-1,this._allData[s].tensor=vt.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let s=this._allData.push(new Rr(i))-1;n.set(i.name,s),this._allOutputIndices.push(s),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let u=`unnamed_${i.opType}_${a}`;if(!t.has(u)){i.name=u;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let s=this._nodes.push(new Ta(i))-1;t.set(i.name,s)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let u of a.output){let l=n.get(u);if(typeof l>"u"&&(l=this._allData.push(new Rr)-1,n.set(u,l)),s.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=vt.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let u of a.input){let l=n.get(u);if(typeof l>"u"){if(u===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${u}' for node: ${a.name}`)}s.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let s=e.inputs(i);if(n.has(s))throw new Error(`duplicated input name: ${s}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===s){let u=new Rr;if(e.nodeArgs(a)?.type()?.valueType()!==$a.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let d=e.nodeArgs(a).type().value(new $a.TensorTypeAndShape),p=Ct.tensorDataTypeFromProto(d.elemType()),m=d.shape(),b=[];for(let w=0;w<m.dimLength();w++)b.push(Xt.longToNumber(m.dim(w).value().dimValue()));u.type={shape:{dims:b},tensorType:p};let v=this._allData.push(u)-1;n.set(s,v),o.push(s)}}for(let i=0;i<e.initializersLength();i++){let s=e.initializers(i),a=n.get(s.name());if(a===void 0){let u=new Rr,l=Ct.tensorDimsFromORTFormat(s),d=Ct.tensorDataTypeFromProto(s.dataType());u.type={shape:{dims:l},tensorType:d},a=this._allData.push(u)-1,n.set(s.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=vt.fromOrtTensor(s)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let s=e.outputs(i);if(n.has(s))throw new Error(`duplicated output name: ${s}`);let a=this._allData.push(new Rr)-1;n.set(s,a),this._allOutputIndices.push(a),this._allOutputNames.push(s)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let s=e.nodes(i),a=s.name();if(!a)for(let l=0;a=`unnamed_${s.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let u=this._nodes.push(new Ta(s,a))-1;t.set(a,u)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let u=0;u<a?.outputsLength();u++){let l=a?.outputs(u),d=n.get(l);if(typeof d>"u"&&(d=this._allData.push(new Rr)-1,n.set(l,d)),s.outputs.push(d),this._allData[d]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${d}`);if(this._allData[d]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[d]._from=-1,this._allData[d].tensor=vt.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let u=0;u<a.inputsLength();u++){let l=a.inputs(u),d=n.get(l);if(typeof d>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);s.inputs.push(d),this._allData[d]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(s=>{e.add(s)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let s=this._allData[i];if(typeof s.tensor<"u")throw new Error("node outputs should not be initialized");if(s._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");s._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let s=0;s<i._to.length;s++)if(i._to[s]>=0)i._to[s]=n[i._to[s]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(s=>{i=this._nodes[s].inputs.indexOf(o+e),i!==-1&&(this._nodes[s].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let u=this._allData[n.inputs[a]].to.indexOf(e);if(u===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(u,1)}this._allData[o]._to=[];let s=this._allOutputIndices.indexOf(o);if(s!==-1&&(this._allOutputIndices[s]=t),i&&i.length>0)for(let a of i){let u=this._nodes[a].inputs.indexOf(o);if(u===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[u]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[An,On])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var _m,I2,Sa,$m=z(()=>{"use strict";Hi();xm();No();_m=Kn(Jn());Xe();I2=fe.experimental.fbs,Sa=class{constructor(){}load(e,n,t){let o;if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(i){if(t!==void 0)throw i;o=i}try{this.loadFromOrtFormat(e,n)}catch(i){throw t!==void 0?i:new Error(`Failed to load model as ONNX format: ${o}
as ORT format: ${i}`)}}loadFromOnnxFormat(e,n){let t=_m.onnx.ModelProto.decode(e);if(Xt.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Xt.longToNumber(i.version)})),this._graph=Su.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new N.ByteBuffer(e),o=I2.InferenceSession.getRootAsInferenceSession(t).model();if(Xt.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let s=0;s<o.opsetImportLength();s++){let a=o.opsetImport(s);this._opsets.push({domain:a?.domain(),version:Xt.longToNumber(a.version())})}this._graph=Su.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var Ia,Tm=z(()=>{"use strict";ym();vm();ar();$m();Ia=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=Gi.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await xu(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new Sa,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let s=await(void 0)(e);this.initialize(s,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new _a(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let s=e.get(n[i]);if(!s)throw new Error(`missing input tensor for: '${name}'`);t[o++]=s}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let s=0;s<t.length;++s){let a=o[t[s]];i[s]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[s].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],s=n[o].dims;if(!this.compareTensorDims(i,s,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${s.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0)&&e[o]!==null)return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var Aa,Sm=z(()=>{"use strict";Pt();En();Aa=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let u=e[a];o.set(a,new vt(u.dims,u.type,void 0,void 0,u.data))}let i=await this.session.run(o),s={};return i.forEach((a,u)=>{s[u]=new $t(a.type,a.data,a.dims)}),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var Im={};tn(Im,{onnxjsBackend:()=>O2});var Iu,O2,Am=z(()=>{"use strict";Tm();Sm();Iu=class{async init(){}async createInferenceSessionHandler(e,n){let t=new Ia(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new Aa(t)}},O2=new Iu});var Au={};tn(Au,{createReadStream:()=>Om,readFile:()=>E2,readFileSync:()=>C2});var E2,C2,Om,Ou=z(()=>{E2=void 0,C2=void 0,Om=void 0});var Eu={};tn(Eu,{join:()=>P2});var P2,Cu=z(()=>{P2=void 0});var Pm=st((Cm,Pu)=>{"use strict";var Em=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((f,g)=>{t=f,o=g}),n.mountExternalData=(f,g)=>{(n.gb||(n.gb=new Map)).set(f,g)},n.unmountExternalData=()=>{delete n.gb};let i=()=>{let f=(x,T,k)=>(...L)=>{let j=zt,Z=T?.();L=x(...L);let ie=T?.();return Z!==ie&&(x=ie,k(Z),T=k=null),zt!=j?pi():L},g=x=>async(...T)=>{try{if(n.fb)throw Error("Session already started");let k=n.fb={Eb:T[0],errors:[]},L=await x(...T);if(n.fb!==k)throw Error("Session mismatch");n.ob?.flush();let j=k.errors;if(0<j.length){let Z=await Promise.all(j);if(Z=Z.filter(ie=>ie),0<Z.length)throw Error(Z.join(`
`))}return L}finally{n.fb=null}};n._OrtCreateSession=f(n._OrtCreateSession,()=>n._OrtCreateSession,x=>n._OrtCreateSession=x),n._OrtRun=g(f(n._OrtRun,()=>n._OrtRun,x=>n._OrtRun=x)),n._OrtRunWithBinding=g(f(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,x=>n._OrtRunWithBinding=x)),n._OrtBindInput=f(n._OrtBindInput,()=>n._OrtBindInput,x=>n._OrtBindInput=x),i=void 0};n.jsepInit=(f,g)=>{if(i?.(),f==="webgpu"){[n.ob,n.wb,n.Ab,n.pb,n.zb,n.Sa,n.Bb,n.Db,n.xb,n.yb,n.Cb]=g;let x=n.ob;n.jsepRegisterBuffer=(T,k,L,j)=>x.registerBuffer(T,k,L,j),n.jsepGetBuffer=T=>x.getBuffer(T),n.jsepCreateDownloader=(T,k,L)=>x.createDownloader(T,k,L),n.jsepOnReleaseSession=T=>{x.onReleaseSession(T)},n.jsepOnRunStart=T=>x.onRunStart(T)}};var s=Object.assign({},n),a="./this.program",u=(f,g)=>{throw g},l=typeof window=="object",d=typeof importScripts=="function",p=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",m="",b,v,w;if(p){var S=(Ou(),qr(Au)),I=(Cu(),qr(Eu));m=d?I.dirname(m)+"/":__dirname+"/",b=(f,g)=>(f=Ne(f)?new URL(f):I.normalize(f),S.readFileSync(f,g?void 0:"utf8")),w=f=>(f=b(f,!0),f.buffer||(f=new Uint8Array(f)),f),v=(f,g,x,T=!0)=>{f=Ne(f)?new URL(f):I.normalize(f),S.readFile(f,T?void 0:"utf8",(k,L)=>{k?x(k):g(T?L.buffer:L)})},!n.thisProgram&&1<process.argv.length&&(a=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),u=(f,g)=>{throw process.exitCode=f,g},n.inspect=()=>"[Emscripten Module object]"}else(l||d)&&(d?m=self.location.href:typeof document<"u"&&document.currentScript&&(m=document.currentScript.src),r&&(m=r),m.indexOf("blob:")!==0?m=m.substr(0,m.replace(/[?#].*/,"").lastIndexOf("/")+1):m="",b=f=>{var g=new XMLHttpRequest;return g.open("GET",f,!1),g.send(null),g.responseText},d&&(w=f=>{var g=new XMLHttpRequest;return g.open("GET",f,!1),g.responseType="arraybuffer",g.send(null),new Uint8Array(g.response)}),v=(f,g,x)=>{var T=new XMLHttpRequest;T.open("GET",f,!0),T.responseType="arraybuffer",T.onload=()=>{T.status==200||T.status==0&&T.response?g(T.response):x()},T.onerror=x,T.send(null)});var _=console.log.bind(console),O=console.error.bind(console);Object.assign(n,s),s=null,typeof WebAssembly!="object"&&Y("no native wasm support detected");var E,D=!1,U,H,q,ue,ee,R,de,et,qe,Fe,se;function rt(){var f=E.buffer;n.HEAP8=H=new Int8Array(f),n.HEAP16=ue=new Int16Array(f),n.HEAPU8=q=new Uint8Array(f),n.HEAPU16=ee=new Uint16Array(f),n.HEAP32=R=new Int32Array(f),n.HEAPU32=de=new Uint32Array(f),n.HEAPF32=et=new Float32Array(f),n.HEAPF64=se=new Float64Array(f),n.HEAP64=qe=new BigInt64Array(f),n.HEAPU64=Fe=new BigUint64Array(f)}var Ee=[],Ie=[],ve=[],Ae=0,je=null,mt=null;function Y(f){throw f="Aborted("+f+")",O(f),D=!0,U=1,f=new WebAssembly.RuntimeError(f+". Build with -sASSERTIONS for more info."),o(f),f}var me=f=>f.startsWith("data:application/octet-stream;base64,"),Ne=f=>f.startsWith("file://"),ft;if(ft="ort-wasm-simd.wasm",!me(ft)){var At=ft;ft=n.locateFile?n.locateFile(At,m):m+At}function Qt(f){if(w)return w(f);throw"both async and sync fetching of the wasm failed"}function Rt(f){if(l||d){if(typeof fetch=="function"&&!Ne(f))return fetch(f,{credentials:"same-origin"}).then(g=>{if(!g.ok)throw"failed to load wasm binary file at '"+f+"'";return g.arrayBuffer()}).catch(()=>Qt(f));if(v)return new Promise((g,x)=>{v(f,T=>g(new Uint8Array(T)),x)})}return Promise.resolve().then(()=>Qt(f))}function wt(f,g,x){return Rt(f).then(T=>WebAssembly.instantiate(T,g)).then(T=>T).then(x,T=>{O(`failed to asynchronously prepare wasm: ${T}`),Y(T)})}function xt(f,g){var x=ft;return typeof WebAssembly.instantiateStreaming!="function"||me(x)||Ne(x)||p||typeof fetch!="function"?wt(x,f,g):fetch(x,{credentials:"same-origin"}).then(T=>WebAssembly.instantiateStreaming(T,f).then(g,function(k){return O(`wasm streaming compile failed: ${k}`),O("falling back to ArrayBuffer instantiation"),wt(x,f,g)}))}var er={768496:(f,g,x,T)=>{if(typeof n>"u"||!n.gb)return 1;if(f=_t(f>>>0),f.startsWith("./")&&(f=f.substring(2)),f=n.gb.get(f),!f)return 2;if(g>>>=0,x>>>=0,g+x>f.byteLength)return 3;try{return q.set(f.subarray(g,g+x),T>>>0>>>0),0}catch{return 4}},768997:()=>{n.xb()},769028:()=>{n.yb()},769057:()=>{n.Cb()},769082:f=>n.wb(f),769115:f=>n.Ab(f),769147:(f,g,x)=>{n.pb(f,g,x,!0)},769186:(f,g,x)=>{n.pb(f,g,x)},769219:f=>{n.Sa("Abs",f,void 0)},769270:f=>{n.Sa("Neg",f,void 0)},769321:f=>{n.Sa("Floor",f,void 0)},769374:f=>{n.Sa("Ceil",f,void 0)},769426:f=>{n.Sa("Reciprocal",f,void 0)},769484:f=>{n.Sa("Sqrt",f,void 0)},769536:f=>{n.Sa("Exp",f,void 0)},769587:f=>{n.Sa("Erf",f,void 0)},769638:f=>{n.Sa("Sigmoid",f,void 0)},769693:(f,g,x)=>{n.Sa("HardSigmoid",f,{alpha:g,beta:x})},769772:f=>{n.Sa("Log",f,void 0)},769823:f=>{n.Sa("Sin",f,void 0)},769874:f=>{n.Sa("Cos",f,void 0)},769925:f=>{n.Sa("Tan",f,void 0)},769976:f=>{n.Sa("Asin",f,void 0)},770028:f=>{n.Sa("Acos",f,void 0)},770080:f=>{n.Sa("Atan",f,void 0)},770132:f=>{n.Sa("Sinh",f,void 0)},770184:f=>{n.Sa("Cosh",f,void 0)},770236:f=>{n.Sa("Asinh",f,void 0)},770289:f=>{n.Sa("Acosh",f,void 0)},770342:f=>{n.Sa("Atanh",f,void 0)},770395:f=>{n.Sa("Tanh",f,void 0)},770447:f=>{n.Sa("Not",f,void 0)},770498:(f,g,x)=>{n.Sa("Clip",f,{min:g,max:x})},770567:f=>{n.Sa("Clip",f,void 0)},770619:(f,g)=>{n.Sa("Elu",f,{alpha:g})},770677:f=>{n.Sa("Relu",f,void 0)},770729:(f,g)=>{n.Sa("LeakyRelu",f,{alpha:g})},770793:(f,g)=>{n.Sa("ThresholdedRelu",f,{alpha:g})},770863:(f,g)=>{n.Sa("Cast",f,{to:g})},770921:f=>{n.Sa("Add",f,void 0)},770972:f=>{n.Sa("Sub",f,void 0)},771023:f=>{n.Sa("Mul",f,void 0)},771074:f=>{n.Sa("Div",f,void 0)},771125:f=>{n.Sa("Pow",f,void 0)},771176:f=>{n.Sa("Equal",f,void 0)},771229:f=>{n.Sa("Greater",f,void 0)},771284:f=>{n.Sa("GreaterOrEqual",f,void 0)},771346:f=>{n.Sa("Less",f,void 0)},771398:f=>{n.Sa("LessOrEqual",f,void 0)},771457:(f,g,x,T,k)=>{n.Sa("ReduceMean",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},771616:(f,g,x,T,k)=>{n.Sa("ReduceMax",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},771774:(f,g,x,T,k)=>{n.Sa("ReduceMin",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},771932:(f,g,x,T,k)=>{n.Sa("ReduceProd",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},772091:(f,g,x,T,k)=>{n.Sa("ReduceSum",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},772249:(f,g,x,T,k)=>{n.Sa("ReduceL1",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},772406:(f,g,x,T,k)=>{n.Sa("ReduceL2",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},772563:(f,g,x,T,k)=>{n.Sa("ReduceLogSum",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},772724:(f,g,x,T,k)=>{n.Sa("ReduceSumSquare",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},772888:(f,g,x,T,k)=>{n.Sa("ReduceLogSumExp",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},773052:f=>{n.Sa("Where",f,void 0)},773105:(f,g,x)=>{n.Sa("Transpose",f,{perm:g?Array.from(R.subarray(g>>>0,x>>>0)):[]})},773213:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge,M,_e)=>{n.Sa("ConvTranspose",f,{format:ie?"NHWC":"NCHW",autoPad:g,dilations:[x],group:T,kernelShape:[k],pads:[L,j],strides:[Z],wIsConst:()=>!!H[re>>>0],outputPadding:xe?Array.from(R.subarray(xe>>>0,Ce>>>0)):[],outputShape:Ge?Array.from(R.subarray(Ge>>>0,M>>>0)):[],activation:_t(_e)})},773614:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge,M)=>{n.Sa("ConvTranspose",f,{format:Z?"NHWC":"NCHW",autoPad:g,dilations:Array.from(R.subarray(x>>>0,(x>>>0)+2>>>0)),group:T,kernelShape:Array.from(R.subarray(k>>>0,(k>>>0)+2>>>0)),pads:Array.from(R.subarray(L>>>0,(L>>>0)+4>>>0)),strides:Array.from(R.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!H[ie>>>0],outputPadding:re?Array.from(R.subarray(re>>>0,xe>>>0)):[],outputShape:Ce?Array.from(R.subarray(Ce>>>0,Ge>>>0)):[],activation:_t(M)})},774179:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge,M,_e)=>{n.Sa("ConvTranspose",f,{format:ie?"NHWC":"NCHW",autoPad:g,dilations:[x],group:T,kernelShape:[k],pads:[L,j],strides:[Z],wIsConst:()=>!!H[re>>>0],outputPadding:xe?Array.from(R.subarray(xe>>>0,Ce>>>0)):[],outputShape:Ge?Array.from(R.subarray(Ge>>>0,M>>>0)):[],activation:_t(_e)})},774580:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge,M)=>{n.Sa("ConvTranspose",f,{format:Z?"NHWC":"NCHW",autoPad:g,dilations:Array.from(R.subarray(x>>>0,(x>>>0)+2>>>0)),group:T,kernelShape:Array.from(R.subarray(k>>>0,(k>>>0)+2>>>0)),pads:Array.from(R.subarray(L>>>0,(L>>>0)+4>>>0)),strides:Array.from(R.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!H[ie>>>0],outputPadding:re?Array.from(R.subarray(re>>>0,xe>>>0)):[],outputShape:Ce?Array.from(R.subarray(Ce>>>0,Ge>>>0)):[],activation:_t(M)})},775145:(f,g)=>{n.Sa("GlobalAveragePool",f,{format:g?"NHWC":"NCHW"})},775236:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge,M,_e,Ue)=>{n.Sa("AveragePool",f,{format:Ue?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:T,storage_order:k,dilations:[L,j],kernel_shape:[Z,ie],pads:[re,xe,Ce,Ge],strides:[M,_e]})},775520:(f,g)=>{n.Sa("GlobalAveragePool",f,{format:g?"NHWC":"NCHW"})},775611:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge,M,_e,Ue)=>{n.Sa("AveragePool",f,{format:Ue?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:T,storage_order:k,dilations:[L,j],kernel_shape:[Z,ie],pads:[re,xe,Ce,Ge],strides:[M,_e]})},775895:(f,g)=>{n.Sa("GlobalMaxPool",f,{format:g?"NHWC":"NCHW"})},775982:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge,M,_e,Ue)=>{n.Sa("MaxPool",f,{format:Ue?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:T,storage_order:k,dilations:[L,j],kernel_shape:[Z,ie],pads:[re,xe,Ce,Ge],strides:[M,_e]})},776262:(f,g)=>{n.Sa("GlobalMaxPool",f,{format:g?"NHWC":"NCHW"})},776349:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge,M,_e,Ue)=>{n.Sa("MaxPool",f,{format:Ue?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:T,storage_order:k,dilations:[L,j],kernel_shape:[Z,ie],pads:[re,xe,Ce,Ge],strides:[M,_e]})},776629:(f,g,x,T,k)=>{n.Sa("Gemm",f,{alpha:g,beta:x,transA:T,transB:k})},776733:f=>{n.Sa("MatMul",f,void 0)},776787:(f,g,x,T)=>{n.Sa("ArgMax",f,{keepDims:!!g,selectLastIndex:!!x,axis:T})},776895:(f,g,x,T)=>{n.Sa("ArgMin",f,{keepDims:!!g,selectLastIndex:!!x,axis:T})},777003:(f,g)=>{n.Sa("Softmax",f,{axis:g})},777066:(f,g)=>{n.Sa("Concat",f,{axis:g})},777126:(f,g,x,T,k)=>{n.Sa("Split",f,{axis:g,numOutputs:x,splitSizes:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},777266:f=>{n.Sa("Expand",f,void 0)},777320:(f,g)=>{n.Sa("Gather",f,{axis:Number(g)})},777391:(f,g)=>{n.Sa("GatherElements",f,{axis:Number(g)})},777470:(f,g,x,T,k,L,j,Z,ie,re,xe)=>{n.Sa("Resize",f,{antialias:g,axes:x?Array.from(R.subarray(x>>>0,T>>>0)):[],coordinateTransformMode:_t(k),cubicCoeffA:L,excludeOutside:j,extrapolationValue:Z,keepAspectRatioPolicy:_t(ie),mode:_t(re),nearestMode:_t(xe)})},777816:(f,g,x,T,k,L,j)=>{n.Sa("Slice",f,{starts:g?Array.from(R.subarray(g>>>0,x>>>0)):[],ends:T?Array.from(R.subarray(T>>>0,k>>>0)):[],axes:L?Array.from(R.subarray(L>>>0,j>>>0)):[]})},778032:f=>{n.Sa("Tile",f,void 0)},778084:(f,g,x)=>{n.Sa("LayerNormalization",f,{axis:Number(g),epsilon:Number(x)})},778191:(f,g,x)=>{n.Sa("InstanceNormalization",f,{epsilon:g,format:x?"NHWC":"NCHW"})},778305:(f,g,x)=>{n.Sa("InstanceNormalization",f,{epsilon:g,format:x?"NHWC":"NCHW"})},778419:f=>{n.Sa("Range",f,void 0)},778472:(f,g)=>{n.Sa("Einsum",f,{equation:_t(g)})},778553:(f,g,x,T,k)=>{n.Sa("Pad",f,{mode:g,value:x,pads:T?Array.from(R.subarray(T>>>0,k>>>0)):[]})},778680:(f,g,x,T,k,L)=>{n.Sa("BatchNormalization",f,{epsilon:g,momentum:x,spatial:!!k,trainingMode:!!T,format:L?"NHWC":"NCHW"})},778849:(f,g,x,T,k,L)=>{n.Sa("BatchNormalization",f,{epsilon:g,momentum:x,spatial:!!k,trainingMode:!!T,format:L?"NHWC":"NCHW"})},779018:(f,g,x)=>{n.Sa("CumSum",f,{exclusive:Number(g),reverse:Number(x)})},779115:(f,g,x,T,k,L,j,Z,ie)=>{n.Sa("Attention",f,{numHeads:g,isUnidirectional:x,maskFilterValue:T,scale:k,doRotary:L,qkvHiddenSizes:j?Array.from(R.subarray(Number(Z)>>>0,Number(Z)+j>>>0)):[],pastPresentShareBuffer:!!ie})},779387:f=>{n.Sa("BiasAdd",f,void 0)},779442:f=>{n.Sa("BiasSplitGelu",f,void 0)},779503:f=>{n.Sa("FastGelu",f,void 0)},779559:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge)=>{n.Sa("Conv",f,{format:ie?"NHWC":"NCHW",auto_pad:g,dilations:[x],group:T,kernel_shape:[k],pads:L?Array.from(R.subarray(L>>>0,j>>>0)):[],strides:[Z],w_is_const:()=>!!H[re>>>0],activation:_t(xe),activation_params:Ce?Array.from(et.subarray(Ce>>>0,Ge>>>0)):[]})},779929:(f,g,x,T,k,L,j,Z,ie,re,xe,Ce,Ge,M,_e,Ue)=>{n.Sa("Conv",f,{format:Ce?"NHWC":"NCHW",auto_pad:g,dilations:[x,T],group:k,kernel_shape:[L,j],pads:Z?Array.from(R.subarray(Z>>>0,ie>>>0)):[],strides:[re,xe],w_is_const:()=>!!H[Ge>>>0],activation:_t(M),activation_params:_e?Array.from(et.subarray(_e>>>0,Ue>>>0)):[]})},780320:f=>{n.Sa("Gelu",f,void 0)},780372:(f,g,x,T,k,L)=>{n.Sa("MatMulNBits",f,{k:g,n:x,accuracyLevel:T,bits:k,blockSize:L})},780499:(f,g,x,T,k,L)=>{n.Sa("MultiHeadAttention",f,{numHeads:g,isUnidirectional:x,maskFilterValue:T,scale:k,doRotary:L})},780658:(f,g,x,T,k)=>{n.Sa("RotaryEmbedding",f,{interleaved:!!g,numHeads:x,rotaryEmbeddingDim:T,scale:k})},780797:(f,g)=>{n.Sa("SkipLayerNormalization",f,{epsilon:g})},780878:f=>{n.Bb(f)},780912:(f,g)=>n.Db(f,g,n.fb.Eb,n.fb.errors)};function Zr(f){this.name="ExitStatus",this.message=`Program terminated with exit(${f})`,this.status=f}function Ar(f){this.cb=f-24,this.sb=function(g){de[this.cb+4>>>2>>>0]=g},this.rb=function(g){de[this.cb+8>>>2>>>0]=g},this.kb=function(g,x){this.jb(),this.sb(g),this.rb(x)},this.jb=function(){de[this.cb+16>>>2>>>0]=0}}var Mn=0,fn=0,po=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Jr=(f,g,x)=>{g>>>=0;var T=g+x;for(x=g;f[x]&&!(x>=T);)++x;if(16<x-g&&f.buffer&&po)return po.decode(f.subarray(g,x));for(T="";g<x;){var k=f[g++];if(k&128){var L=f[g++]&63;if((k&224)==192)T+=String.fromCharCode((k&31)<<6|L);else{var j=f[g++]&63;k=(k&240)==224?(k&15)<<12|L<<6|j:(k&7)<<18|L<<12|j<<6|f[g++]&63,65536>k?T+=String.fromCharCode(k):(k-=65536,T+=String.fromCharCode(55296|k>>10,56320|k&1023))}}else T+=String.fromCharCode(k)}return T},_t=(f,g)=>(f>>>=0)?Jr(q,f,g):"",Vr=f=>{for(var g=0,x=0;x<f.length;++x){var T=f.charCodeAt(x);127>=T?g++:2047>=T?g+=2:55296<=T&&57343>=T?(g+=4,++x):g+=3}return g},Or=(f,g,x,T)=>{if(x>>>=0,!(0<T))return 0;var k=x;T=x+T-1;for(var L=0;L<f.length;++L){var j=f.charCodeAt(L);if(55296<=j&&57343>=j){var Z=f.charCodeAt(++L);j=65536+((j&1023)<<10)|Z&1023}if(127>=j){if(x>=T)break;g[x++>>>0]=j}else{if(2047>=j){if(x+1>=T)break;g[x++>>>0]=192|j>>6}else{if(65535>=j){if(x+2>=T)break;g[x++>>>0]=224|j>>12}else{if(x+3>=T)break;g[x++>>>0]=240|j>>18,g[x++>>>0]=128|j>>12&63}g[x++>>>0]=128|j>>6&63}g[x++>>>0]=128|j&63}}return g[x>>>0]=0,x-k},ho=f=>{if(f===null)return"null";var g=typeof f;return g==="object"||g==="array"||g==="function"?f.toString():""+f},ai,Wt=f=>{for(var g="";q[f>>>0];)g+=ai[q[f++>>>0]];return g},mo={},pn={},go={},or;function si(f,g,x={}){var T=g.name;if(!f)throw new or(`type "${T}" must have a positive integer typeid pointer`);if(pn.hasOwnProperty(f)){if(x.ub)return;throw new or(`Cannot register type '${T}' twice`)}pn[f]=g,delete go[f],mo.hasOwnProperty(f)&&(g=mo[f],delete mo[f],g.forEach(k=>k()))}function Ot(f,g,x={}){if(!("argPackAdvance"in g))throw new TypeError("registerType registeredInstance requires argPackAdvance");si(f,g,x)}var bo=(f,g,x)=>{switch(g){case 1:return x?T=>H[T>>>0>>>0]:T=>q[T>>>0>>>0];case 2:return x?T=>ue[T>>>1>>>0]:T=>ee[T>>>1>>>0];case 4:return x?T=>R[T>>>2>>>0]:T=>de[T>>>2>>>0];case 8:return x?T=>qe[T>>>3]:T=>Fe[T>>>3];default:throw new TypeError(`invalid integer width (${g}): ${f}`)}};function yo(){this.$a=[void 0],this.nb=[]}var nt=new yo;function vo(f){f>>>=0,f>=nt.cb&&--nt.get(f).qb===0&&nt.jb(f)}var Re=f=>{if(!f)throw new or("Cannot use deleted val. handle = "+f);return nt.get(f).value},Ht=f=>{switch(f){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return nt.kb({qb:1,value:f})}};function Ln(f){return this.fromWireType(R[f>>>2>>>0])}var wo=(f,g)=>{switch(g){case 4:return function(x){return this.fromWireType(et[x>>>2>>>0])};case 8:return function(x){return this.fromWireType(se[x>>>3>>>0])};default:throw new TypeError(`invalid float width (${g}): ${f}`)}};function as(f){return this.fromWireType(de[f>>>2>>>0])}var xo=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ss=(f,g)=>{for(var x=f>>1,T=x+g/2;!(x>=T)&&ee[x>>>0];)++x;if(x<<=1,32<x-f&&xo)return xo.decode(q.subarray(f>>>0,x>>>0));for(x="",T=0;!(T>=g/2);++T){var k=ue[f+2*T>>>1>>>0];if(k==0)break;x+=String.fromCharCode(k)}return x},we=(f,g,x)=>{if(x??=2147483647,2>x)return 0;x-=2;var T=g;x=x<2*f.length?x/2:f.length;for(var k=0;k<x;++k)ue[g>>>1>>>0]=f.charCodeAt(k),g+=2;return ue[g>>>1>>>0]=0,g-T},Fn=f=>2*f.length,ui=(f,g)=>{for(var x=0,T="";!(x>=g/4);){var k=R[f+4*x>>>2>>>0];if(k==0)break;++x,65536<=k?(k-=65536,T+=String.fromCharCode(55296|k>>10,56320|k&1023)):T+=String.fromCharCode(k)}return T},us=(f,g,x)=>{if(g>>>=0,x??=2147483647,4>x)return 0;var T=g;x=T+x-4;for(var k=0;k<f.length;++k){var L=f.charCodeAt(k);if(55296<=L&&57343>=L){var j=f.charCodeAt(++k);L=65536+((L&1023)<<10)|j&1023}if(R[g>>>2>>>0]=L,g+=4,g+4>x)break}return R[g>>>2>>>0]=0,g-T},li=f=>{for(var g=0,x=0;x<f.length;++x){var T=f.charCodeAt(x);55296<=T&&57343>=T&&++x,g+=4}return g},_o=(f,g)=>{var x=pn[f];if(x===void 0)throw f=bn(f),x=Wt(f),qt(f),new or(g+" has unknown type "+x);return x},$o=(f,g,x)=>{var T=[];return f=f.toWireType(T,x),T.length&&(de[g>>>2>>>0]=Ht(T)),f},hn=f=>{try{f()}catch(g){Y(g)}};function di(){var f=be,g={};for(let[x,T]of Object.entries(f))g[x]=typeof T=="function"?function(){Qr.push(x);try{return T.apply(null,arguments)}finally{D||(Qr.pop(),zt&&gr===1&&Qr.length===0&&(gr=0,hn(Si),typeof Fibers<"u"&&Fibers.Kb()))}}:T;return g}var gr=0,zt=null,To=0,Qr=[],So={},Io={},ci=0,Un=null,fi=[];function pi(){return new Promise((f,g)=>{Un={resolve:f,reject:g}})}function hi(){var f=en(65548),g=f+12;de[f>>>2>>>0]=g,de[f+4>>>2>>>0]=g+65536,g=Qr[0];var x=So[g];return x===void 0&&(x=ci++,So[g]=x,Io[x]=g),R[f+8>>>2>>>0]=x,f}function mi(f){if(!D){if(gr===0){var g=!1,x=!1;f((T=0)=>{if(!D&&(To=T,g=!0,x)){gr=2,hn(()=>br(zt)),typeof Browser<"u"&&Browser.lb.tb&&Browser.lb.resume(),T=!1;try{var k=(0,be[Io[R[zt+8>>>2>>>0]]])()}catch(Z){k=Z,T=!0}var L=!1;if(!zt){var j=Un;j&&(Un=null,(T?j.reject:j.resolve)(k),L=!0)}if(T&&!L)throw k}}),x=!0,g||(gr=1,zt=hi(),typeof Browser<"u"&&Browser.lb.tb&&Browser.lb.pause(),hn(()=>yn(zt)))}else gr===2?(gr=0,hn(rr),qt(zt),zt=null,fi.forEach(T=>{if(!D)try{T();try{U=U=T=U,n.onExit?.(T),D=!0,u(T,new Zr(T))}catch(k){k instanceof Zr||k=="unwind"||u(1,k)}}catch(k){k instanceof Zr||k=="unwind"||u(1,k)}})):Y(`invalid state: ${gr}`);return To}}function Ao(f){return mi(g=>{f().then(g)})}var mn=[],gi={},Vn=f=>{var g=gi[f];return g===void 0?Wt(f):g},Oo=()=>typeof globalThis=="object"?globalThis:Function("return this")(),tr=f=>{var g=mn.length;return mn.push(f),g},Eo=(f,g)=>{for(var x=Array(f),T=0;T<f;++T)x[T]=_o(de[g+4*T>>>2>>>0],"parameter "+T);return x},Gn=(f,g)=>Object.defineProperty(g,"name",{value:f});function ls(f){var g=Function;if(!(g instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof g} which is not a function`);var x=Gn(g.name||"unknownFunctionName",function(){});return x.prototype=g.prototype,x=new x,f=g.apply(x,f),f instanceof Object?f:x}var Nt=f=>f%4===0&&(f%100!==0||f%400===0),bi=[0,31,60,91,121,152,182,213,244,274,305,335],ir=[0,31,59,90,120,151,181,212,243,273,304,334],Co=f=>{var g=Vr(f)+1,x=en(g);return x&&Or(f,q,x,g),x},Wn=[],Mt=(f,g)=>{Wn.length=0;for(var x;x=q[f++>>>0];){var T=x!=105;T&=x!=112,g+=T&&g%8?4:0,Wn.push(x==112?de[g>>>2>>>0]:x==106?qe[g>>>3]:x==105?R[g>>>2>>>0]:se[g>>>3>>>0]),g+=T?8:4}return Wn},gn={},Et=()=>{if(!Lt){var f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:a||"./this.program"},g;for(g in gn)gn[g]===void 0?delete f[g]:f[g]=gn[g];var x=[];for(g in f)x.push(`${g}=${f[g]}`);Lt=x}return Lt},Lt,yi=[null,[],[]],vi=[31,29,31,30,31,30,31,31,30,31,30,31],wi=[31,28,31,30,31,30,31,31,30,31,30,31];function xi(f){var g=Array(Vr(f)+1);return Or(f,g,0,g.length),g}function _i(f,g,x,T){function k(M,_e,Ue){for(M=typeof M=="number"?M.toString():M||"";M.length<_e;)M=Ue[0]+M;return M}function L(M,_e){return k(M,_e,"0")}function j(M,_e){function Ue(Hr){return 0>Hr?-1:0<Hr?1:0}var Wr;return(Wr=Ue(M.getFullYear()-_e.getFullYear()))===0&&(Wr=Ue(M.getMonth()-_e.getMonth()))===0&&(Wr=Ue(M.getDate()-_e.getDate())),Wr}function Z(M){switch(M.getDay()){case 0:return new Date(M.getFullYear()-1,11,29);case 1:return M;case 2:return new Date(M.getFullYear(),0,3);case 3:return new Date(M.getFullYear(),0,2);case 4:return new Date(M.getFullYear(),0,1);case 5:return new Date(M.getFullYear()-1,11,31);case 6:return new Date(M.getFullYear()-1,11,30)}}function ie(M){var _e=M.ab;for(M=new Date(new Date(M.bb+1900,0,1).getTime());0<_e;){var Ue=M.getMonth(),Wr=(Nt(M.getFullYear())?vi:wi)[Ue];if(_e>Wr-M.getDate())_e-=Wr-M.getDate()+1,M.setDate(1),11>Ue?M.setMonth(Ue+1):(M.setMonth(0),M.setFullYear(M.getFullYear()+1));else{M.setDate(M.getDate()+_e);break}}return Ue=new Date(M.getFullYear()+1,0,4),_e=Z(new Date(M.getFullYear(),0,4)),Ue=Z(Ue),0>=j(_e,M)?0>=j(Ue,M)?M.getFullYear()+1:M.getFullYear():M.getFullYear()-1}f>>>=0,g>>>=0,x>>>=0,T>>>=0;var re=de[T+40>>>2>>>0];T={Hb:R[T>>>2>>>0],Gb:R[T+4>>>2>>>0],hb:R[T+8>>>2>>>0],mb:R[T+12>>>2>>>0],ib:R[T+16>>>2>>>0],bb:R[T+20>>>2>>>0],Wa:R[T+24>>>2>>>0],ab:R[T+28>>>2>>>0],Jb:R[T+32>>>2>>>0],Fb:R[T+36>>>2>>>0],Ib:re?_t(re):""},x=_t(x),re={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var xe in re)x=x.replace(new RegExp(xe,"g"),re[xe]);var Ce="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ge="January February March April May June July August September October November December".split(" ");re={"%a":M=>Ce[M.Wa].substring(0,3),"%A":M=>Ce[M.Wa],"%b":M=>Ge[M.ib].substring(0,3),"%B":M=>Ge[M.ib],"%C":M=>L((M.bb+1900)/100|0,2),"%d":M=>L(M.mb,2),"%e":M=>k(M.mb,2," "),"%g":M=>ie(M).toString().substring(2),"%G":M=>ie(M),"%H":M=>L(M.hb,2),"%I":M=>(M=M.hb,M==0?M=12:12<M&&(M-=12),L(M,2)),"%j":M=>{for(var _e=0,Ue=0;Ue<=M.ib-1;_e+=(Nt(M.bb+1900)?vi:wi)[Ue++]);return L(M.mb+_e,3)},"%m":M=>L(M.ib+1,2),"%M":M=>L(M.Gb,2),"%n":()=>`
`,"%p":M=>0<=M.hb&&12>M.hb?"AM":"PM","%S":M=>L(M.Hb,2),"%t":()=>"	","%u":M=>M.Wa||7,"%U":M=>L(Math.floor((M.ab+7-M.Wa)/7),2),"%V":M=>{var _e=Math.floor((M.ab+7-(M.Wa+6)%7)/7);if(2>=(M.Wa+371-M.ab-2)%7&&_e++,_e)_e==53&&(Ue=(M.Wa+371-M.ab)%7,Ue==4||Ue==3&&Nt(M.bb)||(_e=1));else{_e=52;var Ue=(M.Wa+7-M.ab-1)%7;(Ue==4||Ue==5&&Nt(M.bb%400-1))&&_e++}return L(_e,2)},"%w":M=>M.Wa,"%W":M=>L(Math.floor((M.ab+7-(M.Wa+6)%7)/7),2),"%y":M=>(M.bb+1900).toString().substring(2),"%Y":M=>M.bb+1900,"%z":M=>{M=M.Fb;var _e=0<=M;return M=Math.abs(M)/60,(_e?"+":"-")+("0000"+(M/60*100+M%60)).slice(-4)},"%Z":M=>M.Ib,"%%":()=>"%"},x=x.replace(/%%/g,"\0\0");for(xe in re)x.includes(xe)&&(x=x.replace(new RegExp(xe,"g"),re[xe](T)));return x=x.replace(/\0\0/g,"%"),xe=xi(x),xe.length>g?0:(H.set(xe,f>>>0),xe.length-1)}for(var $i=Array(256),Hn=0;256>Hn;++Hn)$i[Hn]=String.fromCharCode(Hn);ai=$i,or=n.BindingError=class extends Error{constructor(f){super(f),this.name="BindingError"}},n.InternalError=class extends Error{constructor(f){super(f),this.name="InternalError"}},Object.assign(yo.prototype,{get(f){return this.$a[f]},has(f){return this.$a[f]!==void 0},kb(f){var g=this.nb.pop()||this.$a.length;return this.$a[g]=f,g},jb(f){this.$a[f]=void 0,this.nb.push(f)}}),nt.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),nt.cb=nt.$a.length,n.count_emval_handles=()=>{for(var f=0,g=nt.cb;g<nt.$a.length;++g)nt.$a[g]!==void 0&&++f;return f};var ds={ia:function(f,g,x){return Ao(async()=>{await n.zb(f,g,x)})},a:function(f,g,x){throw f>>>=0,new Ar(f).kb(g>>>0,x>>>0),Mn=f,fn++,Mn},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(f,g,x,T,k){g>>>=0,g=Wt(g);var L=g.indexOf("u")!=-1;L&&(k=(1n<<64n)-1n),Ot(f>>>0,{name:g,fromWireType:j=>j,toWireType:function(j,Z){if(typeof Z!="bigint"&&typeof Z!="number")throw new TypeError(`Cannot convert "${ho(Z)}" to ${this.name}`);if(Z<T||Z>k)throw new TypeError(`Passing a number "${ho(Z)}" from JS side to C/C++ side to an argument of type "${g}", which is outside the valid range [${T}, ${k}]!`);return Z},argPackAdvance:8,readValueFromPointer:bo(g,x>>>0,!L),eb:null})},ga:function(f,g,x,T){g=Wt(g>>>0),Ot(f>>>0,{name:g,fromWireType:function(k){return!!k},toWireType:function(k,L){return L?x:T},argPackAdvance:8,readValueFromPointer:function(k){return this.fromWireType(q[k>>>0])},eb:null})},fa:function(f,g){g=Wt(g>>>0),Ot(f>>>0,{name:g,fromWireType:x=>{var T=Re(x);return vo(x),T},toWireType:(x,T)=>Ht(T),argPackAdvance:8,readValueFromPointer:Ln,eb:null})},F:function(f,g,x){g=Wt(g>>>0),Ot(f>>>0,{name:g,fromWireType:T=>T,toWireType:(T,k)=>k,argPackAdvance:8,readValueFromPointer:wo(g,x>>>0),eb:null})},s:function(f,g,x,T,k){if(f>>>=0,x>>>=0,g=Wt(g>>>0),k===-1&&(k=4294967295),k=Z=>Z,T===0){var L=32-8*x;k=Z=>Z<<L>>>L}var j=g.includes("unsigned")?function(Z,ie){return ie>>>0}:function(Z,ie){return ie};Ot(f,{name:g,fromWireType:k,toWireType:j,argPackAdvance:8,readValueFromPointer:bo(g,x,T!==0),eb:null})},n:function(f,g,x){function T(L){return new k(H.buffer,de[L+4>>>2>>>0],de[L>>>2>>>0])}var k=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][g];x=Wt(x>>>0),Ot(f>>>0,{name:x,fromWireType:T,argPackAdvance:8,readValueFromPointer:T},{ub:!0})},H:function(f,g){g=Wt(g>>>0);var x=g==="std::string";Ot(f>>>0,{name:g,fromWireType:function(T){var k=de[T>>>2>>>0],L=T+4;if(x)for(var j=L,Z=0;Z<=k;++Z){var ie=L+Z;if(Z==k||q[ie>>>0]==0){if(j=_t(j,ie-j),re===void 0)var re=j;else re+=String.fromCharCode(0),re+=j;j=ie+1}}else{for(re=Array(k),Z=0;Z<k;++Z)re[Z]=String.fromCharCode(q[L+Z>>>0]);re=re.join("")}return qt(T),re},toWireType:function(T,k){k instanceof ArrayBuffer&&(k=new Uint8Array(k));var L=typeof k=="string";if(!(L||k instanceof Uint8Array||k instanceof Uint8ClampedArray||k instanceof Int8Array))throw new or("Cannot pass non-string to std::string");var j=x&&L?Vr(k):k.length,Z=en(4+j+1),ie=Z+4;if(de[Z>>>2>>>0]=j,x&&L)Or(k,q,ie,j+1);else if(L)for(L=0;L<j;++L){var re=k.charCodeAt(L);if(255<re)throw qt(ie),new or("String has UTF-16 code units that do not fit in 8 bits");q[ie+L>>>0]=re}else for(L=0;L<j;++L)q[ie+L>>>0]=k[L];return T!==null&&T.push(qt,Z),Z},argPackAdvance:8,readValueFromPointer:as,eb(T){qt(T)}})},y:function(f,g,x){if(g>>>=0,x>>>=0,x=Wt(x),g===2)var T=ss,k=we,L=Fn,j=()=>ee,Z=1;else g===4&&(T=ui,k=us,L=li,j=()=>de,Z=2);Ot(f>>>0,{name:x,fromWireType:ie=>{for(var re=de[ie>>>2>>>0],xe=j(),Ce,Ge=ie+4,M=0;M<=re;++M){var _e=ie+4+M*g;(M==re||xe[_e>>>Z]==0)&&(Ge=T(Ge,_e-Ge),Ce===void 0?Ce=Ge:(Ce+=String.fromCharCode(0),Ce+=Ge),Ge=_e+g)}return qt(ie),Ce},toWireType:(ie,re)=>{if(typeof re!="string")throw new or(`Cannot pass non-string to C++ string type ${x}`);var xe=L(re),Ce=en(4+xe+g);return de[Ce>>>2]=xe>>Z,k(re,Ce+4,xe+g),ie!==null&&ie.push(qt,Ce),Ce},argPackAdvance:8,readValueFromPointer:Ln,eb(ie){qt(ie)}})},ha:function(f,g){g=Wt(g>>>0),Ot(f>>>0,{vb:!0,name:g,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,u:function(f,g,x){return g>>>=0,x>>>=0,f=Re(f>>>0),g=_o(g,"emval::as"),$o(g,x,f)},v:function(f){return f>>>=0,Ao(()=>(f=Re(f),f.then(Ht)))},o:function(f,g,x,T){return x>>>=0,T>>>=0,f=mn[f>>>0],g=Re(g>>>0),f(null,g,x,T)},l:function(f,g,x,T,k){return x>>>=0,T>>>=0,k>>>=0,f=mn[f>>>0],g=Re(g>>>0),x=Vn(x),f(g,g[x],T,k)},b:vo,z:function(f,g){return g>>>=0,f=Re(f>>>0),g=Re(g),f==g},m:function(f){return f>>>=0,f===0?Ht(Oo()):(f=Vn(f),Ht(Oo()[f]))},i:function(f,g,x){g=Eo(f,g>>>0);var T=g.shift();f--;var k=`return function (obj, func, destructorsRef, args) {
`,L=0,j=[];x===0&&j.push("obj");for(var Z=["retType"],ie=[T],re=0;re<f;++re)j.push("arg"+re),Z.push("argType"+re),ie.push(g[re]),k+=`  var arg${re} = argType${re}.readValueFromPointer(args${L?"+"+L:""});
`,L+=g[re].argPackAdvance;for(k+=`  var rv = ${x===1?"new func":"func.call"}(${j.join(", ")});
`,re=0;re<f;++re)g[re].deleteObject&&(k+=`  argType${re}.deleteObject(arg${re});
`);return T.vb||(Z.push("emval_returnValue"),ie.push($o),k+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Z.push(k+`};
`),f=ls(Z).apply(null,ie),x=`methodCaller<(${g.map(xe=>xe.name).join(", ")}) => ${T.name}>`,tr(Gn(x,f))},r:function(f,g){return g>>>=0,f=Re(f>>>0),g=Re(g),Ht(f[g])},d:function(f){f>>>=0,4<f&&(nt.get(f).qb+=1)},t:function(){return Ht([])},k:function(f){f=Re(f>>>0);for(var g=Array(f.length),x=0;x<f.length;x++)g[x]=f[x];return Ht(g)},f:function(f){return Ht(Vn(f>>>0))},j:function(){return Ht({})},h:function(f){f>>>=0;for(var g=Re(f);g.length;){var x=g.pop();g.pop()(x)}vo(f)},g:function(f,g,x){g>>>=0,x>>>=0,f=Re(f>>>0),g=Re(g),x=Re(x),f[g]=x},c:function(f,g){return g>>>=0,f=_o(f>>>0,"_emval_take_value"),f=f.readValueFromPointer(g),Ht(f)},U:function(f,g){f=-9007199254740992>f||9007199254740992<f?NaN:Number(f),g>>>=0,f=new Date(1e3*f),R[g>>>2>>>0]=f.getUTCSeconds(),R[g+4>>>2>>>0]=f.getUTCMinutes(),R[g+8>>>2>>>0]=f.getUTCHours(),R[g+12>>>2>>>0]=f.getUTCDate(),R[g+16>>>2>>>0]=f.getUTCMonth(),R[g+20>>>2>>>0]=f.getUTCFullYear()-1900,R[g+24>>>2>>>0]=f.getUTCDay(),R[g+28>>>2>>>0]=(f.getTime()-Date.UTC(f.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(f,g){f=-9007199254740992>f||9007199254740992<f?NaN:Number(f),g>>>=0,f=new Date(1e3*f),R[g>>>2>>>0]=f.getSeconds(),R[g+4>>>2>>>0]=f.getMinutes(),R[g+8>>>2>>>0]=f.getHours(),R[g+12>>>2>>>0]=f.getDate(),R[g+16>>>2>>>0]=f.getMonth(),R[g+20>>>2>>>0]=f.getFullYear()-1900,R[g+24>>>2>>>0]=f.getDay(),R[g+28>>>2>>>0]=(Nt(f.getFullYear())?bi:ir)[f.getMonth()]+f.getDate()-1|0,R[g+36>>>2>>>0]=-(60*f.getTimezoneOffset());var x=new Date(f.getFullYear(),6,1).getTimezoneOffset(),T=new Date(f.getFullYear(),0,1).getTimezoneOffset();R[g+32>>>2>>>0]=(x!=T&&f.getTimezoneOffset()==Math.min(T,x))|0},W:function(f){f>>>=0;var g=new Date(R[f+20>>>2>>>0]+1900,R[f+16>>>2>>>0],R[f+12>>>2>>>0],R[f+8>>>2>>>0],R[f+4>>>2>>>0],R[f>>>2>>>0],0),x=R[f+32>>>2>>>0],T=g.getTimezoneOffset(),k=new Date(g.getFullYear(),6,1).getTimezoneOffset(),L=new Date(g.getFullYear(),0,1).getTimezoneOffset(),j=Math.min(L,k);return 0>x?R[f+32>>>2>>>0]=+(k!=L&&j==T):0<x!=(j==T)&&(k=Math.max(L,k),g.setTime(g.getTime()+6e4*((0<x?j:k)-T))),R[f+24>>>2>>>0]=g.getDay(),R[f+28>>>2>>>0]=(Nt(g.getFullYear())?bi:ir)[g.getMonth()]+g.getDate()-1|0,R[f>>>2>>>0]=g.getSeconds(),R[f+4>>>2>>>0]=g.getMinutes(),R[f+8>>>2>>>0]=g.getHours(),R[f+12>>>2>>>0]=g.getDate(),R[f+16>>>2>>>0]=g.getMonth(),R[f+20>>>2>>>0]=g.getYear(),f=g.getTime(),isNaN(f)?(R[Ti()>>>2>>>0]=61,f=-1):f/=1e3,BigInt(f)},S:function(){return-52},T:function(){},L:function(f,g,x){function T(ie){return(ie=ie.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ie[1]:"GMT"}x>>>=0;var k=new Date().getFullYear(),L=new Date(k,0,1),j=new Date(k,6,1);k=L.getTimezoneOffset();var Z=j.getTimezoneOffset();de[f>>>0>>>2>>>0]=60*Math.max(k,Z),R[g>>>0>>>2>>>0]=+(k!=Z),f=T(L),g=T(j),f=Co(f),g=Co(g),Z<k?(de[x>>>2>>>0]=f,de[x+4>>>2>>>0]=g):(de[x>>>2>>>0]=g,de[x+4>>>2>>>0]=f)},A:()=>{Y("")},e:function(f,g,x){return f>>>=0,g=Mt(g>>>0,x>>>0),er[f].apply(null,g)},I:function(f,g,x){return f>>>=0,g=Mt(g>>>0,x>>>0),er[f].apply(null,g)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(f){f>>>=0;var g=q.length;if(4294901760<f)return!1;for(var x=1;4>=x;x*=2){var T=g*(1+.2/x);T=Math.min(T,f+100663296);var k=Math;T=Math.max(f,T);e:{k=(k.min.call(k,4294901760,T+(65536-T%65536)%65536)-E.buffer.byteLength+65535)/65536;try{E.grow(k),rt();var L=1;break e}catch{}L=void 0}if(L)return!0}return!1},Z:function(f,g){f>>>=0,g>>>=0;var x=0;return Et().forEach((T,k)=>{var L=g+x;for(k=de[f+4*k>>>2>>>0]=L,L=0;L<T.length;++L)H[k++>>>0>>>0]=T.charCodeAt(L);H[k>>>0>>>0]=0,x+=T.length+1}),0},_:function(f,g){f>>>=0,g>>>=0;var x=Et();de[f>>>2>>>0]=x.length;var T=0;return x.forEach(k=>T+=k.length+1),de[g>>>2>>>0]=T,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(f,g,x,T){g>>>=0,x>>>=0,T>>>=0;for(var k=0,L=0;L<x;L++){var j=de[g>>>2>>>0],Z=de[g+4>>>2>>>0];g+=8;for(var ie=0;ie<Z;ie++){var re=q[j+ie>>>0],xe=yi[f];re===0||re===10?((f===1?_:O)(Jr(xe,0)),xe.length=0):xe.push(re)}k+=Z}return de[T>>>2>>>0]=k,0},ea:_i,p:function(f,g,x,T){return _i(f>>>0,g>>>0,x>>>0,T>>>0)}},be=function(){function f(x){return be=x.exports,be=di(),be=Ii(),E=be.ja,rt(),Ie.unshift(be.ka),Ae--,Ae==0&&(je!==null&&(clearInterval(je),je=null),mt&&(x=mt,mt=null,x())),be}var g={a:ds};if(Ae++,n.instantiateWasm)try{return n.instantiateWasm(g,f)}catch(x){O(`Module.instantiateWasm callback failed with error: ${x}`),o(x)}return xt(g,function(x){f(x.instance)}).catch(o),{}}();n._OrtInit=(f,g)=>(n._OrtInit=be.la)(f,g),n._OrtGetLastError=(f,g)=>(n._OrtGetLastError=be.ma)(f,g),n._OrtCreateSessionOptions=(f,g,x,T,k,L,j,Z,ie,re)=>(n._OrtCreateSessionOptions=be.na)(f,g,x,T,k,L,j,Z,ie,re),n._OrtAppendExecutionProvider=(f,g)=>(n._OrtAppendExecutionProvider=be.oa)(f,g),n._OrtAddFreeDimensionOverride=(f,g,x)=>(n._OrtAddFreeDimensionOverride=be.pa)(f,g,x),n._OrtAddSessionConfigEntry=(f,g,x)=>(n._OrtAddSessionConfigEntry=be.qa)(f,g,x),n._OrtReleaseSessionOptions=f=>(n._OrtReleaseSessionOptions=be.ra)(f),n._OrtCreateSession=(f,g,x)=>(n._OrtCreateSession=be.sa)(f,g,x),n._OrtReleaseSession=f=>(n._OrtReleaseSession=be.ta)(f),n._OrtGetInputOutputCount=(f,g,x)=>(n._OrtGetInputOutputCount=be.ua)(f,g,x),n._OrtGetInputName=(f,g)=>(n._OrtGetInputName=be.va)(f,g),n._OrtGetOutputName=(f,g)=>(n._OrtGetOutputName=be.wa)(f,g),n._OrtFree=f=>(n._OrtFree=be.xa)(f),n._OrtCreateTensor=(f,g,x,T,k,L)=>(n._OrtCreateTensor=be.ya)(f,g,x,T,k,L),n._OrtGetTensorData=(f,g,x,T,k)=>(n._OrtGetTensorData=be.za)(f,g,x,T,k),n._OrtReleaseTensor=f=>(n._OrtReleaseTensor=be.Aa)(f),n._OrtCreateRunOptions=(f,g,x,T)=>(n._OrtCreateRunOptions=be.Ba)(f,g,x,T),n._OrtAddRunConfigEntry=(f,g,x)=>(n._OrtAddRunConfigEntry=be.Ca)(f,g,x),n._OrtReleaseRunOptions=f=>(n._OrtReleaseRunOptions=be.Da)(f),n._OrtCreateBinding=f=>(n._OrtCreateBinding=be.Ea)(f),n._OrtBindInput=(f,g,x)=>(n._OrtBindInput=be.Fa)(f,g,x),n._OrtBindOutput=(f,g,x,T)=>(n._OrtBindOutput=be.Ga)(f,g,x,T),n._OrtClearBoundOutputs=f=>(n._OrtClearBoundOutputs=be.Ha)(f),n._OrtReleaseBinding=f=>(n._OrtReleaseBinding=be.Ia)(f),n._OrtRunWithBinding=(f,g,x,T,k)=>(n._OrtRunWithBinding=be.Ja)(f,g,x,T,k),n._OrtRun=(f,g,x,T,k,L,j,Z)=>(n._OrtRun=be.Ka)(f,g,x,T,k,L,j,Z),n._OrtEndProfiling=f=>(n._OrtEndProfiling=be.La)(f),n._JsepOutput=(f,g,x)=>(n._JsepOutput=be.Ma)(f,g,x),n._JsepGetNodeName=f=>(n._JsepGetNodeName=be.Na)(f);var Ti=()=>(Ti=be.Oa)(),en=n._malloc=f=>(en=n._malloc=be.Pa)(f),qt=n._free=f=>(qt=n._free=be.Qa)(f),bn=f=>(bn=be.Ra)(f),qn=()=>(qn=be.Ta)(),jn=f=>(jn=be.Ua)(f),Po=f=>(Po=be.Va)(f),yn=f=>(yn=be.Xa)(f),Si=()=>(Si=be.Ya)(),br=f=>(br=be.Za)(f),rr=()=>(rr=be._a)();n.___start_em_js=781024,n.___stop_em_js=781185;function Ii(){var f=be;f=Object.assign({},f);var g=T=>()=>T()>>>0,x=T=>k=>T(k)>>>0;return f.Oa=g(f.Oa),f.Pa=x(f.Pa),f.Ra=x(f.Ra),f.Ta=g(f.Ta),f.Va=x(f.Va),f}n.stackAlloc=Po,n.stackSave=qn,n.stackRestore=jn,n.UTF8ToString=_t,n.stringToUTF8=(f,g,x)=>Or(f,q,g,x),n.lengthBytesUTF8=Vr;var Gr;mt=function f(){Gr||ko(),Gr||(mt=f)};function ko(){if(!(0<Ae)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;){var f=n.preRun.shift();Ee.unshift(f)}for(;0<Ee.length;)Ee.shift()(n);if(!(0<Ae||Gr||(Gr=!0,n.calledRun=!0,D))){for(;0<Ie.length;)Ie.shift()(n);for(t(n);0<ve.length;)ve.shift()(n)}}}return ko(),e.ready}})();typeof Cm=="object"&&typeof Pu=="object"?Pu.exports=Em:typeof define=="function"&&define.amd&&define([],()=>Em)});var km=st(()=>{});var Dm=st(()=>{});var Bm={};tn(Bm,{cpus:()=>k2});var k2,Rm=z(()=>{k2=void 0});var Mm=st((Nm,ku)=>{"use strict";var zm=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return se.buffer!=ve.buffer&&Rt(),ve}function t(){return se.buffer!=ve.buffer&&Rt(),Ae}function o(){return se.buffer!=ve.buffer&&Rt(),je}function i(){return se.buffer!=ve.buffer&&Rt(),mt}function s(){return se.buffer!=ve.buffer&&Rt(),Y}function a(){return se.buffer!=ve.buffer&&Rt(),me}function u(){return se.buffer!=ve.buffer&&Rt(),Ne}function l(){return se.buffer!=ve.buffer&&Rt(),Qt}var d=e,p,m;d.ready=new Promise((c,h)=>{p=c,m=h}),d.mountExternalData=(c,h)=>{(d.Fb||(d.Fb=new Map)).set(c,h)},d.unmountExternalData=()=>{delete d.Fb};let b=()=>{let c=(y,$,C)=>(...B)=>{let W=rr,K=$?.();B=y(...B);let ae=$?.();return K!==ae&&(y=ae,C(K),$=C=null),rr!=W?k():B},h=y=>async(...$)=>{try{if(d.Eb)throw Error("Session already started");let C=d.Eb={kc:$[0],errors:[]},B=await y(...$);if(d.Eb!==C)throw Error("Session mismatch");d.Ob?.flush();let W=C.errors;if(0<W.length){let K=await Promise.all(W);if(K=K.filter(ae=>ae),0<K.length)throw Error(K.join(`
`))}return B}finally{d.Eb=null}};d._OrtCreateSession=c(d._OrtCreateSession,()=>d._OrtCreateSession,y=>d._OrtCreateSession=y),d._OrtRun=h(c(d._OrtRun,()=>d._OrtRun,y=>d._OrtRun=y)),d._OrtRunWithBinding=h(c(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,y=>d._OrtRunWithBinding=y)),d._OrtBindInput=c(d._OrtBindInput,()=>d._OrtBindInput,y=>d._OrtBindInput=y),b=void 0};d.jsepInit=(c,h)=>{if(b?.(),c==="webgpu"){[d.Ob,d.ac,d.ec,d.Pb,d.dc,d.eb,d.fc,d.ic,d.bc,d.cc,d.hc]=h;let y=d.Ob;d.jsepRegisterBuffer=($,C,B,W)=>y.registerBuffer($,C,B,W),d.jsepGetBuffer=$=>y.getBuffer($),d.jsepCreateDownloader=($,C,B)=>y.createDownloader($,C,B),d.jsepOnReleaseSession=$=>{y.onReleaseSession($)},d.jsepOnRunStart=$=>y.onRunStart($)}};var v=Object.assign({},d),w="./this.program",S=(c,h)=>{throw h},I=typeof window=="object",_=typeof importScripts=="function",O=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",E=d.ENVIRONMENT_IS_PTHREAD||!1,D="";function U(c){return d.locateFile?d.locateFile(c,D):D+c}var H,q,ue;if(O){var ee=(Ou(),qr(Au)),R=(Cu(),qr(Eu));D=_?R.dirname(D)+"/":__dirname+"/",H=(h,y)=>(h=Vr(h)?new URL(h):R.normalize(h),ee.readFileSync(h,y?void 0:"utf8")),ue=h=>(h=H(h,!0),h.buffer||(h=new Uint8Array(h)),h),q=(h,y,$,C=!0)=>{h=Vr(h)?new URL(h):R.normalize(h),ee.readFile(h,C?void 0:"utf8",(B,W)=>{B?$(B):y(C?W.buffer:W)})},!d.thisProgram&&1<process.argv.length&&(w=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),S=(h,y)=>{throw process.exitCode=h,y},d.inspect=()=>"[Emscripten Module object]";let c;try{c=km()}catch(h){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),h}global.Worker=c.Worker}else(I||_)&&(_?D=self.location.href:typeof document<"u"&&document.currentScript&&(D=document.currentScript.src),typeof r<"u"&&r&&(D=r),D.indexOf("blob:")!==0?D=D.substr(0,D.replace(/[?#].*/,"").lastIndexOf("/")+1):D="",O||(H=c=>{var h=new XMLHttpRequest;return h.open("GET",c,!1),h.send(null),h.responseText},_&&(ue=c=>{var h=new XMLHttpRequest;return h.open("GET",c,!1),h.responseType="arraybuffer",h.send(null),new Uint8Array(h.response)}),q=(c,h,y)=>{var $=new XMLHttpRequest;$.open("GET",c,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?h($.response):y()},$.onerror=y,$.send(null)}));O&&typeof performance>"u"&&(global.performance=Dm().performance);var de=console.log.bind(console),et=console.error.bind(console);O&&(de=(...c)=>ee.writeSync(1,c.join(" ")+`
`),et=(...c)=>ee.writeSync(2,c.join(" ")+`
`));var qe=de,Fe=et;Object.assign(d,v),v=null,typeof WebAssembly!="object"&&Jr("no native wasm support detected");var se,rt,Ee=!1,Ie,ve,Ae,je,mt,Y,me,Ne,ft,At,Qt;function Rt(){var c=se.buffer;d.HEAP8=ve=new Int8Array(c),d.HEAP16=je=new Int16Array(c),d.HEAPU8=Ae=new Uint8Array(c),d.HEAPU16=mt=new Uint16Array(c),d.HEAP32=Y=new Int32Array(c),d.HEAPU32=me=new Uint32Array(c),d.HEAPF32=Ne=new Float32Array(c),d.HEAPF64=Qt=new Float64Array(c),d.HEAP64=ft=new BigInt64Array(c),d.HEAPU64=At=new BigUint64Array(c)}var wt=16777216;if(E)se=d.wasmMemory;else if(d.wasmMemory)se=d.wasmMemory;else if(se=new WebAssembly.Memory({initial:wt/65536,maximum:65536,shared:!0}),!(se.buffer instanceof SharedArrayBuffer))throw Fe("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),O&&Fe("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Rt(),wt=se.buffer.byteLength;var xt=[],er=[],Zr=[],Ar=0,Mn=null,fn=null;function po(){if(Ar--,Ar==0&&(Mn!==null&&(clearInterval(Mn),Mn=null),fn)){var c=fn;fn=null,c()}}function Jr(c){throw c="Aborted("+c+")",Fe(c),Ee=!0,Ie=1,c=new WebAssembly.RuntimeError(c+". Build with -sASSERTIONS for more info."),m(c),c}var _t=c=>c.startsWith("data:application/octet-stream;base64,"),Vr=c=>c.startsWith("file://"),Or;Or="ort-wasm-simd-threaded.wasm",_t(Or)||(Or=U(Or));function ho(c){if(ue)return ue(c);throw"both async and sync fetching of the wasm failed"}function ai(c){if(I||_){if(typeof fetch=="function"&&!Vr(c))return fetch(c,{credentials:"same-origin"}).then(h=>{if(!h.ok)throw"failed to load wasm binary file at '"+c+"'";return h.arrayBuffer()}).catch(()=>ho(c));if(q)return new Promise((h,y)=>{q(c,$=>h(new Uint8Array($)),y)})}return Promise.resolve().then(()=>ho(c))}function Wt(c,h,y){return ai(c).then($=>WebAssembly.instantiate($,h)).then($=>$).then(y,$=>{Fe(`failed to asynchronously prepare wasm: ${$}`),Jr($)})}function mo(c,h){var y=Or;return typeof WebAssembly.instantiateStreaming!="function"||_t(y)||Vr(y)||O||typeof fetch!="function"?Wt(y,c,h):fetch(y,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,c).then(h,function(C){return Fe(`wasm streaming compile failed: ${C}`),Fe("falling back to ArrayBuffer instantiation"),Wt(y,c,h)}))}var pn={907972:(c,h,y,$)=>{if(typeof d>"u"||!d.Fb)return 1;if(c=nt(c>>>0),c.startsWith("./")&&(c=c.substring(2)),c=d.Fb.get(c),!c)return 2;if(h>>>=0,y>>>=0,$>>>=0,h+y>c.byteLength)return 3;try{return t().set(c.subarray(h,h+y),$>>>0),0}catch{return 4}},908473:()=>{d.bc()},908504:()=>{d.cc()},908533:()=>{d.hc()},908558:c=>d.ac(c),908591:c=>d.ec(c),908623:(c,h,y)=>{d.Pb(c,h,y,!0)},908662:(c,h,y)=>{d.Pb(c,h,y)},908695:c=>{d.eb("Abs",c,void 0)},908746:c=>{d.eb("Neg",c,void 0)},908797:c=>{d.eb("Floor",c,void 0)},908850:c=>{d.eb("Ceil",c,void 0)},908902:c=>{d.eb("Reciprocal",c,void 0)},908960:c=>{d.eb("Sqrt",c,void 0)},909012:c=>{d.eb("Exp",c,void 0)},909063:c=>{d.eb("Erf",c,void 0)},909114:c=>{d.eb("Sigmoid",c,void 0)},909169:(c,h,y)=>{d.eb("HardSigmoid",c,{alpha:h,beta:y})},909248:c=>{d.eb("Log",c,void 0)},909299:c=>{d.eb("Sin",c,void 0)},909350:c=>{d.eb("Cos",c,void 0)},909401:c=>{d.eb("Tan",c,void 0)},909452:c=>{d.eb("Asin",c,void 0)},909504:c=>{d.eb("Acos",c,void 0)},909556:c=>{d.eb("Atan",c,void 0)},909608:c=>{d.eb("Sinh",c,void 0)},909660:c=>{d.eb("Cosh",c,void 0)},909712:c=>{d.eb("Asinh",c,void 0)},909765:c=>{d.eb("Acosh",c,void 0)},909818:c=>{d.eb("Atanh",c,void 0)},909871:c=>{d.eb("Tanh",c,void 0)},909923:c=>{d.eb("Not",c,void 0)},909974:(c,h,y)=>{d.eb("Clip",c,{min:h,max:y})},910043:c=>{d.eb("Clip",c,void 0)},910095:(c,h)=>{d.eb("Elu",c,{alpha:h})},910153:c=>{d.eb("Relu",c,void 0)},910205:(c,h)=>{d.eb("LeakyRelu",c,{alpha:h})},910269:(c,h)=>{d.eb("ThresholdedRelu",c,{alpha:h})},910339:(c,h)=>{d.eb("Cast",c,{to:h})},910397:c=>{d.eb("Add",c,void 0)},910448:c=>{d.eb("Sub",c,void 0)},910499:c=>{d.eb("Mul",c,void 0)},910550:c=>{d.eb("Div",c,void 0)},910601:c=>{d.eb("Pow",c,void 0)},910652:c=>{d.eb("Equal",c,void 0)},910705:c=>{d.eb("Greater",c,void 0)},910760:c=>{d.eb("GreaterOrEqual",c,void 0)},910822:c=>{d.eb("Less",c,void 0)},910874:c=>{d.eb("LessOrEqual",c,void 0)},910933:(c,h,y,$,C)=>{d.eb("ReduceMean",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},911092:(c,h,y,$,C)=>{d.eb("ReduceMax",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},911250:(c,h,y,$,C)=>{d.eb("ReduceMin",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},911408:(c,h,y,$,C)=>{d.eb("ReduceProd",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},911567:(c,h,y,$,C)=>{d.eb("ReduceSum",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},911725:(c,h,y,$,C)=>{d.eb("ReduceL1",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},911882:(c,h,y,$,C)=>{d.eb("ReduceL2",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},912039:(c,h,y,$,C)=>{d.eb("ReduceLogSum",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},912200:(c,h,y,$,C)=>{d.eb("ReduceSumSquare",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},912364:(c,h,y,$,C)=>{d.eb("ReduceLogSumExp",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},912528:c=>{d.eb("Where",c,void 0)},912581:(c,h,y)=>{d.eb("Transpose",c,{perm:h?Array.from(s().subarray(h>>>0,y>>>0)):[]})},912689:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je,F,Te)=>{d.eb("ConvTranspose",c,{format:ae?"NHWC":"NCHW",autoPad:h,dilations:[y],group:$,kernel_shape:[C],pads:[B,W],strides:[K],wIsConst:()=>!!n()[oe>>>0],outputPadding:$e?Array.from(s().subarray($e>>>0,Le>>>0)):[],outputShape:Je?Array.from(s().subarray(Je>>>0,F>>>0)):[],activation:nt(Te)})},913091:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je,F)=>{d.eb("ConvTranspose",c,{format:K?"NHWC":"NCHW",autoPad:h,dilations:Array.from(s().subarray(y>>>0,(y>>>0)+2>>>0)),group:$,kernelShape:Array.from(s().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(s().subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(s().subarray(W>>>0,(W>>>0)+2>>>0)),wIsConst:()=>!!n()[ae>>>0],outputPadding:oe?Array.from(s().subarray(oe>>>0,$e>>>0)):[],outputShape:Le?Array.from(s().subarray(Le>>>0,Je>>>0)):[],activation:nt(F)})},913656:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je,F,Te)=>{d.eb("ConvTranspose",c,{format:ae?"NHWC":"NCHW",autoPad:h,dilations:[y],group:$,kernel_shape:[C],pads:[B,W],strides:[K],wIsConst:()=>!!n()[oe>>>0],outputPadding:$e?Array.from(s().subarray($e>>>0,Le>>>0)):[],outputShape:Je?Array.from(s().subarray(Je>>>0,F>>>0)):[],activation:nt(Te)})},914058:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je,F)=>{d.eb("ConvTranspose",c,{format:K?"NHWC":"NCHW",autoPad:h,dilations:Array.from(s().subarray(y>>>0,(y>>>0)+2>>>0)),group:$,kernelShape:Array.from(s().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(s().subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(s().subarray(W>>>0,(W>>>0)+2>>>0)),wIsConst:()=>!!n()[ae>>>0],outputPadding:oe?Array.from(s().subarray(oe>>>0,$e>>>0)):[],outputShape:Le?Array.from(s().subarray(Le>>>0,Je>>>0)):[],activation:nt(F)})},914623:(c,h)=>{d.eb("GlobalAveragePool",c,{format:h?"NHWC":"NCHW"})},914714:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je,F,Te,Ke)=>{d.eb("AveragePool",c,{format:Ke?"NHWC":"NCHW",auto_pad:h,ceil_mode:y,count_include_pad:$,storage_order:C,dilations:[B,W],kernel_shape:[K,ae],pads:[oe,$e,Le,Je],strides:[F,Te]})},914998:(c,h)=>{d.eb("GlobalAveragePool",c,{format:h?"NHWC":"NCHW"})},915089:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je,F,Te,Ke)=>{d.eb("AveragePool",c,{format:Ke?"NHWC":"NCHW",auto_pad:h,ceil_mode:y,count_include_pad:$,storage_order:C,dilations:[B,W],kernel_shape:[K,ae],pads:[oe,$e,Le,Je],strides:[F,Te]})},915373:(c,h)=>{d.eb("GlobalMaxPool",c,{format:h?"NHWC":"NCHW"})},915460:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je,F,Te,Ke)=>{d.eb("MaxPool",c,{format:Ke?"NHWC":"NCHW",auto_pad:h,ceil_mode:y,count_include_pad:$,storage_order:C,dilations:[B,W],kernel_shape:[K,ae],pads:[oe,$e,Le,Je],strides:[F,Te]})},915740:(c,h)=>{d.eb("GlobalMaxPool",c,{format:h?"NHWC":"NCHW"})},915827:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je,F,Te,Ke)=>{d.eb("MaxPool",c,{format:Ke?"NHWC":"NCHW",auto_pad:h,ceil_mode:y,count_include_pad:$,storage_order:C,dilations:[B,W],kernel_shape:[K,ae],pads:[oe,$e,Le,Je],strides:[F,Te]})},916107:(c,h,y,$,C)=>{d.eb("Gemm",c,{alpha:h,beta:y,transA:$,transB:C})},916211:c=>{d.eb("MatMul",c,void 0)},916265:(c,h,y,$)=>{d.eb("ArgMax",c,{keepDims:!!h,selectLastIndex:!!y,axis:$})},916373:(c,h,y,$)=>{d.eb("ArgMin",c,{keepDims:!!h,selectLastIndex:!!y,axis:$})},916481:(c,h)=>{d.eb("Softmax",c,{axis:h})},916544:(c,h)=>{d.eb("Concat",c,{axis:h})},916604:(c,h,y,$,C)=>{d.eb("Split",c,{axis:h,numOutputs:y,splitSizes:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},916744:c=>{d.eb("Expand",c,void 0)},916798:(c,h)=>{d.eb("Gather",c,{axis:Number(h)})},916869:(c,h)=>{d.eb("GatherElements",c,{axis:Number(h)})},916948:(c,h,y,$,C,B,W,K,ae,oe,$e)=>{d.eb("Resize",c,{antialias:h,axes:y?Array.from(s().subarray(y>>>0,$>>>0)):[],coordinateTransformMode:nt(C),cubicCoeffA:B,excludeOutside:W,extrapolationValue:K,keepAspectRatioPolicy:nt(ae),mode:nt(oe),nearestMode:nt($e)})},917294:(c,h,y,$,C,B,W)=>{d.eb("Slice",c,{starts:h?Array.from(s().subarray(h>>>0,y>>>0)):[],ends:$?Array.from(s().subarray($>>>0,C>>>0)):[],axes:B?Array.from(s().subarray(B>>>0,W>>>0)):[]})},917510:c=>{d.eb("Tile",c,void 0)},917562:(c,h,y)=>{d.eb("LayerNormalization",c,{axis:Number(h),epsilon:Number(y)})},917669:(c,h,y)=>{d.eb("InstanceNormalization",c,{epsilon:h,format:y?"NHWC":"NCHW"})},917783:(c,h,y)=>{d.eb("InstanceNormalization",c,{epsilon:h,format:y?"NHWC":"NCHW"})},917897:c=>{d.eb("Range",c,void 0)},917950:(c,h)=>{d.eb("Einsum",c,{equation:nt(h)})},918031:(c,h,y,$,C)=>{d.eb("Pad",c,{mode:h,value:y,pads:$?Array.from(s().subarray($>>>0,C>>>0)):[]})},918158:(c,h,y,$,C,B)=>{d.eb("BatchNormalization",c,{epsilon:h,momentum:y,spatial:!!C,trainingMode:!!$,format:B?"NHWC":"NCHW"})},918327:(c,h,y,$,C,B)=>{d.eb("BatchNormalization",c,{epsilon:h,momentum:y,spatial:!!C,trainingMode:!!$,format:B?"NHWC":"NCHW"})},918496:(c,h,y)=>{d.eb("CumSum",c,{exclusive:Number(h),reverse:Number(y)})},918593:(c,h,y,$,C,B,W,K,ae)=>{d.eb("Attention",c,{numHeads:h,isUnidirectional:y,maskFilterValue:$,scale:C,doRotary:B,qkvHiddenSizes:W?Array.from(s().subarray(Number(K)>>>0,Number(K)+W>>>0)):[],pastPresentShareBuffer:!!ae})},918865:c=>{d.eb("BiasAdd",c,void 0)},918920:c=>{d.eb("BiasSplitGelu",c,void 0)},918981:c=>{d.eb("FastGelu",c,void 0)},919037:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je)=>{d.eb("Conv",c,{format:ae?"NHWC":"NCHW",auto_pad:h,dilations:[y],group:$,kernel_shape:[C],pads:B?Array.from(s().subarray(B>>>0,W>>>0)):[],strides:[K],w_is_const:()=>!!n()[oe>>>0],activation:nt($e),activation_params:Le?Array.from(u().subarray(Le>>>0,Je>>>0)):[]})},919407:(c,h,y,$,C,B,W,K,ae,oe,$e,Le,Je,F,Te,Ke)=>{d.eb("Conv",c,{format:Le?"NHWC":"NCHW",auto_pad:h,dilations:[y,$],group:C,kernel_shape:[B,W],pads:K?Array.from(s().subarray(K>>>0,ae>>>0)):[],strides:[oe,$e],w_is_const:()=>!!n()[Je>>>0],activation:nt(F),activation_params:Te?Array.from(u().subarray(Te>>>0,Ke>>>0)):[]})},919798:c=>{d.eb("Gelu",c,void 0)},919850:(c,h,y,$,C,B)=>{d.eb("MatMulNBits",c,{k:h,n:y,accuracyLevel:$,bits:C,blockSize:B})},919977:(c,h,y,$,C,B)=>{d.eb("MultiHeadAttention",c,{numHeads:h,isUnidirectional:y,maskFilterValue:$,scale:C,doRotary:B})},920136:(c,h)=>{d.eb("SkipLayerNormalization",c,{epsilon:h})},920217:c=>{d.fc(c)},920251:(c,h)=>d.ic(c,h,d.Eb.kc,d.Eb.errors)};function go(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}var or=c=>{c.terminate(),c.onmessage=()=>{}},si=c=>{we.yb.length==0&&(xo(),we.Qb(we.yb[0]));var h=we.yb.pop();if(!h)return 6;we.zb.push(h),we.pb[c.xb]=h,h.xb=c.xb;var y={cmd:"run",start_routine:c.lc,arg:c.Wb,pthread_ptr:c.xb};return O&&h.unref(),h.postMessage(y,c.rc),0},Ot=0,bo=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,yo=(c,h,y)=>{h>>>=0;var $=h+y;for(y=h;c[y]&&!(y>=$);)++y;if(16<y-h&&c.buffer&&bo)return bo.decode(c.buffer instanceof SharedArrayBuffer?c.slice(h,y):c.subarray(h,y));for($="";h<y;){var C=c[h++];if(C&128){var B=c[h++]&63;if((C&224)==192)$+=String.fromCharCode((C&31)<<6|B);else{var W=c[h++]&63;C=(C&240)==224?(C&15)<<12|B<<6|W:(C&7)<<18|B<<12|W<<6|c[h++]&63,65536>C?$+=String.fromCharCode(C):(C-=65536,$+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else $+=String.fromCharCode(C)}return $},nt=(c,h)=>(c>>>=0)?yo(t(),c,h):"",vo=c=>{var h=gs();return c=c(),Ei(h),c};function Re(c,h){var y=arguments.length-2,$=arguments;return vo(()=>{for(var C=2*y,B=bs(8*C),W=B>>>3,K=0;K<y;K++){var ae=$[2+K];typeof ae=="bigint"?(ft[W+2*K]=1n,ft[W+2*K+1]=ae):(ft[W+2*K]=0n,l()[W+2*K+1>>>0]=ae)}return Rl(c,C,B,h)})}function Ht(c){if(E)return Re(0,1,c);Ie=c,0<Ot||(we.mc(),d.onExit?.(c),Ee=!0),S(c,new go(c))}var Ln=c=>{if(Ie=c,E)throw ui(c),"unwind";Ht(c)},wo=c=>{c instanceof go||c=="unwind"||S(1,c)};function as(){for(var c=d.numThreads;c--;)xo();xt.unshift(()=>{Ar++,ss(()=>po())})}function xo(){var c=U("ort-wasm-simd-threaded.worker.js");c=new Worker(c),we.yb.push(c)}function ss(c){E?c():Promise.all(we.yb.map(we.Qb)).then(c)}var we={yb:[],zb:[],Vb:[],pb:{},Ib(){E?(we.receiveObjectTransfer=we.jc,we.threadInitTLS=we.Ub,we.setExitStatus=we.Tb):as()},Tb:c=>Ie=c,vc:["$terminateWorker"],mc:()=>{for(var c of we.zb)or(c);for(c of we.yb)or(c);we.yb=[],we.zb=[],we.pb=[]},Sb:c=>{var h=c.xb;delete we.pb[h],we.yb.push(c),we.zb.splice(we.zb.indexOf(c),1),c.xb=0,hs(h)},jc(){},Ub(){we.Vb.forEach(c=>c())},Qb:c=>new Promise(h=>{c.onmessage=B=>{B=B.data;var W=B.cmd;if(B.targetThread&&B.targetThread!=Oi()){var K=we.pb[B.targetThread];K?K.postMessage(B,B.transferList):Fe(`Internal error! Worker sent a message "${W}" to target pthread ${B.targetThread}, but that thread no longer exists!`)}else W==="checkMailbox"?bn():W==="spawnThread"?si(B):W==="cleanupThread"?we.Sb(we.pb[B.thread]):W==="killThread"?(B=B.thread,W=we.pb[B],delete we.pb[B],or(W),hs(B),we.zb.splice(we.zb.indexOf(W),1),W.xb=0):W==="cancelThread"?we.pb[B.thread].postMessage({cmd:"cancel"}):W==="loaded"?(c.loaded=!0,O&&!c.xb&&c.unref(),h(c)):W==="alert"?alert(`Thread ${B.threadId}: ${B.text}`):B.target==="setimmediate"?c.postMessage(B):W==="callHandler"?d[B.handler](...B.args):W&&Fe(`worker sent an unknown command ${W}`)},c.onerror=B=>{throw Fe(`worker sent an error! ${B.filename}:${B.lineno}: ${B.message}`),B},O&&(c.on("message",B=>c.onmessage({data:B})),c.on("error",B=>c.onerror(B)));var y=[],$=["onExit"],C;for(C of $)d.hasOwnProperty(C)&&y.push(C);c.postMessage({cmd:"load",handlers:y,urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:se,wasmModule:rt})})};d.PThread=we;var Fn=c=>{for(;0<c.length;)c.shift()(d)};d.establishStackSpace=()=>{var c=Oi(),h=a()[c+52>>>2>>>0];c=a()[c+56>>>2>>>0],Nl(h,h-c),Ei(h)};function ui(c){if(E)return Re(1,0,c);Ln(c)}d.invokeEntryPoint=(c,h)=>{c=Ml.apply(null,[c,h]),0<Ot?we.Tb(c):ms(c)};function us(c){this.Db=c-24,this.tc=function(h){a()[this.Db+4>>>2>>>0]=h},this.Mb=function(h){a()[this.Db+8>>>2>>>0]=h},this.Ib=function(h,y){this.Kb(),this.tc(h),this.Mb(y)},this.Kb=function(){a()[this.Db+16>>>2>>>0]=0}}var li=0,_o=0;function $o(c,h,y,$){return E?Re(2,1,c,h,y,$):hn(c,h,y,$)}function hn(c,h,y,$){if(c>>>=0,h>>>=0,y>>>=0,$>>>=0,typeof SharedArrayBuffer>"u")return Fe("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return E&&C.length===0?$o(c,h,y,$):(c={lc:y,xb:c,Wb:$,rc:C},E?(c.uc="spawnThread",postMessage(c,C),0):si(c))}function di(c,h,y){return E?Re(3,1,c,h,y):0}function gr(c,h){if(E)return Re(4,1,c,h)}var zt=c=>{for(var h=0,y=0;y<c.length;++y){var $=c.charCodeAt(y);127>=$?h++:2047>=$?h+=2:55296<=$&&57343>=$?(h+=4,++y):h+=3}return h},To=(c,h,y,$)=>{if(y>>>=0,!(0<$))return 0;var C=y;$=y+$-1;for(var B=0;B<c.length;++B){var W=c.charCodeAt(B);if(55296<=W&&57343>=W){var K=c.charCodeAt(++B);W=65536+((W&1023)<<10)|K&1023}if(127>=W){if(y>=$)break;h[y++>>>0]=W}else{if(2047>=W){if(y+1>=$)break;h[y++>>>0]=192|W>>6}else{if(65535>=W){if(y+2>=$)break;h[y++>>>0]=224|W>>12}else{if(y+3>=$)break;h[y++>>>0]=240|W>>18,h[y++>>>0]=128|W>>12&63}h[y++>>>0]=128|W>>6&63}h[y++>>>0]=128|W&63}}return h[y>>>0]=0,y-C},Qr=(c,h,y)=>To(c,t(),h,y);function So(c,h){if(E)return Re(5,1,c,h)}function Io(c,h,y){if(E)return Re(6,1,c,h,y)}function ci(c,h,y){return E?Re(7,1,c,h,y):0}function Un(c,h){if(E)return Re(8,1,c,h)}function fi(c,h,y){if(E)return Re(9,1,c,h,y)}function pi(c,h,y,$){if(E)return Re(10,1,c,h,y,$)}function hi(c,h,y,$){if(E)return Re(11,1,c,h,y,$)}function mi(c,h,y,$){if(E)return Re(12,1,c,h,y,$)}function Ao(c){if(E)return Re(13,1,c)}function mn(c,h){if(E)return Re(14,1,c,h)}function gi(c,h,y){if(E)return Re(15,1,c,h,y)}var Vn=c=>{if(c===null)return"null";var h=typeof c;return h==="object"||h==="array"||h==="function"?c.toString():""+c},Oo,tr=c=>{for(var h="";t()[c>>>0];)h+=Oo[t()[c++>>>0]];return h},Eo={},Gn={},ls={},Nt;function bi(c,h,y={}){var $=h.name;if(!c)throw new Nt(`type "${$}" must have a positive integer typeid pointer`);if(Gn.hasOwnProperty(c)){if(y.Zb)return;throw new Nt(`Cannot register type '${$}' twice`)}Gn[c]=h,delete ls[c],Eo.hasOwnProperty(c)&&(h=Eo[c],delete Eo[c],h.forEach(C=>C()))}function ir(c,h,y={}){if(!("argPackAdvance"in h))throw new TypeError("registerType registeredInstance requires argPackAdvance");bi(c,h,y)}var Co=(c,h,y)=>{switch(h){case 1:return y?$=>n()[$>>>0>>>0]:$=>t()[$>>>0>>>0];case 2:return y?$=>o()[$>>>1>>>0]:$=>i()[$>>>1>>>0];case 4:return y?$=>s()[$>>>2>>>0]:$=>a()[$>>>2>>>0];case 8:return y?$=>ft[$>>>3]:$=>At[$>>>3];default:throw new TypeError(`invalid integer width (${h}): ${c}`)}};function Wn(){this.wb=[void 0],this.Nb=[]}var Mt=new Wn;function gn(c){c>>>=0,c>=Mt.Db&&--Mt.get(c).Rb===0&&Mt.Mb(c)}var Et=c=>{if(!c)throw new Nt("Cannot use deleted val. handle = "+c);return Mt.get(c).value},Lt=c=>{switch(c){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Mt.Kb({Rb:1,value:c})}};function yi(c){return this.fromWireType(s()[c>>>2>>>0])}var vi=(c,h)=>{switch(h){case 4:return function(y){return this.fromWireType(u()[y>>>2>>>0])};case 8:return function(y){return this.fromWireType(l()[y>>>3>>>0])};default:throw new TypeError(`invalid float width (${h}): ${c}`)}};function wi(c){return this.fromWireType(a()[c>>>2>>>0])}var xi=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,_i=(c,h)=>{for(var y=c>>1,$=y+h/2;!(y>=$)&&i()[y>>>0];)++y;if(y<<=1,32<y-c&&xi)return xi.decode(t().slice(c,y));for(y="",$=0;!($>=h/2);++$){var C=o()[c+2*$>>>1>>>0];if(C==0)break;y+=String.fromCharCode(C)}return y},$i=(c,h,y)=>{if(y??=2147483647,2>y)return 0;y-=2;var $=h;y=y<2*c.length?y/2:c.length;for(var C=0;C<y;++C){var B=c.charCodeAt(C);o()[h>>>1>>>0]=B,h+=2}return o()[h>>>1>>>0]=0,h-$},Hn=c=>2*c.length,ds=(c,h)=>{for(var y=0,$="";!(y>=h/4);){var C=s()[c+4*y>>>2>>>0];if(C==0)break;++y,65536<=C?(C-=65536,$+=String.fromCharCode(55296|C>>10,56320|C&1023)):$+=String.fromCharCode(C)}return $},be=(c,h,y)=>{if(h>>>=0,y??=2147483647,4>y)return 0;var $=h;y=$+y-4;for(var C=0;C<c.length;++C){var B=c.charCodeAt(C);if(55296<=B&&57343>=B){var W=c.charCodeAt(++C);B=65536+((B&1023)<<10)|W&1023}if(s()[h>>>2>>>0]=B,h+=4,h+4>y)break}return s()[h>>>2>>>0]=0,h-$},Ti=c=>{for(var h=0,y=0;y<c.length;++y){var $=c.charCodeAt(y);55296<=$&&57343>=$&&++y,h+=4}return h},en=()=>{if(!(0<Ot))try{E?ms(Ie):Ln(Ie)}catch(c){wo(c)}};function qt(c){c>>>=0,typeof Atomics.sc=="function"&&(Atomics.sc(s(),c>>>2,c).value.then(bn),c+=128,Atomics.store(s(),c>>>2,1))}d.__emscripten_thread_mailbox_await=qt;var bn=()=>{var c=Oi();if(c&&(qt(c),!Ee))try{zl(),en()}catch(h){wo(h)}};d.checkMailbox=bn;var qn=[],jn=(c,h)=>{var y=Gn[c];if(y===void 0)throw c=Dl(c),y=tr(c),Er(c),new Nt(h+" has unknown type "+y);return y},Po=(c,h,y)=>{var $=[];return c=c.toWireType($,y),$.length&&(a()[h>>>2>>>0]=Lt($)),c},yn=c=>{try{c()}catch(h){Jr(h)}};function Si(){var c=ce,h={};for(let[y,$]of Object.entries(c))h[y]=typeof $=="function"?function(){Gr.push(y);try{return $.apply(null,arguments)}finally{Ee||(Gr.pop(),rr&&br===1&&Gr.length===0&&(br=0,Ot+=1,yn(Fl),typeof Fibers<"u"&&Fibers.xc()))}}:$;return h}var br=0,rr=null,Ii=0,Gr=[],ko={},f={},g=0,x=null,T=[];function k(){return new Promise((c,h)=>{x={resolve:c,reject:h}})}function L(){var c=Do(65548),h=c+12;a()[c>>>2>>>0]=h,a()[c+4>>>2>>>0]=h+65536,h=Gr[0];var y=ko[h];return y===void 0&&(y=g++,ko[h]=y,f[y]=h),h=y,s()[c+8>>>2>>>0]=h,c}function j(){var c=s()[rr+8>>>2>>>0];return c=ce[f[c]],--Ot,c()}function Z(c){if(!Ee){if(br===0){var h=!1,y=!1;c(($=0)=>{if(!Ee&&(Ii=$,h=!0,y)){br=2,yn(()=>Ul(rr)),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.resume(),$=!1;try{var C=j()}catch(K){C=K,$=!0}var B=!1;if(!rr){var W=x;W&&(x=null,($?W.reject:W.resolve)(C),B=!0)}if($&&!B)throw C}}),y=!0,h||(br=1,rr=L(),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.pause(),yn(()=>Ll(rr)))}else br===2?(br=0,yn(Vl),Er(rr),rr=null,T.forEach($=>{if(!Ee)try{$(),en()}catch(C){wo(C)}})):Jr(`invalid state: ${br}`);return Ii}}function ie(c){return Z(h=>{c().then(h)})}var re=[],xe={},Ce=c=>{var h=xe[c];return h===void 0?tr(c):h},Ge=()=>typeof globalThis=="object"?globalThis:Function("return this")(),M=c=>{var h=re.length;return re.push(c),h},_e=(c,h)=>{for(var y=Array(c),$=0;$<c;++$)y[$]=jn(a()[h+4*$>>>2>>>0],"parameter "+$);return y},Ue=(c,h)=>Object.defineProperty(h,"name",{value:c});function Wr(c){var h=Function;if(!(h instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof h} which is not a function`);var y=Ue(h.name||"unknownFunctionName",function(){});return y.prototype=h.prototype,y=new y,c=h.apply(y,c),c instanceof Object?c:y}var Hr=c=>c%4===0&&(c%100!==0||c%400===0),ml=[0,31,60,91,121,152,182,213,244,274,305,335],gl=[0,31,59,90,120,151,181,212,243,273,304,334];function bl(c,h,y,$,C,B,W){return E?Re(16,1,c,h,y,$,C,B,W):-52}function yl(c,h,y,$,C,B){if(E)return Re(17,1,c,h,y,$,C,B)}var vl=c=>{var h=zt(c)+1,y=Do(h);return y&&Qr(c,y,h),y},cs=[],wl=(c,h)=>{cs.length=0;for(var y;y=t()[c++>>>0];){var $=y!=105;$&=y!=112,h+=$&&h%8?4:0,cs.push(y==112?a()[h>>>2>>>0]:y==106?ft[h>>>3]:y==105?s()[h>>>2>>>0]:l()[h>>>3>>>0]),h+=$?8:4}return cs},fs={},xl=()=>{if(!ps){var c={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:w||"./this.program"},h;for(h in fs)fs[h]===void 0?delete c[h]:c[h]=fs[h];var y=[];for(h in c)y.push(`${h}=${c[h]}`);ps=y}return ps},ps;function _l(c,h){if(E)return Re(18,1,c,h);c>>>=0,h>>>=0;var y=0;return xl().forEach(($,C)=>{var B=h+y;for(C=a()[c+4*C>>>2>>>0]=B,B=0;B<$.length;++B)n()[C++>>>0>>>0]=$.charCodeAt(B);n()[C>>>0>>>0]=0,y+=$.length+1}),0}function $l(c,h){if(E)return Re(19,1,c,h);c>>>=0,h>>>=0;var y=xl();a()[c>>>2>>>0]=y.length;var $=0;return y.forEach(C=>$+=C.length+1),a()[h>>>2>>>0]=$,0}function Tl(c){return E?Re(20,1,c):52}function Sl(c,h,y,$){return E?Re(21,1,c,h,y,$):52}function Il(c,h,y,$){return E?Re(22,1,c,h,y,$):70}var H0=[null,[],[]];function Al(c,h,y,$){if(E)return Re(23,1,c,h,y,$);h>>>=0,y>>>=0,$>>>=0;for(var C=0,B=0;B<y;B++){var W=a()[h>>>2>>>0],K=a()[h+4>>>2>>>0];h+=8;for(var ae=0;ae<K;ae++){var oe=t()[W+ae>>>0],$e=H0[c];oe===0||oe===10?((c===1?qe:Fe)(yo($e,0)),$e.length=0):$e.push(oe)}C+=K}return a()[$>>>2>>>0]=C,0}var Ol=[31,29,31,30,31,30,31,31,30,31,30,31],El=[31,28,31,30,31,30,31,31,30,31,30,31];function q0(c){var h=Array(zt(c)+1);return To(c,h,0,h.length),h}var j0=(c,h)=>{n().set(c,h>>>0)};function Cl(c,h,y,$){function C(F,Te,Ke){for(F=typeof F=="number"?F.toString():F||"";F.length<Te;)F=Ke[0]+F;return F}function B(F,Te){return C(F,Te,"0")}function W(F,Te){function Ke(Wl){return 0>Wl?-1:0<Wl?1:0}var vn;return(vn=Ke(F.getFullYear()-Te.getFullYear()))===0&&(vn=Ke(F.getMonth()-Te.getMonth()))===0&&(vn=Ke(F.getDate()-Te.getDate())),vn}function K(F){switch(F.getDay()){case 0:return new Date(F.getFullYear()-1,11,29);case 1:return F;case 2:return new Date(F.getFullYear(),0,3);case 3:return new Date(F.getFullYear(),0,2);case 4:return new Date(F.getFullYear(),0,1);case 5:return new Date(F.getFullYear()-1,11,31);case 6:return new Date(F.getFullYear()-1,11,30)}}function ae(F){var Te=F.Ab;for(F=new Date(new Date(F.Bb+1900,0,1).getTime());0<Te;){var Ke=F.getMonth(),vn=(Hr(F.getFullYear())?Ol:El)[Ke];if(Te>vn-F.getDate())Te-=vn-F.getDate()+1,F.setDate(1),11>Ke?F.setMonth(Ke+1):(F.setMonth(0),F.setFullYear(F.getFullYear()+1));else{F.setDate(F.getDate()+Te);break}}return Ke=new Date(F.getFullYear()+1,0,4),Te=K(new Date(F.getFullYear(),0,4)),Ke=K(Ke),0>=W(Te,F)?0>=W(Ke,F)?F.getFullYear()+1:F.getFullYear():F.getFullYear()-1}c>>>=0,h>>>=0,y>>>=0,$>>>=0;var oe=a()[$+40>>>2>>>0];$={pc:s()[$>>>2>>>0],oc:s()[$+4>>>2>>>0],Gb:s()[$+8>>>2>>>0],Lb:s()[$+12>>>2>>>0],Hb:s()[$+16>>>2>>>0],Bb:s()[$+20>>>2>>>0],vb:s()[$+24>>>2>>>0],Ab:s()[$+28>>>2>>>0],wc:s()[$+32>>>2>>>0],nc:s()[$+36>>>2>>>0],qc:oe?nt(oe):""},y=nt(y),oe={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var $e in oe)y=y.replace(new RegExp($e,"g"),oe[$e]);var Le="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Je="January February March April May June July August September October November December".split(" ");oe={"%a":F=>Le[F.vb].substring(0,3),"%A":F=>Le[F.vb],"%b":F=>Je[F.Hb].substring(0,3),"%B":F=>Je[F.Hb],"%C":F=>B((F.Bb+1900)/100|0,2),"%d":F=>B(F.Lb,2),"%e":F=>C(F.Lb,2," "),"%g":F=>ae(F).toString().substring(2),"%G":F=>ae(F),"%H":F=>B(F.Gb,2),"%I":F=>(F=F.Gb,F==0?F=12:12<F&&(F-=12),B(F,2)),"%j":F=>{for(var Te=0,Ke=0;Ke<=F.Hb-1;Te+=(Hr(F.Bb+1900)?Ol:El)[Ke++]);return B(F.Lb+Te,3)},"%m":F=>B(F.Hb+1,2),"%M":F=>B(F.oc,2),"%n":()=>`
`,"%p":F=>0<=F.Gb&&12>F.Gb?"AM":"PM","%S":F=>B(F.pc,2),"%t":()=>"	","%u":F=>F.vb||7,"%U":F=>B(Math.floor((F.Ab+7-F.vb)/7),2),"%V":F=>{var Te=Math.floor((F.Ab+7-(F.vb+6)%7)/7);if(2>=(F.vb+371-F.Ab-2)%7&&Te++,Te)Te==53&&(Ke=(F.vb+371-F.Ab)%7,Ke==4||Ke==3&&Hr(F.Bb)||(Te=1));else{Te=52;var Ke=(F.vb+7-F.Ab-1)%7;(Ke==4||Ke==5&&Hr(F.Bb%400-1))&&Te++}return B(Te,2)},"%w":F=>F.vb,"%W":F=>B(Math.floor((F.Ab+7-(F.vb+6)%7)/7),2),"%y":F=>(F.Bb+1900).toString().substring(2),"%Y":F=>F.Bb+1900,"%z":F=>{F=F.nc;var Te=0<=F;return F=Math.abs(F)/60,(Te?"+":"-")+("0000"+(F/60*100+F%60)).slice(-4)},"%Z":F=>F.qc,"%%":()=>"%"},y=y.replace(/%%/g,"\0\0");for($e in oe)y.includes($e)&&(y=y.replace(new RegExp($e,"g"),oe[$e]($)));return y=y.replace(/\0\0/g,"%"),$e=q0(y),$e.length>h?0:(j0($e,c),$e.length-1)}we.Ib();for(var Pl=Array(256),Ai=0;256>Ai;++Ai)Pl[Ai]=String.fromCharCode(Ai);Oo=Pl,Nt=d.BindingError=class extends Error{constructor(c){super(c),this.name="BindingError"}},d.InternalError=class extends Error{constructor(c){super(c),this.name="InternalError"}},Object.assign(Wn.prototype,{get(c){return this.wb[c]},has(c){return this.wb[c]!==void 0},Kb(c){var h=this.Nb.pop()||this.wb.length;return this.wb[h]=c,h},Mb(c){this.wb[c]=void 0,this.Nb.push(c)}}),Mt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),Mt.Db=Mt.wb.length,d.count_emval_handles=()=>{for(var c=0,h=Mt.Db;h<Mt.wb.length;++h)Mt.wb[h]!==void 0&&++c;return c};var K0=[Ht,ui,$o,di,gr,So,Io,ci,Un,fi,pi,hi,mi,Ao,mn,gi,bl,yl,_l,$l,Tl,Sl,Il,Al],Y0={ua:function(c,h,y){return ie(async()=>{await d.dc(c,h,y)})},b:function(c,h,y){throw c>>>=0,new us(c).Ib(h>>>0,y>>>0),li=c,_o++,li},ga:function(c){Bl(c>>>0,!_,1,!I,131072,!1),we.Ub()},F:function(c){c>>>=0,E?postMessage({cmd:"cleanupThread",thread:c}):we.Sb(we.pb[c])},Y:hn,z:di,ma:gr,U:So,W:Io,N:ci,ka:Un,da:fi,ja:pi,H:hi,V:mi,S:Ao,la:mn,T:gi,K:function(c,h,y,$,C){c>>>=0,h>>>=0,y>>>=0,h=tr(h);var B=h.indexOf("u")!=-1;B&&(C=(1n<<64n)-1n),ir(c,{name:h,fromWireType:W=>W,toWireType:function(W,K){if(typeof K!="bigint"&&typeof K!="number")throw new TypeError(`Cannot convert "${Vn(K)}" to ${this.name}`);if(K<$||K>C)throw new TypeError(`Passing a number "${Vn(K)}" from JS side to C/C++ side to an argument of type "${h}", which is outside the valid range [${$}, ${C}]!`);return K},argPackAdvance:8,readValueFromPointer:Co(h,y,!B),Cb:null})},sa:function(c,h,y,$){c>>>=0,h=tr(h>>>0),ir(c,{name:h,fromWireType:function(C){return!!C},toWireType:function(C,B){return B?y:$},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(t()[C>>>0])},Cb:null})},ra:function(c,h){c>>>=0,h=tr(h>>>0),ir(c,{name:h,fromWireType:y=>{var $=Et(y);return gn(y),$},toWireType:(y,$)=>Lt($),argPackAdvance:8,readValueFromPointer:yi,Cb:null})},J:function(c,h,y){c>>>=0,y>>>=0,h=tr(h>>>0),ir(c,{name:h,fromWireType:$=>$,toWireType:($,C)=>C,argPackAdvance:8,readValueFromPointer:vi(h,y),Cb:null})},v:function(c,h,y,$,C){if(c>>>=0,y>>>=0,h=tr(h>>>0),C===-1&&(C=4294967295),C=K=>K,$===0){var B=32-8*y;C=K=>K<<B>>>B}var W=h.includes("unsigned")?function(K,ae){return ae>>>0}:function(K,ae){return ae};ir(c,{name:h,fromWireType:C,toWireType:W,argPackAdvance:8,readValueFromPointer:Co(h,y,$!==0),Cb:null})},o:function(c,h,y){function $(B){var W=a()[B>>>2>>>0];return B=a()[B+4>>>2>>>0],new C(n().buffer,B,W)}c>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][h];y=tr(y>>>0),ir(c,{name:y,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{Zb:!0})},L:function(c,h){c>>>=0,h=tr(h>>>0);var y=h==="std::string";ir(c,{name:h,fromWireType:function($){var C=a()[$>>>2>>>0],B=$+4;if(y)for(var W=B,K=0;K<=C;++K){var ae=B+K;if(K==C||t()[ae>>>0]==0){if(W=nt(W,ae-W),oe===void 0)var oe=W;else oe+=String.fromCharCode(0),oe+=W;W=ae+1}}else{for(oe=Array(C),K=0;K<C;++K)oe[K]=String.fromCharCode(t()[B+K>>>0]);oe=oe.join("")}return Er($),oe},toWireType:function($,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var B=typeof C=="string";if(!(B||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new Nt("Cannot pass non-string to std::string");var W=y&&B?zt(C):C.length,K=Do(4+W+1),ae=K+4;if(a()[K>>>2>>>0]=W,y&&B)Qr(C,ae,W+1);else if(B)for(B=0;B<W;++B){var oe=C.charCodeAt(B);if(255<oe)throw Er(ae),new Nt("String has UTF-16 code units that do not fit in 8 bits");t()[ae+B>>>0]=oe}else for(B=0;B<W;++B)t()[ae+B>>>0]=C[B];return $!==null&&$.push(Er,K),K},argPackAdvance:8,readValueFromPointer:wi,Cb($){Er($)}})},B:function(c,h,y){if(c>>>=0,h>>>=0,y>>>=0,y=tr(y),h===2)var $=_i,C=$i,B=Hn,W=()=>i(),K=1;else h===4&&($=ds,C=be,B=Ti,W=()=>a(),K=2);ir(c,{name:y,fromWireType:ae=>{for(var oe=a()[ae>>>2>>>0],$e=W(),Le,Je=ae+4,F=0;F<=oe;++F){var Te=ae+4+F*h;(F==oe||$e[Te>>>K]==0)&&(Je=$(Je,Te-Je),Le===void 0?Le=Je:(Le+=String.fromCharCode(0),Le+=Je),Je=Te+h)}return Er(ae),Le},toWireType:(ae,oe)=>{if(typeof oe!="string")throw new Nt(`Cannot pass non-string to C++ string type ${y}`);var $e=B(oe),Le=Do(4+$e+h);return a()[Le>>>2]=$e>>K,C(oe,Le+4,$e+h),ae!==null&&ae.push(Er,Le),Le},argPackAdvance:8,readValueFromPointer:yi,Cb(ae){Er(ae)}})},ta:function(c,h){c>>>=0,h=tr(h>>>0),ir(c,{$b:!0,name:h,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(c,h){c>>>=0,c==h>>>0?setTimeout(()=>bn()):E?postMessage({targetThread:c,cmd:"checkMailbox"}):(c=we.pb[c])&&c.postMessage({cmd:"checkMailbox"})},Z:function(c,h,y,$){h>>>=0,y/=2,qn.length=y,$=$>>>0>>>3;for(var C=0;C<y;C++)qn[C]=ft[$+2*C]?ft[$+2*C+1]:l()[$+2*C+1>>>0];return c=0>c?pn[-c-1]:K0[c],we.Xb=h,h=c.apply(null,qn),we.Xb=0,h},fa:qt,pa:function(c){O&&we.pb[c>>>0].ref()},t:function(c,h,y){return h>>>=0,y>>>=0,c=Et(c>>>0),h=jn(h,"emval::as"),Po(h,y,c)},y:function(c){return c>>>=0,ie(()=>(c=Et(c),c.then(Lt)))},p:function(c,h,y,$){return y>>>=0,$>>>=0,c=re[c>>>0],h=Et(h>>>0),c(null,h,y,$)},k:function(c,h,y,$,C){return y>>>=0,$>>>=0,C>>>=0,c=re[c>>>0],h=Et(h>>>0),y=Ce(y),c(h,h[y],$,C)},c:gn,C:function(c,h){return h>>>=0,c=Et(c>>>0),h=Et(h),c==h},n:function(c){return c>>>=0,c===0?Lt(Ge()):(c=Ce(c),Lt(Ge()[c]))},j:function(c,h,y){h=_e(c,h>>>0);var $=h.shift();c--;var C=`return function (obj, func, destructorsRef, args) {
`,B=0,W=[];y===0&&W.push("obj");for(var K=["retType"],ae=[$],oe=0;oe<c;++oe)W.push("arg"+oe),K.push("argType"+oe),ae.push(h[oe]),C+=`  var arg${oe} = argType${oe}.readValueFromPointer(args${B?"+"+B:""});
`,B+=h[oe].argPackAdvance;for(C+=`  var rv = ${y===1?"new func":"func.call"}(${W.join(", ")});
`,oe=0;oe<c;++oe)h[oe].deleteObject&&(C+=`  argType${oe}.deleteObject(arg${oe});
`);return $.$b||(K.push("emval_returnValue"),ae.push(Po),C+=`  return emval_returnValue(retType, destructorsRef, rv);
`),K.push(C+`};
`),c=Wr(K).apply(null,ae),y=`methodCaller<(${h.map($e=>$e.name).join(", ")}) => ${$.name}>`,M(Ue(y,c))},s:function(c,h){return h>>>=0,c=Et(c>>>0),h=Et(h),Lt(c[h])},e:function(c){c>>>=0,4<c&&(Mt.get(c).Rb+=1)},w:function(){return Lt([])},m:function(c){c=Et(c>>>0);for(var h=Array(c.length),y=0;y<c.length;y++)h[y]=c[y];return Lt(h)},f:function(c){return Lt(Ce(c>>>0))},l:function(){return Lt({})},i:function(c){c>>>=0;for(var h=Et(c);h.length;){var y=h.pop();h.pop()(y)}gn(c)},h:function(c,h,y){h>>>=0,y>>>=0,c=Et(c>>>0),h=Et(h),y=Et(y),c[h]=y},d:function(c,h){return h>>>=0,c=jn(c>>>0,"_emval_take_value"),c=c.readValueFromPointer(h),Lt(c)},aa:function(c,h){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),h>>>=0,c=new Date(1e3*c),s()[h>>>2>>>0]=c.getUTCSeconds(),s()[h+4>>>2>>>0]=c.getUTCMinutes(),s()[h+8>>>2>>>0]=c.getUTCHours(),s()[h+12>>>2>>>0]=c.getUTCDate(),s()[h+16>>>2>>>0]=c.getUTCMonth(),s()[h+20>>>2>>>0]=c.getUTCFullYear()-1900,s()[h+24>>>2>>>0]=c.getUTCDay(),c=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[h+28>>>2>>>0]=c},ba:function(c,h){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),h>>>=0,c=new Date(1e3*c),s()[h>>>2>>>0]=c.getSeconds(),s()[h+4>>>2>>>0]=c.getMinutes(),s()[h+8>>>2>>>0]=c.getHours(),s()[h+12>>>2>>>0]=c.getDate(),s()[h+16>>>2>>>0]=c.getMonth(),s()[h+20>>>2>>>0]=c.getFullYear()-1900,s()[h+24>>>2>>>0]=c.getDay();var y=(Hr(c.getFullYear())?ml:gl)[c.getMonth()]+c.getDate()-1|0;s()[h+28>>>2>>>0]=y,s()[h+36>>>2>>>0]=-(60*c.getTimezoneOffset()),y=new Date(c.getFullYear(),6,1).getTimezoneOffset();var $=new Date(c.getFullYear(),0,1).getTimezoneOffset();c=(y!=$&&c.getTimezoneOffset()==Math.min($,y))|0,s()[h+32>>>2>>>0]=c},ca:function(c){c>>>=0;var h=new Date(s()[c+20>>>2>>>0]+1900,s()[c+16>>>2>>>0],s()[c+12>>>2>>>0],s()[c+8>>>2>>>0],s()[c+4>>>2>>>0],s()[c>>>2>>>0],0),y=s()[c+32>>>2>>>0],$=h.getTimezoneOffset(),C=new Date(h.getFullYear(),6,1).getTimezoneOffset(),B=new Date(h.getFullYear(),0,1).getTimezoneOffset(),W=Math.min(B,C);return 0>y?s()[c+32>>>2>>>0]=+(C!=B&&W==$):0<y!=(W==$)&&(C=Math.max(B,C),h.setTime(h.getTime()+6e4*((0<y?W:C)-$))),s()[c+24>>>2>>>0]=h.getDay(),y=(Hr(h.getFullYear())?ml:gl)[h.getMonth()]+h.getDate()-1|0,s()[c+28>>>2>>>0]=y,s()[c>>>2>>>0]=h.getSeconds(),s()[c+4>>>2>>>0]=h.getMinutes(),s()[c+8>>>2>>>0]=h.getHours(),s()[c+12>>>2>>>0]=h.getDate(),s()[c+16>>>2>>>0]=h.getMonth(),s()[c+20>>>2>>>0]=h.getYear(),c=h.getTime(),isNaN(c)?(s()[kl()>>>2>>>0]=61,c=-1):c/=1e3,BigInt(c)},_:bl,$:yl,P:function(c,h,y){function $(oe){return(oe=oe.toTimeString().match(/\(([A-Za-z ]+)\)$/))?oe[1]:"GMT"}c>>>=0,h>>>=0,y>>>=0;var C=new Date().getFullYear(),B=new Date(C,0,1),W=new Date(C,6,1);C=B.getTimezoneOffset();var K=W.getTimezoneOffset(),ae=Math.max(C,K);a()[c>>>2>>>0]=60*ae,s()[h>>>2>>>0]=+(C!=K),c=$(B),h=$(W),c=vl(c),h=vl(h),K<C?(a()[y>>>2>>>0]=c,a()[y+4>>>2>>>0]=h):(a()[y>>>2>>>0]=h,a()[y+4>>>2>>>0]=c)},q:()=>{Jr("")},g:function(c,h,y){return c>>>=0,h=wl(h>>>0,y>>>0),pn[c].apply(null,h)},M:function(c,h,y){return c>>>=0,h=wl(h>>>0,y>>>0),pn[c].apply(null,h)},G:()=>{},I:()=>Date.now(),oa:()=>{throw Ot+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>O?(Rm(),qr(Bm)).cpus().length:navigator.hardwareConcurrency,O:function(c){c>>>=0;var h=t().length;if(c<=h||4294901760<c)return!1;for(var y=1;4>=y;y*=2){var $=h*(1+.2/y);$=Math.min($,c+100663296);var C=Math;$=Math.max(c,$);e:{C=(C.min.call(C,4294901760,$+(65536-$%65536)%65536)-se.buffer.byteLength+65535)/65536;try{se.grow(C),Rt();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},ha:_l,ia:$l,X:Ln,A:Tl,E:Sl,ea:Il,D:Al,a:se||d.wasmMemory,na:Cl,r:function(c,h,y,$){return Cl(c>>>0,h>>>0,y>>>0,$>>>0)}},ce=function(){function c(y,$){return ce=y.exports,ce=Si(),ce=X0(),we.Vb.push(ce.bb),er.unshift(ce.va),rt=$,po(),ce}var h={a:Y0};if(Ar++,d.instantiateWasm)try{return d.instantiateWasm(h,c)}catch(y){Fe(`Module.instantiateWasm callback failed with error: ${y}`),m(y)}return mo(h,function(y){c(y.instance,y.module)}).catch(m),{}}();d._OrtInit=(c,h)=>(d._OrtInit=ce.wa)(c,h),d._OrtGetLastError=(c,h)=>(d._OrtGetLastError=ce.xa)(c,h),d._OrtCreateSessionOptions=(c,h,y,$,C,B,W,K,ae,oe)=>(d._OrtCreateSessionOptions=ce.ya)(c,h,y,$,C,B,W,K,ae,oe),d._OrtAppendExecutionProvider=(c,h)=>(d._OrtAppendExecutionProvider=ce.za)(c,h),d._OrtAddFreeDimensionOverride=(c,h,y)=>(d._OrtAddFreeDimensionOverride=ce.Aa)(c,h,y),d._OrtAddSessionConfigEntry=(c,h,y)=>(d._OrtAddSessionConfigEntry=ce.Ba)(c,h,y),d._OrtReleaseSessionOptions=c=>(d._OrtReleaseSessionOptions=ce.Ca)(c),d._OrtCreateSession=(c,h,y)=>(d._OrtCreateSession=ce.Da)(c,h,y),d._OrtReleaseSession=c=>(d._OrtReleaseSession=ce.Ea)(c),d._OrtGetInputOutputCount=(c,h,y)=>(d._OrtGetInputOutputCount=ce.Fa)(c,h,y),d._OrtGetInputName=(c,h)=>(d._OrtGetInputName=ce.Ga)(c,h),d._OrtGetOutputName=(c,h)=>(d._OrtGetOutputName=ce.Ha)(c,h),d._OrtFree=c=>(d._OrtFree=ce.Ia)(c),d._OrtCreateTensor=(c,h,y,$,C,B)=>(d._OrtCreateTensor=ce.Ja)(c,h,y,$,C,B),d._OrtGetTensorData=(c,h,y,$,C)=>(d._OrtGetTensorData=ce.Ka)(c,h,y,$,C),d._OrtReleaseTensor=c=>(d._OrtReleaseTensor=ce.La)(c),d._OrtCreateRunOptions=(c,h,y,$)=>(d._OrtCreateRunOptions=ce.Ma)(c,h,y,$),d._OrtAddRunConfigEntry=(c,h,y)=>(d._OrtAddRunConfigEntry=ce.Na)(c,h,y),d._OrtReleaseRunOptions=c=>(d._OrtReleaseRunOptions=ce.Oa)(c),d._OrtCreateBinding=c=>(d._OrtCreateBinding=ce.Pa)(c),d._OrtBindInput=(c,h,y)=>(d._OrtBindInput=ce.Qa)(c,h,y),d._OrtBindOutput=(c,h,y,$)=>(d._OrtBindOutput=ce.Ra)(c,h,y,$),d._OrtClearBoundOutputs=c=>(d._OrtClearBoundOutputs=ce.Sa)(c),d._OrtReleaseBinding=c=>(d._OrtReleaseBinding=ce.Ta)(c),d._OrtRunWithBinding=(c,h,y,$,C)=>(d._OrtRunWithBinding=ce.Ua)(c,h,y,$,C),d._OrtRun=(c,h,y,$,C,B,W,K)=>(d._OrtRun=ce.Va)(c,h,y,$,C,B,W,K),d._OrtEndProfiling=c=>(d._OrtEndProfiling=ce.Wa)(c),d._JsepOutput=(c,h,y)=>(d._JsepOutput=ce.Xa)(c,h,y),d._JsepGetNodeName=c=>(d._JsepGetNodeName=ce.Ya)(c);var kl=()=>(kl=ce.Za)(),Oi=d._pthread_self=()=>(Oi=d._pthread_self=ce._a)(),Do=d._malloc=c=>(Do=d._malloc=ce.$a)(c),Er=d._free=c=>(Er=d._free=ce.ab)(c);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=ce.bb)();var Dl=c=>(Dl=ce.cb)(c);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=ce.db)();var Bl=d.__emscripten_thread_init=(c,h,y,$,C,B)=>(Bl=d.__emscripten_thread_init=ce.fb)(c,h,y,$,C,B);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=ce.gb)();var Rl=(c,h,y,$)=>(Rl=ce.hb)(c,h,y,$),hs=c=>(hs=ce.ib)(c),ms=d.__emscripten_thread_exit=c=>(ms=d.__emscripten_thread_exit=ce.jb)(c),zl=()=>(zl=ce.kb)(),Nl=(c,h)=>(Nl=ce.lb)(c,h),gs=()=>(gs=ce.mb)(),Ei=c=>(Ei=ce.nb)(c),bs=c=>(bs=ce.ob)(c),Ml=d.dynCall_ii=(c,h)=>(Ml=d.dynCall_ii=ce.qb)(c,h),Ll=c=>(Ll=ce.rb)(c),Fl=()=>(Fl=ce.sb)(),Ul=c=>(Ul=ce.tb)(c),Vl=()=>(Vl=ce.ub)();d.___start_em_js=920363,d.___stop_em_js=920524;function X0(){var c=ce;c=Object.assign({},c);var h=$=>()=>$()>>>0,y=$=>C=>$(C)>>>0;return c.Za=h(c.Za),c._a=h(c._a),c.$a=y(c.$a),c.cb=y(c.cb),c.emscripten_main_runtime_thread_id=h(c.emscripten_main_runtime_thread_id),c.mb=h(c.mb),c.ob=y(c.ob),c}d.wasmMemory=se,d.stackAlloc=bs,d.stackSave=gs,d.stackRestore=Ei,d.keepRuntimeAlive=()=>0<Ot,d.UTF8ToString=nt,d.stringToUTF8=Qr,d.lengthBytesUTF8=zt,d.ExitStatus=go,d.PThread=we;var Ci;fn=function c(){Ci||Gl(),Ci||(fn=c)};function Gl(){if(!(0<Ar))if(E)p(d),E||Fn(er),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)xt.unshift(d.preRun.shift());Fn(xt),0<Ar||Ci||(Ci=!0,d.calledRun=!0,Ee||(E||Fn(er),p(d),E||Fn(Zr)))}}return Gl(),e.ready}})();typeof Nm=="object"&&typeof ku=="object"?ku.exports=zm:typeof define=="function"&&define.amd&&define([],()=>zm)});var Lm=st((vk,D2)=>{D2.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var Um,B2,Du,Bu,Oa,Fm,R2,z2,N2,Vm,pt,so=z(()=>{"use strict";Um=Pm();B2=Mm(),Bu=!1,Oa=!1,Fm=!1,R2=r=>{if(r===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+r+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},z2=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},N2=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Vm=async r=>{if(Bu)return Promise.resolve();if(Oa)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Fm)throw new Error("previous call to 'initializeWebAssembly()' failed.");Oa=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=R2(n),i=t&&z2(),s=r.wasmPaths,a=typeof s=="string"?s:void 0,u=N2(i,o),l=typeof s=="object"?s[u]:void 0,d=!1,p=[];if(e>0&&p.push(new Promise(m=>{setTimeout(()=>{d=!0,m()},e)})),p.push(new Promise((m,b)=>{let v=o?B2:Um,w={locateFile:(S,I)=>{if(o&&S.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Lm()],{type:"text/javascript"}));if(S.endsWith(".wasm")){if(l)return l;let _=a??I;return u==="ort-wasm-simd.wasm"?_+"ort-wasm-simd.jsep.wasm":u==="ort-wasm-simd-threaded.wasm"?_+"ort-wasm-simd-threaded.jsep.wasm":_+u}return I+S}};if(o)if(w.numThreads=n,typeof Blob>"u")w.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let S=`var ortWasmThreaded=${v.toString()};`;w.mainScriptUrlOrBlob=new Blob([S],{type:"text/javascript"})}v(w).then(S=>{Oa=!1,Bu=!0,Du=S,m()},S=>{Oa=!1,Fm=!0,b(S)})})),await Promise.race(p),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},pt=()=>{if(Bu&&Du)return Du;throw new Error("WebAssembly is not initialized yet.")}});var ht,Zo,ot,Ea=z(()=>{"use strict";so();ht=(r,e)=>{let n=pt(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},Zo=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let s=e?e+o:o;if(typeof i=="object")Zo(i,s+".",n,t);else if(typeof i=="string"||typeof i=="number")t(s,i.toString());else if(typeof i=="boolean")t(s,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},ot=r=>{let e=pt(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],s=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${s}`)}finally{e.stackRestore(n)}}});var Gm,Wm=z(()=>{"use strict";so();Ea();Gm=r=>{let e=pt(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=ht(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&ot("Can't create run options."),r?.extra!==void 0&&Zo(r.extra,"",new WeakSet,(s,a)=>{let u=ht(s,t),l=ht(a,t);e._OrtAddRunConfigEntry(n,u,l)!==0&&ot(`Can't set a run config entry: ${s} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(s=>e._free(s)),i}}});var M2,L2,F2,U2,Hm,qm=z(()=>{"use strict";so();Ea();M2=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},L2=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},F2=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},U2=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"webnn":if(o="WEBNN",typeof t!="string"){let s=t;if(s?.deviceType){let a=ht("deviceType",n),u=ht(s.deviceType,n);pt()._OrtAddSessionConfigEntry(r,a,u)!==0&&ot(`Can't set a session config entry: 'deviceType' - ${s.deviceType}.`)}if(s?.numThreads){let a=s.numThreads;(typeof a!="number"||!Number.isInteger(a)||a<0)&&(a=0);let u=ht("numThreads",n),l=ht(a.toString(),n);pt()._OrtAddSessionConfigEntry(r,u,l)!==0&&ot(`Can't set a session config entry: 'numThreads' - ${s.numThreads}.`)}if(s?.powerPreference){let a=ht("powerPreference",n),u=ht(s.powerPreference,n);pt()._OrtAddSessionConfigEntry(r,a,u)!==0&&ot(`Can't set a session config entry: 'powerPreference' - ${s.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let s=t;if(s?.preferredLayout){if(s.preferredLayout!=="NCHW"&&s.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let a=ht("preferredLayout",n),u=ht(s.preferredLayout,n);pt()._OrtAddSessionConfigEntry(r,a,u)!==0&&ot(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=ht(o,n);pt()._OrtAppendExecutionProvider(r,i)!==0&&ot(`Can't append execution provider: ${o}.`)}},Hm=r=>{let e=pt(),n=0,t=[],o=r||{};F2(o);try{let i=M2(o.graphOptimizationLevel??"all"),s=L2(o.executionMode??"sequential"),a=typeof o.logId=="string"?ht(o.logId,t):0,u=o.logSeverityLevel??2;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log serverity level is not valid: ${u}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d=typeof o.optimizedModelFilePath=="string"?ht(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,s,!!o.enableProfiling,0,a,u,l,d),n===0&&ot("Can't create session options."),o.executionProviders&&U2(n,o.executionProviders,t),o.enableGraphCapture!==void 0){if(typeof o.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${o.enableGraphCapture}`);let p=ht("enableGraphCapture",t),m=ht(o.enableGraphCapture.toString(),t);e._OrtAddSessionConfigEntry(n,p,m)!==0&&ot(`Can't set a session config entry: 'enableGraphCapture' - ${o.enableGraphCapture}.`)}if(o.freeDimensionOverrides)for(let[p,m]of Object.entries(o.freeDimensionOverrides)){if(typeof p!="string")throw new Error(`free dimension override name must be a string: ${p}`);if(typeof m!="number"||!Number.isInteger(m)||m<0)throw new Error(`free dimension override value must be a non-negative integer: ${m}`);let b=ht(p,t);e._OrtAddFreeDimensionOverride(n,b,m)!==0&&ot(`Can't set a free dimension override: ${p} - ${m}.`)}return o.extra!==void 0&&Zo(o.extra,"",new WeakSet,(p,m)=>{let b=ht(p,t),v=ht(m,t);e._OrtAddSessionConfigEntry(n,b,v)!==0&&ot(`Can't set a session config entry: ${p} - ${m}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(s=>e._free(s)),i}}});var Ru,ln,Jo,Ca,Qo,Pa,zu,Se=z(()=>{"use strict";Ru=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},ln=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},Jo=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],Ca=r=>{switch(r){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},Qo=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Pa=r=>r==="float32"||r==="float16"||r==="int32"||r==="int64"||r==="uint32"||r==="uint8"||r==="bool",zu=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var ei,Nu=z(()=>{"use strict";ei=async r=>{if(typeof r=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(r))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let n=(void 0)(r),t=[];for await(let o of n)t.push(o);return new Uint8Array(Buffer.concat(t))}throw e}else{let e=await fetch(r);if(!e.ok)throw new Error(`failed to load external data file: ${r}`);let n=e.headers.get("Content-Length"),t=n?parseInt(n,10):0;if(t<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${r}, no response body.`);let o=e.body.getReader(),i;try{i=new ArrayBuffer(t)}catch(a){if(a instanceof RangeError){let u=Math.ceil(t/65536);i=new WebAssembly.Memory({initial:u,maximum:u}).buffer}else throw a}let s=0;for(;;){let{done:a,value:u}=await o.read();if(a)break;let l=u.byteLength;new Uint8Array(i,s,l).set(u),s+=l}return new Uint8Array(i,0,t)}}else return r instanceof Blob?new Uint8Array(await r.arrayBuffer()):r instanceof Uint8Array?r:new Uint8Array(r)}});var V2,G2,jm,Km,Ym,W2,it,dn=z(()=>{"use strict";Se();V2=["V","I","W","E","F"],G2=(r,e)=>{console.log(`[${V2[r]},${new Date().toISOString()}]${e}`)},Ym=(r,e)=>{jm=r,Km=e},W2=(r,e)=>{let n=Qo(r),t=Qo(jm);n>=t&&G2(n,typeof e=="function"?e():e)},it=(...r)=>{Km&&W2(...r)}});var Xm,Zm=z(()=>{"use strict";Se();Xm=(r,e)=>new(Ca(e))(r)});var ka=z(()=>{"use strict"});var Da,H2,Jm,Lu,Mu,eg,tg=z(()=>{"use strict";dn();ka();Da=r=>Math.ceil(r/16)*16,H2=1,Jm=()=>H2++,Lu=async(r,e,n,t)=>{let o=Da(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=r.getCommandEncoder();r.endComputePass(),s.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let u=t();return u.set(new Uint8Array(a,0,n)),u}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},Mu=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,s=Da(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=u.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),u.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(u,0,a.gpuData.buffer,0,s),it("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Da(t.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return it("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(t)}else o=Jm();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),it("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),it("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Da(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=i?this.freeBuffers:this.freeUniformBuffers,l=u.get(t);l||(l=[],u.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:Jm(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),it("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return it("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await Lu(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let n of this.buffersPending)e.push(n);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let n=this.capturedPendingBuffers.get(e);n&&(n.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e))}},eg=(...r)=>new Mu(...r)});var Fu,ke,It=z(()=>{"use strict";Fu=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},ke=r=>new Fu(r)});var Uu,zr,V,Bn,Ba,Ra,za,ze=z(()=>{"use strict";Uu=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},zr=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Uu.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;let p=Math.max(l,d);if(l&&d)a[s-u]=Math.max(l,d);else{if(p>1)return;a[s-u]=0}}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},V=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static convertShape(e,n=4){let t=e.length;if(t===0)return[];let o=new Array(t),i=t-1;for(;i>=0;){if(e[i]%n===0){o[i]=e[i]/n;break}if(n%e[i]!==0)throw new Error("cannot convert shape");o[i]=1,n/=e[i],i--}for(i--;i>=0;i--)o[i]=e[i];return o}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},Bn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)r.adjustPadAndReturnShape(e[u+(s?1:2)],n[u],t[u],o[u],i,u,u+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},Ba=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!zr.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Ra=-34028234663852886e22,za=34028234663852886e22});var Rn,Gu,tt,Zt,ne,at,Dt,$r,Jt,ye,Wu,G,J,Na,Vu,rg,uo,Be=z(()=>{"use strict";Se();ze();Rn=64,Gu=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},tt=(r,e=1)=>{let n=Gu(r,e);return typeof n=="string"?n:n[0]},Zt=(r,e=1)=>{let n=Gu(r,e);return typeof n=="string"?n:n[1]},ne=(...r)=>{let e=[];return r.forEach(n=>{n.length!==0&&e.push({type:12,data:n},{type:12,data:V.computeStrides(n)})}),e},at=r=>r%4===0?4:r%2===0?2:1,Dt=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,$r=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,Jt=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,ye=(r,e,n,t)=>r.startsWith("uniforms.")&&n>4?typeof e=="string"?t==="f16"?`${r}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${r}[(${e}) / 4][(${e}) % 4]`:t==="f16"?`${r}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${r}[${Math.floor(e/4)}][${e%4}]`:n>1?`${r}[${e}]`:r,Wu=(r,e,n,t,o)=>{let i=typeof n=="number",s=i?n:n.length,a=[...new Array(s).keys()],u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=Gu(e,o),d=typeof l=="string"?l:l[1],p=typeof l=="string"?l:l[0],m={indices:u,value:d,storage:p,tensor:e},b=Y=>typeof Y=="string"?Y:`${Y}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=i?"uniforms.":"",S=`${w}${r}_shape`,I=`${w}${r}_strides`,_="";for(let Y=0;Y<s-1;Y++)_+=`
    let dim${Y} = current / ${ye(I,Y,s)};
    let rest${Y} = current % ${ye(I,Y,s)};
    indices[${Y}] = dim${Y};
    current = rest${Y};
    `;_+=`indices[${s-1}] = current;`;let O=s<2?"":`
  fn o2i_${r}(offset: u32) -> ${m.indices} {
    var indices: ${m.indices};
    var current = offset;
    ${_}
    return indices;
  }`,E=Y=>(v.offsetToIndices=!0,s<2?Y:`o2i_${r}(${Y})`),D=[];if(s>=2)for(let Y=s-1;Y>=0;Y--)D.push(`${ye(I,Y,s)} * (indices[${Y}])`);let U=s<2?"":`
  fn i2o_${r}(indices: ${m.indices}) -> u32 {
    return ${D.join("+")};
  }`,H=Y=>(v.indicesToOffset=!0,s<2?Y:`i2o_${r}(${Y})`),q=(...Y)=>s===0?"0u":`${m.indices}(${Y.map(b).join(",")})`,ue=(Y,me)=>s<2?`${Y}`:`${ye(Y,me,s)}`,ee=(Y,me,Ne)=>s<2?`${Y}=${Ne};`:`${ye(Y,me,s)}=${Ne};`,R={},de=(Y,me)=>{v.broadcastedIndicesToOffset=!0;let Ne=`${me.name}broadcastedIndicesTo${r}Offset`;if(Ne in R)return`${Ne}(${Y})`;let ft=[];for(let At=s-1;At>=0;At--){let Qt=me.indicesGet("outputIndices",At+me.rank-s);ft.push(`${ue(I,At)} * (${Qt} % ${ue(S,At)})`)}return R[Ne]=`fn ${Ne}(outputIndices: ${me.type.indices}) -> u32 {
             return ${ft.length>0?ft.join("+"):"0u"};
           }`,`${Ne}(${Y})`},et=(Y,me)=>(()=>{if(m.storage===m.value)return`${r}[${Y}]=${me};`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`${r}[${Y}]=vec2<u32>(u32(${me}), select(0u, 0xFFFFFFFFu, ${me} < 0));`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`${r}[${Y}]=vec2<u32>(u32(${me}), 0u);`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`${r}[${Y}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${me}));`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),qe=Y=>(()=>{if(m.storage===m.value)return`${r}[${Y}]`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`i32(${r}[${Y}].x)`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`u32(${r}[${Y}].x)`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${Y}] & 0xFFu), bool(${r}[${Y}] & 0xFF00u), bool(${r}[${Y}] & 0xFF0000u), bool(${r}[${Y}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),Fe=s<2?"":`
  fn get_${r}ByIndices(indices: ${m.indices}) -> ${d} {
    return ${qe(`i2o_${r}(indices)`)};
  }`,se=s<2?"":(()=>{let Y=a.map(Ne=>`d${Ne}: u32`).join(", "),me=a.map(Ne=>`d${Ne}`).join(", ");return`
  fn get_${r}(${Y}) -> ${d} {
    return get_${r}ByIndices(${q(me)});
  }`})(),rt=(...Y)=>{if(Y.length!==s)throw new Error(`indices length must be ${s}`);let me=Y.map(b).join(",");return s===0?qe("0u"):s===1?qe(me[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${r}(${me})`)},Ee=Y=>s<2?qe(Y):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${r}ByIndices(${Y})`),Ie=s<2?"":`
  fn set_${r}ByIndices(indices: ${m.indices}, value: ${d}) {
    ${et(`i2o_${r}(indices)`,"value")}
  }`,ve=s<2?"":(()=>{let Y=a.map(Ne=>`d${Ne}: u32`).join(", "),me=a.map(Ne=>`d${Ne}`).join(", ");return`
  fn set_${r}(${Y}, value: ${d}) {
    set_${r}ByIndices(${q(me)}, value);
  }`})();return{impl:()=>{let Y=[],me=!1;return v.offsetToIndices&&(Y.push(O),me=!0),v.indicesToOffset&&(Y.push(U),me=!0),v.broadcastedIndicesToOffset&&(Object.values(R).forEach(Ne=>Y.push(Ne)),me=!0),v.set&&(Y.push(ve),me=!0),v.setByIndices&&(Y.push(Ie),me=!0),v.get&&(Y.push(se),me=!0),v.getByIndices&&(Y.push(Fe),me=!0),!i&&me&&Y.unshift(`const ${S} = ${m.indices}(${n.join(",")});`,`const ${I} = ${m.indices}(${V.computeStrides(n).join(",")});`),Y.join(`
`)},type:m,offsetToIndices:E,indicesToOffset:H,broadcastedIndicesToOffset:de,indices:q,indicesGet:ue,indicesSet:ee,set:(...Y)=>{if(Y.length!==s+1)throw new Error(`indices length must be ${s}`);let me=Y[s];if(typeof me!="string")throw new Error("value must be string");let Ne=Y.slice(0,s).map(b).join(",");return s===0?et("0u",me):s===1?et(Ne[0],me):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${r}(${Ne}, ${me})`)},setByOffset:et,setByIndices:(Y,me)=>s<2?et(Y,me):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${r}ByIndices(${Y}, ${me});`),get:rt,getByOffset:qe,getByIndices:Ee,usage:t,name:r,strides:I,shape:S,rank:s}},G=(r,e,n,t=1)=>Wu(r,e,n,"input",t),J=(r,e,n,t=1)=>Wu(r,e,n,"output",t),Na=(r,e,n,t=1)=>Wu(r,e,n,"internal",t),Vu=class{constructor(e,n){this.normalizedDispatchGroup=e;this.limits=n;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Rn){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2];if(n>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||o>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${n}, ${t}, ${o}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(n*t*o>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${n}, ${t}, ${o}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${n*t*o}u + local_idx;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${s}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,n){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(e,n,t=1){return this.uniforms.push({name:e,type:n,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t,length:o}of this.uniforms)if(o&&o>4)t==="f16"?e.push(`@align(16) ${n}:array<mat2x4<${t}>, ${Math.ceil(o/8)}>`):e.push(`${n}:array<vec4<${t}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?t:`vec${o}<${t}>`;e.push(`${n}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=n=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(n)];return this.uniforms.map(n=>[e(n.type),n.length??1])}},rg=(r,e)=>new Vu(r,e),uo=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,s=r[i]||1;(e[e.length-1-o]||1)>1&&s===1&&t.unshift(i)}return t}});var q2,ng,j2,K2,hr,og,ig,lo=z(()=>{"use strict";Se();ze();It();Be();q2=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},ng=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,j2=(r,e)=>V.sortBasedOnPerm(r,ng(r.length,e)),K2=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},hr=(r,e)=>{let n=r.dataType,t=r.dims.length,o=ng(t,e),i=j2(r.dims,o),s=J("output",n,i.length),a=G("a",n,t),u=l=>`
  ${l.registerUniform("output_size","u32").declareVariables(a,s)}

  ${K2(o,t,a,s)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${s.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${s.setByOffset("global_idx",a.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:l=>{let d=V.size(i);return{outputs:[{dims:i,dataType:l[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...ne(l[0].dims,i)]}},getShaderSource:u}},og=(r,e)=>{q2(r.inputs),r.compute(hr(r.inputs[0],e.perm))},ig=r=>ke({perm:r.perm})});var Y2,X2,Z2,J2,Q2,e_,t_,r_,n_,o_,Nr,ag,sg,ug,lg,dg,cg,fg,pg,hg,mg,gg=z(()=>{"use strict";Se();ze();Be();Ma();lo();Y2={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},X2={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Z2={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},J2={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Q2=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},e_=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},t_=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},r_=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},n_=(r,e)=>{let n=[];if(!r_(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},o_=(r,e,n,t,o,i,s)=>{let a=n[0].dims,u=V.size(i),l=V.size(s),d=G("_A",n[0].dataType,a),p=J("output",o,i),m=32,b=`
          var<workgroup> aBestValues : array<f32, ${m}>;
       `;return{name:r,shaderCache:e,getShaderSource:w=>`
        ${w.registerUniform("reduceSize","u32").declareVariables(d,p)}
        ${b}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${w.mainStart(m)}

          let outputIndex = global_idx / ${m};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Z2[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${m}) {
           let candidate = f32(${d.getByOffset("offset + k")});
           bestValue = ${Y2[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${m}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${X2[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${t==="mean"?`${p.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${p.type.storage}(${J2[t]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:u},programUniforms:[{type:12,data:l}]})}},Nr=(r,e,n,t)=>{let o=r.inputs.length===1?n:Hu(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((b,v)=>v));let s=V.normalizeAxes(i,r.inputs[0].dims.length),a=s,u=r.inputs[0],l=n_(a,r.inputs[0].dims.length);l.length>0&&(u=r.compute(hr(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=Q2(a.length,u.dims.length));let[d,p]=e_(u.dims,a),m=d;o.keepDims&&(m=t_(d,s)),r.compute(o_(e,{hint:o.cacheKey,inputDependencies:["type"]},[u],t,r.inputs[0].dataType,m,p),{inputs:[u]})},ag=(r,e)=>{Nr(r,"ReduceMeanShared",e,"mean")},sg=(r,e)=>{Nr(r,"ReduceL1Shared",e,"l1")},ug=(r,e)=>{Nr(r,"ReduceL2Shared",e,"l2")},lg=(r,e)=>{Nr(r,"ReduceLogSumExpShared",e,"logSumExp")},dg=(r,e)=>{Nr(r,"ReduceMaxShared",e,"max")},cg=(r,e)=>{Nr(r,"ReduceMinShared",e,"min")},fg=(r,e)=>{Nr(r,"ReduceProdShared",e,"prod")},pg=(r,e)=>{Nr(r,"ReduceSumShared",e,"sum")},hg=(r,e)=>{Nr(r,"ReduceSumSquareShared",e,"sumSquare")},mg=(r,e)=>{Nr(r,"ReduceLogSumShared",e,"logSum")}});var Mr,i_,La,Hu,Lr,a_,s_,u_,l_,d_,c_,f_,p_,h_,m_,Fr,bg,yg,vg,wg,xg,_g,$g,Tg,Sg,Ig,Ma=z(()=>{"use strict";Se();ze();It();Be();gg();Mr=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},i_=r=>["","",`var value = ${r.getByIndices("input_indices")};`,""],La=(r,e,n,t,o,i,s=!1,a=!1)=>{let u=[],l=n[0].dims,d=l.length,p=V.normalizeAxes(o,d),m=!a&&p.length===0;l.forEach((S,I)=>{m||p.indexOf(I)>=0?s&&u.push(1):u.push(S)});let b=u.length,v=V.size(u);return{name:r,shaderCache:e,getShaderSource:S=>{let I=[],_=G("_A",n[0].dataType,d),O=J("output",i,b),E=t(_,O,p),D=E[2];for(let U=0,H=0;U<d;U++)m||p.indexOf(U)>=0?(s&&H++,D=`for(var j${U}: u32 = 0; j${U} < ${l[U]}; j${U}++) {
                  ${E[2].includes("last_index")?`let last_index = j${U};`:""}
                  ${_.indicesSet("input_indices",U,`j${U}`)}
                  ${D}
                }`):(I.push(`${_.indicesSet("input_indices",U,O.indicesGet("output_indices",H))};`),H++);return`

        ${S.registerUniform("output_size","u32").declareVariables(_,O)}

        ${S.mainStart()}
          ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${_.type.indices};
          let output_indices = ${O.offsetToIndices("global_idx")};

          ${I.join(`
`)}
          ${E[0]}       // init ops for reduce max/min
          ${E[1]}
          ${D}
          ${E[3]}
          ${E.length===4?O.setByOffset("global_idx","value"):E.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...ne(l,u)]})}},Hu=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),ke({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},Lr=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Hu(o,n);r.compute(La(e,{hint:i.cacheKey,inputDependencies:["rank"]},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?i_:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},a_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},s_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},u_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},l_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},d_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceMax",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(t.indicesSet("input_indices",a,0));return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},c_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceMean",e,(t,o,i)=>{let s=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${s});`]})},f_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceMin",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},p_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},h_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},m_=(r,e)=>{Mr(r.inputs),Lr(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Fr=(r,e,n)=>{if(e.length===0)return n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},bg=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?c_(r,e):ag(r,e)},yg=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?s_(r,e):sg(r,e)},vg=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?u_(r,e):ug(r,e)},wg=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?l_(r,e):lg(r,e)},xg=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?d_(r,e):dg(r,e)},_g=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?f_(r,e):cg(r,e)},$g=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?p_(r,e):fg(r,e)},Tg=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?h_(r,e):pg(r,e)},Sg=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?m_(r,e):hg(r,e)},Ig=(r,e)=>{Fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?a_(r,e):mg(r,e)}});var Ag,Og,Eg,qu,Cg=z(()=>{"use strict";Se();It();Ma();Ag=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},Og=(r,e)=>{Ag(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(La("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Eg=(r,e)=>{Ag(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(La("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},qu=r=>ke(r)});var g_,b_,y_,v_,Fa,w_,Pg,ju=z(()=>{"use strict";Se();ka();Be();g_=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5];if(s&&a)throw new Error("Attention cannot have both past and relative_position_bias");if(n.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let u=n.dims[0],l=n.dims[1],d=n.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(t.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(t.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==t.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=o.dims[0]/3,m=p,b=m;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let O of e.qkvHiddenSizes)if(O%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");p=e.qkvHiddenSizes[0],m=e.qkvHiddenSizes[1],b=e.qkvHiddenSizes[2]}let v=l;if(p!==m)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==p+m+b)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let w=0;if(s){if(m!==b)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==u)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==m/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(w=s.dims[3])}let S=v+w,I=-1,_=0;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");if(a)throw new Error("relativePositionBias is not supported");return{batchSize:u,sequenceLength:l,pastSequenceLength:w,kvSequenceLength:v,totalSequenceLength:S,maxSequenceLength:I,inputHiddenSize:d,hiddenSize:p,vHiddenSize:b,headSize:Math.floor(p/e.numHeads),vHeadSize:Math.floor(b/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:_,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},b_=(r,e,n,t)=>{let o=at(t),i=64,s=t/o;s<i?i=1:s/8<64&&(i=Math.ceil(s/8));let a=Math.ceil(t/o/i),u=[{type:e.dataType,data:1/t},{type:12,data:s},{type:12,data:a}],l=tt(e.dataType,o),d=p=>{let m=J("x",e.dataType,e.dims,o),b="thread_max_vector";o===2?b="max(thread_max_vector.x, thread_max_vector.y)":o===4&&(b="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let v=Zt(e.dataType),w=[{name:"d_inv",type:v},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${i}>;
  var<workgroup> wgSum: array<f32, ${i}>;
  ${p.registerUniforms(w).declareVariables(m)}
  ${p.mainStart([i,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${Dt("f32",o,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${$r(v,o,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${b};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${i}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${Dt("f32",o,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${$r(v,o,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${Jt("sumVector",o)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${i}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${Dt(v,o,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${$r(v,o,"x[offset + i]")};
        x[offset + i] = ${m.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};r.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${i};${l};${o}`},getShaderSource:d,getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:u})},{inputs:[e],outputs:[]})},y_=(r,e,n,t,o,i)=>{let s=[o.batchSize,o.numHeads,o.sequenceLength,o.kvSequenceLength+o.pastSequenceLength],a=i.scale===0?1/Math.sqrt(o.headSize):i.scale,u=at(o.headSize),l=o.headSize/u,d=12,p={x:Math.ceil(o.totalSequenceLength/d),y:Math.ceil(o.sequenceLength/d),z:o.batchSize*o.numHeads},m=[{type:12,data:o.sequenceLength},{type:12,data:l},{type:12,data:o.totalSequenceLength},{type:12,data:o.kvSequenceLength},{type:e.dataType,data:a}],b=[e,n],v=S=>{let I=G("q",e.dataType,e.dims,u),_=G("key",n.dataType,n.dims,u),O=J("output",e.dataType,s),E=tt(e.dataType),D=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:E}];return`
  const beta: ${E} = 1.0;
  const TILE_SIZE = ${d}u;

  var<workgroup> tileQ: array<${I.type.storage}, ${d*d}>;
  var<workgroup> tileK: array<${I.type.storage}, ${d*d}>;
  ${S.registerUniforms(D).declareVariables(I,_,O)}
  ${S.mainStart([d,d,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${Dt(E,u)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      output[outputIdx] = ${Jt("value",u)} * uniforms.alpha;
    }
  }`},w=r.compute({name:"AttentionProbs",shaderCache:{hint:`${u}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:m}),getShaderSource:v},{inputs:b,outputs:[-1]})[0];return b_(r,w,o.batchSize*o.numHeads*o.sequenceLength,o.totalSequenceLength),w},v_=(r,e,n,t)=>{let o=[t.batchSize,t.sequenceLength,t.vHiddenSize],i=12,s={x:Math.ceil(t.vHeadSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},a=[{type:12,data:t.sequenceLength},{type:12,data:t.totalSequenceLength},{type:12,data:t.vHeadSize},{type:12,data:t.numHeads},{type:12,data:t.vHiddenSize}],u=l=>{let d=G("probs",e.dataType,e.dims),p=G("v",n.dataType,n.dims),m=J("output",e.dataType,o),b=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileQ: array<${d.type.value}, ${i*i}>;
  var<workgroup> tileK: array<${d.type.value}, ${i*i}>;
  ${l.registerUniforms(b).declareVariables(d,p,m)}
  ${l.mainStart([i,i,1])}
   let headIdx = workgroup_id.z;
   let m = global_id.y;
   let n = global_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${d.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return r.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:a}),getShaderSource:u},{inputs:[e,n],outputs:[0]})[0]},Fa=(r,e,n,t,o,i,s,a,u,l,d)=>{let p=y_(r,e,n,u,l,d);v_(r,p,t,l)},w_=(r,e)=>{let n=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],t=e.sequenceLength,o=e.inputHiddenSize,i=e.headSize,s=12,a={x:Math.ceil(e.headSize/s),y:Math.ceil(e.sequenceLength/s),z:e.batchSize*e.numHeads},u=[r.inputs[0],r.inputs[1],r.inputs[2]],l=[{type:12,data:t},{type:12,data:o},{type:12,data:i},{type:12,data:e.numHeads},{type:12,data:e.headSize},{type:12,data:e.hiddenSize},{type:12,data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],d=p=>{let m=J("output_q",u[0].dataType,n),b=J("output_k",u[0].dataType,n),v=J("output_v",u[0].dataType,n),w=G("input",u[0].dataType,u[0].dims),S=G("weight",u[1].dataType,u[1].dims),I=G("bias",u[2].dataType,u[2].dims),_=w.type.storage,O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${s}u;
  var<workgroup> tileInput: array<${_}, ${s*s}>;
  var<workgroup> tileWeightQ: array<${_}, ${s*s}>;
  var<workgroup> tileWeightK: array<${_}, ${s*s}>;
  var<workgroup> tileWeightV: array<${_}, ${s*s}>;
  ${p.registerUniforms(O).declareVariables(w,S,I,m,b,v)}
  ${p.mainStart([s,s,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${_}(0);
    var valueK = ${_}(0);
    var valueV = ${_}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return r.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:l}),getShaderSource:d},{inputs:u,outputs:[-1,-1,-1]})},Pg=(r,e)=>{let n=g_(r.inputs,e),[t,o,i]=w_(r,n);return Fa(r,t,o,i,r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e)}});var x_,__,$_,kg,Dg=z(()=>{"use strict";Pt();Se();ze();It();Be();x_=(r,e)=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs");let n=(t,o,i)=>{let s=o.length;if(s!==t.length)throw new Error(`${i}: num dimensions != ${s}`);o.forEach((a,u)=>{if(a!==t[u])throw new Error(`${i}: dim[${u}] do not match`)})};if(r[0].dims.length>1){let t=e.format==="NHWC"?e.spatial?r[0].dims.slice(-1):r[0].dims.slice(-1).concat(r[0].dims.slice(1,r[0].dims.length-1)):r[0].dims.slice(1,e.spatial?2:void 0);n(r[1].dims,t,"Invalid input scale"),n(r[2].dims,t,"Invalid input B"),n(r[3].dims,t,"Invalid input mean"),n(r[4].dims,t,"Invalid input var")}else n(r[1].dims,[1],"Invalid input scale"),n(r[2].dims,[1],"Invalid input B"),n(r[3].dims,[1],"Invalid input mean"),n(r[4].dims,[1],"Invalid input var")},__=(r,e)=>{let{epsilon:n,spatial:t,format:o}=e,i=r[0].dims,s=t?at(i[i.length-1]):1,a=o==="NHWC"&&i.length>1?s:1,u=V.size(i)/s,l=t,d=l?i.length:i,p=G("x",r[0].dataType,r[0].dims,s),m=G("scale",r[1].dataType,r[1].dims,a),b=G("bias",r[2].dataType,r[2].dims,a),v=G("inputMean",r[3].dataType,r[3].dims,a),w=G("inputVar",r[4].dataType,r[4].dims,a),S=J("y",r[0].dataType,d,s),I=()=>{let O="";if(t)O=`let cOffset = ${i.length===1?"0u":o==="NHWC"?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if(o==="NCHW")O=`
            ${S.indicesSet("outputIndices","0","0")}
            let cOffset = ${S.indicesToOffset("outputIndices")};`;else{O=`var cIndices = ${m.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let E=1;E<m.rank;E++)O+=`cIndices[${E}] = outputIndices[${E}];`;O+=`let cOffset = ${m.indicesToOffset("cIndices")};`}return O},_=O=>`
  const epsilon = ${n};
  ${O.registerUniform("outputSize","u32").declareVariables(p,m,b,v,w,S)}
  ${O.mainStart()}
  ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${S.offsetToIndices(`global_idx * ${s}`)};
    ${I()}
    let scale = ${m.getByOffset("cOffset")};
    let bias = ${b.getByOffset("cOffset")};
    let inputMean = ${v.getByOffset("cOffset")};
    let inputVar = ${w.getByOffset("cOffset")};
    let x = ${p.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${S.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${t}_${s}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:_,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l?[{type:12,data:u},...ne(i)]:[{type:12,data:u}]})}},$_=r=>ke(r),kg=(r,e)=>{let{inputs:n,outputCount:t}=r,o=$_({...e,outputCount:t});if(ge.webgpu.validateInputContent&&x_(n,o),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");r.compute(__(n,o))}});var T_,S_,Bg,Rg=z(()=>{"use strict";ze();Be();T_=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},S_=r=>{let e=r[0].dims,n=r[0].dims[2],t=V.size(e)/4,o=r[0].dataType,i=G("input",o,e,4),s=G("bias",o,[n],4),a=G("residual",o,e,4),u=J("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:d=>`
  const channels = ${n}u / 4;
  ${d.declareVariables(i,s,a,u)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${s.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},Bg=r=>{T_(r.inputs),r.compute(S_(r.inputs))}});var I_,Ze,zg,Ng,Mg,Lg,Fg,Ug,Vg,Gg,Wg,A_,Hg,qg,jg,Kg,Ua,Yg,Va,Xg,Zg,Jg,Qg,eb,tb,rb,nb,ob,ib,ab,sb,ub,lb,db,cb,fb,pb,Ku,Yu,hb,mb,gb,Ga=z(()=>{"use strict";Se();ze();It();Be();I_=(r,e,n,t,o,i)=>{let s=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let u=G("inputData",n,[s],4),l=J("outputData",t,[s],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(u,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Ze=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:s=>I_(s,V.size(r.dims),r.dataType,i,n,t),getRunData:s=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(V.size(s[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(V.size(r.dims)/4)}]})}),zg=r=>{r.compute(Ze(r.inputs[0],"Abs","abs"))},Ng=r=>{r.compute(Ze(r.inputs[0],"Acos","acos"))},Mg=r=>{r.compute(Ze(r.inputs[0],"Acosh","acosh"))},Lg=r=>{r.compute(Ze(r.inputs[0],"Asin","asin"))},Fg=r=>{r.compute(Ze(r.inputs[0],"Asinh","asinh"))},Ug=r=>{r.compute(Ze(r.inputs[0],"Atan","atan"))},Vg=r=>{r.compute(Ze(r.inputs[0],"Atanh","atanh"))},Gg=r=>ke(r),Wg=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Ze(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},A_=r=>{let e=r.length>=2&&r[1].data!==0?r[1].getFloat32Array()[0]:Ra,n=r.length>=3&&r[2].data!==0?r[2].getFloat32Array()[0]:za;return ke({min:e,max:n})},Hg=(r,e)=>{let n=r.inputs.length===1?e:A_(r.inputs),t=Zt(r.inputs[0].dataType);r.compute(Ze(r.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${t}> = vec4(${t}(${n.min}));
    const clip_max_: vec4<${t}> = vec4(${t}(${n.max}));
`,n.cacheKey),{inputs:[0]})},qg=r=>{r.compute(Ze(r.inputs[0],"Ceil","ceil"))},jg=r=>{r.compute(Ze(r.inputs[0],"Cos","cos"))},Kg=r=>{r.compute(Ze(r.inputs[0],"Cosh","cosh"))},Ua=r=>ke(r),Yg=(r,e)=>{let n=Zt(r.inputs[0].dataType);r.compute(Ze(r.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${n}(${e.alpha});

  fn elu_f32(a: ${n}) -> ${n} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},Va=(r="f32")=>`
const r0: ${r} = 0.3275911;
const r1: ${r} = 0.254829592;
const r2: ${r} = -0.284496736;
const r3: ${r} = 1.421413741;
const r4: ${r} = -1.453152027;
const r5: ${r} = 1.061405429;

fn erf_vf32(v: vec4<${r}>) -> vec4<${r}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Xg=r=>{let e=Zt(r.inputs[0].dataType);r.compute(Ze(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,Va(e)))},Zg=r=>{r.compute(Ze(r.inputs[0],"Exp","exp"))},Jg=r=>{r.compute(Ze(r.inputs[0],"Floor","floor"))},Qg=r=>{let e=Zt(r.inputs[0].dataType);r.compute(Ze(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,Va(e)))},eb=(r,e)=>{let n=Zt(r.inputs[0].dataType);r.compute(Ze(r.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${e.alpha});`,e.cacheKey))},tb=r=>{r.compute(Ze(r.inputs[0],"Not",e=>`!${e}`))},rb=r=>{r.compute(Ze(r.inputs[0],"Neg",e=>`-${e}`))},nb=r=>{r.compute(Ze(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},ob=r=>{let e=Zt(r.inputs[0].dataType);r.compute(Ze(r.inputs[0],"Relu",n=>`select(vec4<${e}>(0.0), ${n}, ${n} > vec4<${e}>(0.0))`))},ib=r=>{r.compute(Ze(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},ab=r=>ke(r),sb=(r,e)=>{let n=Zt(r.inputs[0].dataType);r.compute(Ze(r.inputs[0],"HardSigmoid",t=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${e.alpha} * ${t} + vec4<${n}>(${e.beta})))`,void 0,e.cacheKey))},ub=r=>{r.compute(Ze(r.inputs[0],"Sin","sin"))},lb=r=>{r.compute(Ze(r.inputs[0],"Sinh","sinh"))},db=r=>{r.compute(Ze(r.inputs[0],"Sqrt","sqrt"))},cb=r=>{r.compute(Ze(r.inputs[0],"Tan","tan"))},fb=r=>`sign(${r}) * (1 - exp(-2 * abs(${r}))) / (1 + exp(-2 * abs(${r})))`,pb=r=>{r.compute(Ze(r.inputs[0],"Tanh",fb))},Ku=(r="f32")=>`
const fast_gelu_a: ${r} = 0.5;
const fast_gelu_b: ${r} = 0.7978845608028654;
const fast_gelu_c: ${r} = 0.035677408136300125;

fn tanh_v(v: vec4<${r}>) -> vec4<${r}> {
  return ${fb("v")};
}
`,Yu=r=>`(fast_gelu_a + fast_gelu_a * tanh_v(${r} * (fast_gelu_c * ${r} * ${r} + fast_gelu_b))) * ${r}`,hb=r=>{let e=Zt(r.inputs[0].dataType);r.compute(Ze(r.inputs[0],"FastGelu",Yu,Ku(e),void 0,r.inputs[0].dataType))},mb=(r,e)=>{let n=Zt(r.inputs[0].dataType);return r.compute(Ze(r.inputs[0],"ThresholdedRelu",t=>`select(vec4<${n}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${e.alpha});`,e.cacheKey)),0},gb=r=>{r.compute(Ze(r.inputs[0],"Log","log"))}});var O_,E_,yb,vb=z(()=>{"use strict";ze();Be();Ga();O_=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},E_=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=G("input",r[0].dataType,r[0].dims,4),t=G("bias",r[0].dataType,[r[0].dims[2]],4),o=J("output",r[0].dataType,e,4),i=V.size(e)/4,s=tt(r[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${u.declareVariables(n,t,o)}

  ${Va(s)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},yb=r=>{O_(r.inputs),r.compute(E_(r.inputs))}});var C_,P_,Ur,wb,xb,_b,$b,Tb,Sb,Ib,Ab,Ob,Eb,Cb=z(()=>{"use strict";Se();ze();Be();C_=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let m,b;typeof a=="string"?m=b=(_,O)=>`${a}((${_}),(${O}))`:typeof a=="function"?m=b=a:(m=a.scalar,b=a.vector);let v=J("outputData",d,t.length,4),w=G("aData",u,e.length,4),S=G("bData",l,n.length,4),I;if(o)if(i){let _=V.size(e)===1,O=V.size(n)===1,E=e.length>0&&e[e.length-1]%4===0,D=n.length>0&&n[n.length-1]%4===0;_||O?I=v.setByOffset("global_idx",b(_?`${w.type.value}(${w.getByOffset("0")}.x)`:w.getByOffset("global_idx"),O?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"))):I=`
            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};
            let offsetA = ${w.broadcastedIndicesToOffset("outputIndices",v)};
            let offsetB = ${S.broadcastedIndicesToOffset("outputIndices",v)};
            ${v.setByOffset("global_idx",b(s||E?w.getByOffset("offsetA / 4u"):`${w.type.value}(${w.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||D?S.getByOffset("offsetB / 4u"):`${S.type.value}(${S.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else I=v.setByOffset("global_idx",b(w.getByOffset("global_idx"),S.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let _=(O,E,D="")=>{let U=`aData[indexA${E}][componentA${E}]`,H=`bData[indexB${E}][componentB${E}]`;return`
            let outputIndices${E} = ${v.offsetToIndices(`global_idx * 4u + ${E}u`)};
            let offsetA${E} = ${w.broadcastedIndicesToOffset(`outputIndices${E}`,v)};
            let offsetB${E} = ${S.broadcastedIndicesToOffset(`outputIndices${E}`,v)};
            let indexA${E} = offsetA${E} / 4u;
            let indexB${E} = offsetB${E} / 4u;
            let componentA${E} = offsetA${E} % 4u;
            let componentB${E} = offsetB${E} % 4u;
            ${O}[${E}] = ${D}(${m(U,H)});
          `};d===9?I=`
            var data = vec4<u32>(0);
            ${_("data",0,"u32")}
            ${_("data",1,"u32")}
            ${_("data",2,"u32")}
            ${_("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:I=`
            ${_("outputData[global_idx]",0)}
            ${_("outputData[global_idx]",1)}
            ${_("outputData[global_idx]",2)}
            ${_("outputData[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(w,S,v)}

        ${p??""}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${I}
      }`},P_=(r,e,n,t,o,i,s=n.dataType)=>{let a=!V.areEqual(n.dims,t.dims),u=n.dims,l=V.size(n.dims),d=!1,p=!1,m=[a];if(a){let b=zr.calcShape(n.dims,t.dims,!1);if(!b)throw new Error("Can't perform binary op on the given tensors");u=b,l=V.size(u);let v=V.size(n.dims)===1,w=V.size(t.dims)===1,S=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,I=t.dims.length>0&&t.dims[t.dims.length-1]%4===0;m.push(v),m.push(w),m.push(S),m.push(I);let _=1;for(let O=1;O<u.length;O++){let E=n.dims[n.dims.length-O]??1,D=t.dims[t.dims.length-O]??1;if(E===D)_*=E;else break}_%4===0?(p=!0,d=!0):(v||w||S||I)&&(d=!0)}else d=!0;return m.push(d),{name:r,shaderCache:{hint:e+m.map(b=>b.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:b=>C_(b,n.dims,t.dims,u,d,a,p,o,n.dataType,t.dataType,s,i),getRunData:()=>({outputs:[{dims:u,dataType:s}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:Math.ceil(V.size(u)/4)},...ne(n.dims,t.dims,u)]})}},Ur=(r,e,n,t,o,i)=>{r.compute(P_(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},wb=r=>{Ur(r,"Add",(e,n)=>`${e}+${n}`)},xb=r=>{Ur(r,"Div",(e,n)=>`${e}/${n}`)},_b=r=>{Ur(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},$b=r=>{Ur(r,"Mul",(e,n)=>`${e}*${n}`)},Tb=r=>{let e=G("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;Ur(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Sb=r=>{Ur(r,"Sub",(e,n)=>`${e}-${n}`)},Ib=r=>{Ur(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},Ab=r=>{Ur(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},Ob=r=>{Ur(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},Eb=r=>{Ur(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var D_,B_,R_,z_,Pb,kb,Db=z(()=>{"use strict";Se();ze();It();Be();D_=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");let n=0,t=r[n],o=t.dataType,i=t.dims.length;r.forEach((s,a)=>{if(a!==n){if(s.dataType!==o)throw new Error("input tensors should be one type");if(s.dims.length!==i)throw new Error("input tensors should have the same shape");s.dims.forEach((u,l)=>{if(l!==e&&u!==t.dims[l])throw new Error("non concat dimensions must match")})}})},B_=(r,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${r}u>(${e});
    for (var i: u32 = 0u; i < ${r}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,R_=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},z_=(r,e,n,t)=>{let o=V.size(n),i=new Array(r.length),s=new Array(r.length),a=0,u=[],l=[],d=[{type:12,data:o}];for(let w=0;w<r.length;++w)a+=r[w].dims[e],i[w]=a,l.push(r[w].dims.length),s[w]=G(`input${w}`,t,l[w]),u.push("rank"),d.push({type:12,data:i[w]});for(let w=0;w<r.length;++w)d.push(...ne(r[w].dims));d.push(...ne(n));let p=J("output",t,n.length),m=p.indicesGet("indices",e),b=Array.from(Array(i.length).keys()).map(w=>`uniforms.sizeInConcatAxis${w}`).join(","),v=w=>`

  ${(()=>{w.registerUniform("outputSize","u32");for(let S=0;S<r.length;S++)w.registerUniform(`sizeInConcatAxis${S}`,"u32");return w.declareVariables(...s,p)})()}

  ${B_(i.length,b)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${p.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${m});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${i.length}u>(${b});
      ${m} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${R_(s,p)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d}),getShaderSource:v}},Pb=(r,e)=>{let n=r.inputs,t=n[0].dims,o=V.normalizeAxis(e.axis,t.length);D_(n,o);let i=t.slice();i[o]=n.reduce((a,u)=>a+(u.dims.length>o?u.dims[o]:0),0);let s=n.filter(a=>V.size(a.dims)>0);r.compute(z_(s,o,i,n[0].dataType),{inputs:s})},kb=r=>ke({axis:r.axis})});var Tr,Sr,Ir,Wa,cn=z(()=>{"use strict";Se();ze();Tr=(r,e,n="f32")=>{switch(r.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(${n}(uniforms.clip_min)), ${e}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${e}(0.0), min(${e}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${e}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${r.activation}`)}},Sr=(r,e)=>{r.activation==="Clip"?e.push({type:1,data:r.clipMax},{type:1,data:r.clipMin}):r.activation==="HardSigmoid"?e.push({type:1,data:r.alpha},{type:1,data:r.beta}):r.activation==="LeakyRelu"&&e.push({type:1,data:r.alpha})},Ir=(r,e)=>{r.activation==="Clip"?e.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):r.activation==="HardSigmoid"?e.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):r.activation==="LeakyRelu"&&e.push({name:"alpha",type:"f32"})},Wa=r=>{let e=r?.activation||"";if(e==="HardSigmoid"){let[n,t]=r?.activation_params||[.2,.5];return{activation:e,alpha:n,beta:t}}else if(e==="Clip"){let[n,t]=r?.activation_params||[Ra,za];return{activation:e,clipMax:t,clipMin:n}}else if(e==="LeakyRelu"){let[n]=r?.activation_params||[.01];return{activation:e,alpha:n}}return{activation:e}}});var Bt,Ha,qa=z(()=>{"use strict";Bt=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},Ha=r=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      `});var ja,Xu=z(()=>{"use strict";ja=r=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${r}.x), i32(${r}.y), i32(${r}.z), 1));
}
`});var N_,M_,ti,Bb,L_,ri,F_,Ka,ni=z(()=>{"use strict";Se();ze();Be();cn();qa();N_=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,M_=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,ti=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32)=>{let u=e[1]*r[1],l=e[0]*r[0],d=o?u:i,p=o?i:u,m=d/e[0],b=i/e[1];if(!((o&&m===4&&r[1]===4||!o&&(m===3||m===4))&&d%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${m} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${m} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${m}<${n}>, ${d/m}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${m};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${s?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${b};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${N_(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${m===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${M_(o,m)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Bb=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,L_=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ri=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32,u=!1)=>{let l=r[1]*e[1],d=r[0]*e[0],p=o?l:i,m=o?i:l;if(!(m%e[1]===0&&p%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${m} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let b=m/e[1],v=p/e[0],w=i/e[1],S=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${e[0]}) {
          ${Bb(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${b};
let tileColA = i32(localId.x) * ${v};
let tileRowB = i32(localId.y) * ${w};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Bb(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${L_(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${p}>, ${m}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${s?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${S}
  }
`},F_=(r,e,n,t,o,i=!1)=>{let[s,a,u]=o,[l,d,p,m]=t,b=uo(s,u),v=uo(a,u),w=tt(t[0].type.tensor),S=()=>{let O=d.rank,E=l.rank,D=`var aIndices: ${d.type.indices};`;for(let U=O-2-1,H=E-1;U>=0;U--,H--)D+=`
aIndices[${U}] = ${E>1?`batchIndices[${H}]`:"batchIndices"};`;return b.forEach(U=>{D+=`
aIndices[${U}] = 0;`}),D+=`
aIndices[${O-2}] = u32(row);
                   aIndices[${O-1}] = u32(colIn);`,D},I=()=>{let O=p.rank,E=l.rank,D=`var bIndices: ${p.type.indices};`;for(let U=O-2-1,H=E-1;U>=0;U--,H--)D+=`
bIndices[${U}] = ${E>1?`batchIndices[${H}]`:"batchIndices"};`;return v.forEach(U=>{D+=`
bIndices[${U}] = 0;`}),D+=`
bIndices[${O-2}] = u32(row);
                   bIndices[${O-1}] = u32(colIn);`,D};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${Bt(r,w)} {
      var value = ${Bt(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${S()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${Bt(r,w)} {
      var value = ${Bt(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${I()}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Bt(r,w)}) {
      let col = colIn * ${r};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${Bt(r,w)}(bias[row])`};`:""}
        ${n}
        ${m.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Ka=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i.slice(0,-2),u=s.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),d=V.size(l),p=i[i.length-2],m=i[i.length-1],b=s[s.length-1],v=m%4===0&&b%4===0,w=p<=8?[4,1,1]:[4,4,1],S=[8,8,1],I=[Math.ceil(b/S[0]/w[0]),Math.ceil(p/S[1]/w[1]),Math.ceil(d/S[2]/w[2])],_=v?4:1,O=[...a,p,m/_],E=O.length,D=[...u,m,b/_],U=D.length,H=[d,p,b/_],q=[{type:6,data:p},{type:6,data:b},{type:6,data:m}];Sr(e,q),q.push(...ne(l,O,D));let ue=["rank","rank"],ee=r.length>2;ee&&(q.push(...ne(r[2].dims)),ue.push("rank")),q.push(...ne(H));let R=de=>{let et=l.length,qe=Na("batchDims",r[0].dataType,et,1),Fe=tt(r[0].dataType),se=G("a",r[0].dataType,E,_),rt=G("b",r[1].dataType,U,_),Ee=J("result",r[0].dataType,H.length,_),Ie=[se,rt];if(ee){let Y=o?_:1;Ie.push(G("bias",r[2].dataType,r[2].dims.length,Y))}let ve=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ir(e,ve);let Ae=tt(Ee.type.tensor),je=Tr(e,Ee.type.value,Ae),mt=F_(_,ee,je,[qe,se,rt,Ee],[a,u,l],o);return`
  ${de.registerUniforms(ve).registerInternalVariables(qe).declareVariables(...Ie,Ee)}
  ${mt}
  ${v?ti(w,S,Fe,qe):ri(w,S,Fe,qe)}
                   `};return{name:"MatMul",shaderCache:{hint:`${w};${e.activation};${v};${o}`,inputDependencies:ue},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:I[0],y:I[1],z:I[2]},programUniforms:q}),getShaderSource:R}}});var U_,Rb,zb=z(()=>{"use strict";Se();dn();Be();cn();qa();Xu();ni();U_=(r,e,n,t,o=!1,i,s=4,a=4,u=4,l="f32")=>{let d=ee=>{switch(ee){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${ee} is not supported.`)}},p=ee=>{switch(ee){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${ee} is not supported.`)}},m=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,b=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,v=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",S=r?"row":"col",I=r?"col":"row",_=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${S} / outWidth;
    let outCol = ${S} % outWidth;

    let WRow = ${I} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${I} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${I} % inChannels;
    var resData = ${Bt(s,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${w}) {
      ${m}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(s)}
    }
    return resData;`,O=r?e&&t?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${_}
    }
    return ${Bt(s,l)}(0.0);`:t&&n?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${_}
    }
    return ${Bt(s,l)}(0.0);`,E=`${p(a)}`,D=Bt(u,l),U=r?Bt(s,l):Bt(a,l),H=r?Bt(a,l):Bt(s,l),q=Tr(i,D,l);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${U} {
      ${r?O:E}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${H} {
      ${r?E:O}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${D}) {
      let col = colIn * ${u};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${b}
      ${Ha(o)}
      ${q}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Rb=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],m=u?n[1]:n[2],b=u?n[3]:n[1],v=u&&(l%4===0||l%3===0)&&b%4===0,w=u?b:p*m,S=u?p*m:b,I=[8,8,1],_=t<=8?[4,1,1]:[4,4,1],O=[Math.ceil(w/I[0]/_[0]),Math.ceil(S/I[1]/_[1]),Math.ceil(d/I[2]/_[2])];it("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${O}`);let E=v?u&&l%4!==0?3:4:1,D=I[1]*_[1],U=I[0]*_[0],H=Math.max(I[0]*E,I[1]),q=t%D===0,ue=o%U===0,ee=i%H===0,R=v?[E,4,4]:[1,1,1],de=[{type:6,data:t},{type:6,data:o},{type:6,data:i},{type:6,data:[e.pads[0],e.pads[1]]},{type:6,data:e.strides},{type:6,data:e.dilations}];Sr(e,de),de.push(...ne(r[0].dims,r[1].dims));let et=["rank","rank"];s&&(de.push(...ne(r[2].dims)),et.push("rank")),de.push(...ne(n));let qe=Fe=>{let se=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ir(e,se);let rt=v?4:1,Ee=tt(r[0].dataType),Ie=`
      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${Ee}>`:Ee}) {
        result[flatIndex] = ${v?`vec4<${Ee}>`:Ee}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${Ee}>`:Ee}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);
      }`,ve=G("x",r[0].dataType,r[0].dims.length,E===3?1:E),Ae=G("w",r[1].dataType,r[1].dims.length,rt),je=[ve,Ae],mt=J("result",r[0].dataType,n.length,rt);if(s){let Y=G("bias",r[2].dataType,r[2].dims.length,rt);je.push(Y),Ie+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${Ee}>`:Ee} {
          return bias[coords.${u?"w":"y"}${v?"/ 4":""}];
        }`}return`
        ${ja("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Fe.registerUniforms(se).declareVariables(...je,mt)}
        ${Ie}
        ${U_(u,q,ue,ee,s,e,R[0],R[1],R[2],Ee)}
        ${v?ti(_,I,Ee,void 0,!u,H):ri(_,I,Ee,void 0,!u,H,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${E};${v};${q};${ue};${ee};${D};${U};${H}`,inputDependencies:et},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:de}),getShaderSource:qe}}});var Zu,Nb,Mb=z(()=>{"use strict";Se();ze();Be();Ju();cn();Zu=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,s=r[1].dims,a=s[0]/e.group,u=e.format==="NHWC",l=Ya(i,s,e.dilations,e.pads,e.strides,u),d=V.size(l),p=[{type:12,data:d},{type:12,data:e.dilations},{type:12,data:[e.strides[0],e.strides[1]]},{type:12,data:[e.pads[0],e.pads[1]]},{type:12,data:a}];Sr(e,p),p.push(...ne(i,s));let m=["rank","rank"];t&&(p.push(...ne(r[2].dims)),m.push("rank")),p.push(...ne(l));let b=v=>{let w=J("output",r[0].dataType,l.length),S=tt(w.type.tensor),I=Tr(e,w.type.value,S),_=G("x",r[0].dataType,i.length),O=G("w",r[1].dataType,s.length),E=[_,O];t&&E.push(G("b",r[2].dataType,r[2].dims.length));let D=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ir(e,D),`
  ${v.registerUniforms(D).declareVariables(...E,w)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${w.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${w.type.value} = ${w.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${u?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${u?2:3}]) {
            continue;
          }

          let xVal = ${u?_.get("batch","xHeight","xWidth","input_channel"):_.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${O.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${I}
    ${w.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:e.cacheKey,inputDependencies:m},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:p}),getShaderSource:b}},Nb=(r,e,n)=>{let t=r.length>2,o=at(n[3]),i=at(n[2]),s=V.size(n)/o/i,a=[r[0].dims[0],r[0].dims[1],r[0].dims[2],r[0].dims[3]/o],u=[r[1].dims[0],r[1].dims[1],r[1].dims[2],r[1].dims[3]/o],l=[n[0],n[1],n[2],n[3]/o],d=[{type:12,data:s},{type:6,data:[e.strides[0],e.strides[1]]},{type:6,data:[e.pads[0],e.pads[1]]}];Sr(e,d),d.push(...ne(a,u,l));let p=(i-1)*e.strides[1]+u[1],m=b=>{let v=J("output",r[0].dataType,l.length,o),w=tt(v.type.tensor),S=Tr(e,v.type.value,w),I=G("x",r[0].dataType,a.length,o),_=G("w",r[1].dataType,u.length,o),O=[I,_];t&&O.push(G("b",r[2].dataType,r[2].dims,o));let E=t?"value += b[output_channel];":"",D=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ir(e,D),`
  ${b.registerUniforms(D).declareVariables(...O,v)}
  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${I.type.value}, ${p}>;
    var values: array<${v.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${u[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${p}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${I.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${I.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${u[1]}; w_width++) {
          let w_val = ${_.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${E}
      ${S}
      ${v.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${e.cacheKey};${o};${i};${p};${u[0]};${u[1]}`,inputDependencies:t?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d}),getShaderSource:m}}});var Qu,V_,Lb,el=z(()=>{"use strict";Se();ze();ni();Be();cn();Qu=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i[i.length-2],u=s[s.length-1],l=i[i.length-1],d=at(u),p=at(l),m=at(a),b=V.size(n)/d/m,v=r.length>2,w=t?t.slice(0,-2):n.slice(0,-2),I=[V.size(w),a,u],_=[{type:12,data:b},{type:12,data:a},{type:12,data:u},{type:12,data:l}];Sr(e,_),_.push(...ne(w,i,s)),v&&_.push(...ne(r[2].dims)),_.push(...ne(I));let O=E=>{let D=Na("batch_dims",r[0].dataType,w.length),U=G("a",r[0].dataType,i.length,p),H=G("b",r[1].dataType,s.length,d),q=J("output",r[0].dataType,I.length,d),ue=tt(q.type.tensor),ee=Tr(e,q.type.value,ue),R=[U,H],de="";if(v){let ve=o?d:1;R.push(G("bias",r[2].dataType,r[2].dims.length,ve)),de=`${o?`value += bias[col / ${ve}];`:`value += ${q.type.value}(bias[row + i]);`}`}let et=i.slice(0,-2),qe=s.slice(0,-2),Fe=uo(et,w),se=uo(qe,w),rt=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ir(e,rt);let Ee=(ve,Ae)=>{let je=ve.rank,mt=ve.name;if(je===2)return`var ${mt}_indices = ${ve.type.indices}(0u, 0u);`;let Y=D.rank,me=`var ${mt}_indices: ${ve.type.indices};`;for(let Ne=je-2-1,ft=Y-1;Ne>=0;Ne--,ft--)me+=`
${mt}_indices[${Ne}] = ${Y>1?`batch_indices[${ft}]`:"batch_indices"};`;return Ae.forEach(Ne=>{me+=`
${mt}_indices[${Ne}] = 0;`}),me+=`${mt}_indices[${je-2}] = 0u;
                     ${mt}_indices[${je-1}] = 0u;`,me},Ie=()=>{let ve=`var a_data: ${U.type.value};`;for(let Ae=0;Ae<p;Ae++)ve+=`
              let b_data${Ae} = b[(b_offset + (k + ${Ae}) * uniforms.N + col) / ${d}];`;for(let Ae=0;Ae<m;Ae++){ve+=`a_data = a[(a_offset + (row + ${Ae}) * uniforms.K + k) / ${p}];`;for(let je=0;je<p;je++)ve+=`
            values[${Ae}] = fma(${H.type.value}(a_data${p===1?"":`[${je}]`}), b_data${je}, values[${Ae}]);
`}return ve};return`
  ${E.registerUniforms(rt).registerInternalVariables(D).declareVariables(...R,q)}
  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${m};
    let row = (index1 % stride1) * ${m};
    let batch = index1 / stride1;

    ${n.length===2?"":`let batch_indices = ${D.offsetToIndices("batch")};`}
    ${Ee(U,Fe)}
    let a_offset = ${U.indicesToOffset("a_indices")};
    ${Ee(H,se)}
    let b_offset = ${H.indicesToOffset("b_indices")};
    var values: array<${q.type.value}, ${m}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {
      ${Ie()}
    }
    for (var i = 0u; i < ${m}u; i++) {
      var value = values[i];
      ${de}
      ${ee}
      let cur_indices = ${q.type.indices}(batch, row + i, col);
      let offset = ${q.indicesToOffset("cur_indices")};
      ${q.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${d};${p};${m};${o}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:_}),getShaderSource:O}},V_=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},Lb=r=>{V_(r.inputs);let e=zr.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let n=e[e.length-1],t=r.inputs[0].dims[r.inputs[0].dims.length-1];n<8&&t<8?r.compute(Qu(r.inputs,{activation:""},e)):r.compute(Ka(r.inputs,{activation:""},e))}});var Ya,tl,G_,Fb,rl,W_,H_,nl,Ju=z(()=>{"use strict";ze();zb();ni();Mb();cn();el();lo();Ya=(r,e,n,t,o,i)=>{let s=r[0],a=r.slice(i?1:2,i?3:4),u=a.length,l=e[0],p=e.slice(2).map((v,w)=>v+(v-1)*(n[w]-1)),b=a.map((v,w)=>v+t[w]+t[w+u]).map((v,w)=>Math.floor((v-p[w]+o[w])/o[w]));return b.splice(0,0,s),b.splice(i?3:1,0,l),b},tl=[2,3,1,0],G_=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},Fb=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();Bn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t}),o},rl=r=>{let e=Wa(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,s=r.kernel_shape,a=r.pads,u=r.strides,l=r.w_is_const();return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},W_=(r,e,n)=>{let t=Fb(n,e),o=n.format==="NHWC";if(n.group!==1){if(!r.adapterInfo.isArchitecture("ampere")&&o&&e[1].dims[0]===n.group&&e[1].dims[1]===1&&n.dilations[0]===1&&n.dilations[1]===1){let H=Ya(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),q=r.kernelCustomData.wT??r.compute(hr(e[1],tl),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=q);let ue=[e[0],q];e.length===3&&ue.push(e[2]),r.compute(Nb(ue,t,H),{inputs:ue})}else r.compute(Zu(e,t));return}let i=e.length===3,s=e[0].dims[o?1:2],a=e[0].dims[o?2:3],u=e[0].dims[o?3:1],l=e[1].dims[2],d=e[1].dims[3],p=Ya(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),m=p[o?1:2],b=p[o?2:3],v=p[o?3:1],w=o&&l===s&&d===a&&n.pads[0]===0&&n.pads[1]===0;if(w||l===1&&d===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let U=p[0],H,q,ue,ee=[];if(o){let et=r.kernelCustomData.wT??r.compute(hr(e[1],tl),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=et),w){let qe=s*a*u;H=e[0].reshape([1,U,qe]),q=et.reshape([1,qe,v]),ue=[1,U,v]}else H=e[0].reshape([U,s*a,u]),q=et.reshape([1,u,v]),ue=[U,m*b,v];ee.push(H),ee.push(q)}else H=e[0].reshape([U,u,s*a]),q=e[1].reshape([1,v,u]),ue=[U,v,m*b],ee.push(q),ee.push(H);i&&ee.push(e[2]);let R=ue[2],de=ee[0].dims[ee[0].dims.length-1];R<8&&de<8?r.compute(Qu(ee,t,p,ue,o),{inputs:ee}):r.compute(Ka(ee,t,p,ue,o),{inputs:ee});return}let S=!0,I=r.kernelCustomData.wT??r.compute(hr(e[1],tl),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=I);let _=[e[0],I];i&&_.push(e[2]);let O=o?m*b:v,E=o?v:m*b,D=l*d*u;r.compute(Rb(_,t,p,O,E,D,i,S),{inputs:_})},H_=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),s=[1].concat(e.dilations),a=[1].concat(e.kernelShape),u=Fb({...e,pads:o,strides:i,dilations:s,kernelShape:a},t);r.compute(Zu(t,u,l=>n?[l[0],l[2],l[3]]:[]))},nl=(r,e)=>{G_(r.inputs,e),r.inputs[0].dims.length===3?H_(r,e):W_(r,r.inputs,e)}});var q_,Ub,Vb=z(()=>{"use strict";Se();dn();Be();cn();qa();Xu();ni();q_=(r,e=!1,n,t,o=4)=>{let i=I=>{switch(I){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${t}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${I} is not supported.`)}},s=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,a=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,u=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",l=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=r?"row":"col",p=r?"col":"row",m=`
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${p} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${p} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${u}) || fract(xR) > 0.0) {
        return ${t}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${t}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${p} % inChannels;
      ${s}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,b=r?`
      let col = colIn * ${o};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${m}
      }
      return ${t}(0.0);`:`
      let col = colIn * ${o};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${m}
      }
      return ${t}(0.0);`,v=`
      let col = colIn * ${o};
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${r?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(o)}
      }
      return ${t}(0.0);
      `,w=Tr(n,t);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${t} {
    ${r?b:v}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${t} {
    ${r?v:b}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${t}) {
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${a}
      ${Ha(e)}
      ${w}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;
    }
  }`},Ub=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],m=u?n[1]:n[2],b=u?n[3]:n[1],v=u&&l%4===0&&l%3&&b%4===0,w=u?b:p*m,S=u?p*m:b,I=[8,8,1],_=t<=8?[4,1,1]:[4,4,1],O=[Math.ceil(w/I[0]/_[0]),Math.ceil(S/I[1]/_[1]),Math.ceil(d/I[2]/_[2])];it("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${O}`);let E=v?4:1,D=Math.max(I[0]*E,I[1]),U=v?4:1,H=[e.kernelShape[u?1:2],e.kernelShape[u?2:3]],q=[H[0]+(e.dilations[0]<=1?0:(H[0]-1)*(e.dilations[0]-1)),H[1]+(e.dilations[1]<=1?0:(H[1]-1)*(e.dilations[1]-1))],ue=[q[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),q[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],ee=[{type:6,data:t},{type:6,data:o},{type:6,data:i},{type:6,data:e.strides},{type:6,data:e.dilations},{type:6,data:H},{type:6,data:ue}];Sr(e,ee),ee.push(...ne(r[0].dims,r[1].dims));let R=["rank","rank"];s&&(ee.push(...ne(r[2].dims)),R.push("rank")),ee.push(...ne(n));let de=et=>{let qe=G("x",r[0].dataType,r[0].dims.length,U),Fe=G("w",r[1].dataType,r[1].dims.length,1),se=J("result",r[0].dataType,n.length,U),rt=[qe,Fe],Ee="";if(s){let Ae=G("bias",r[2].dataType,r[2].dims.length,U);rt.push(Ae),Ee+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Ae.type.value} {
            return bias[coords.${u?"w":"y"}${v?"/ 4":""}];
          }`}let Ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:H.length},{name:"pads",type:"i32",length:ue.length}];Ir(e,Ie);let ve=tt(r[0].dataType,1);if(ve!=="f16"&&ve!=="f32")throw new Error(`elemType ${ve} is not supported.`);return`
        ${ja("uniforms.result_strides")}
        ${et.registerUniforms(Ie).declareVariables(...rt,se)};
        ${Ee}
        ${q_(u,s,e,qe.type.value,E)}
        ${v?ti(_,I,ve,void 0,!u,D):ri(_,I,ve,void 0,!u,D,!1,void 0,a)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${e.cacheKey};${_};${I};${v}`,inputDependencies:R},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:ee}),getShaderSource:de}}});var j_,ol,Gb=z(()=>{"use strict";Se();dn();ze();Be();j_=(r,e,n,t,o,i=!1,s,a,u=!1)=>{let l=u?1:2,d=u?2:3,p=u?3:1,m=i?2:1,b=`
  fn setOutputAtIndex(flatIndex : u32, value : ${i?`vec4<${s}>`:s}) {
    result[flatIndex] = ${i?`vec4<${s}>`:s}(value);
  }`;t&&(b+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${i?`vec4<${s}>`:s} {
      return bias[coords.${u?"w":"y"}${i?"/ 4":""}];
    }`);let v=i?4:1,w=G("W",e[1].dataType,e[1].dims.length,v),S=G("Dy",e[0].dataType,e[0].dims.length,v),I=[S,w];t&&I.push(G("bias",e[2].dataType,[n[p]].length,v));let _=J("result",e[0].dataType,n.length,v),O=`{
        let batch: u32 = ${o?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${o?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${o?"global_id.y":"workgroup_id.y"} * ${m};
        let d1: u32 = ${o?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${s}>, ${m}>;
        for (var i = 0; i < ${m}; i++) {
          dotProd[i] = vec4<${s}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${s}(dyCorner.x) + ${s}(wR)) / ${s}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${s}(dyCorner.y) + ${s}(wC)) / ${s}(uniforms.strides.y);
            let dyC2 = (${s}(dyCorner.y) + 1.0 + ${s}(wC)) / ${s}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${S.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${S.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${s}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${p}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${S.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${S.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${m}; i = i + 1) {
          let value = dotProd[i] + ${t?"bias[c+i]":`vec4<${s}>(0.0)`};
          ${_.set("batch","r","c + i","d1","value")};
        }
      }`,E=`
          let outputIndices = ${_.offsetToIndices("global_idx")};
          let batch = ${_.indicesGet("outputIndices",0)};
          let d1 = ${_.indicesGet("outputIndices",p)};
          let r = ${_.indicesGet("outputIndices",l)};
          let c = ${_.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${s}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${s}(dyRCorner) + ${s}(wR)) / ${s}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${s}(dyCCorner) + ${s}(wC)) / ${s}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${u?S.get("batch","idyR","idyC","inputChannel"):S.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${w.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${t?"bias[d1]":`${s}(0.0)`};
          ${_.setByOffset("global_idx","value")};
        `;return`
  ${r.registerUniforms(a).declareVariables(...I,_)}
  ${b}

    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${i?O:E}}`},ol=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=V.size(o),s=[Math.ceil(i/64),1,1];it("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let a=e.format==="NHWC",u=["rank","rank"],l=[e.strides[0],e.strides[1]],d=[e.kernelShape[a?1:2],e.kernelShape[a?2:3]],p=[e.dilations[0],e.dilations[1]],m=[d[0]+(e.dilations[0]<=1?0:(e.kernelShape[a?1:2]-1)*(e.dilations[0]-1)),d[1]+(e.dilations[1]<=1?0:(e.kernelShape[a?2:3]-1)*(e.dilations[1]-1))],b=[m[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),m[1]-1-Math.floor(e.pads[1]+e.pads[3])/2],v=!1,w=e.group,S=r[1].dims,I=S[0]/w,_=S[1],O=[{type:12,data:i},{type:12,data:l},{type:12,data:d},{type:12,data:p},{type:12,data:m},{type:6,data:b},{type:12,data:I},{type:12,data:_},...ne(r[0].dims,r[1].dims)];t&&(O.push(...ne(r[2].dims)),u.push("rank")),O.push(...ne(o));let E=s[1]===1&&s[2]===1,D=U=>{let H=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:l.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:m.length},{name:"pads",type:"i32",length:b.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],q=tt(r[0].dataType);return`${j_(U,r,o,t,E,v,q,H,a)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};`,inputDependencies:u},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}],programUniforms:O}),getShaderSource:D}}});var K_,Y_,X_,Wb,Hb,Z_,J_,Q_,e1,qb,jb=z(()=>{"use strict";Vb();Gb();cn();lo();K_=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Y_=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},X_=(r,e,n,t,o,i,s,a,u,l)=>{let d=r.length-2,p=l.length===0;if(u.length===0)for(let v=0;v<d;++v)u.push(0);let m=r[0],b=e[a?3:1]*o;for(let v=0,w=r.length-d-(a?1:0);v<d;++v,++w){let S=r[w],I=p?S*s[v]:l[v],_=K_(S,s[v],i[v],e[w],n[v],I);Y_(_,t,i,v,v+d),p&&l.push(s[v]*(S-1)+u[v]+(e[w]-1)*n[v]+1-i[v]-i[v+d])}l.splice(0,0,m),l.splice(a?3:1,0,b)},Wb=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((p,m)=>p*m,1)===0){n.length=0;for(let p=2;p<e[1].dims.length;++p)n.push(e[1].dims[p])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),s=r.outputPadding.slice(),a=e[0].dims,u=r.dilations.slice();if(u.reduce((p,m)=>p+m,0)===0){let p=e[0].dims.length-2;u=new Array(p).fill(1)}let l=r.strides.slice();if(l.reduce((p,m)=>p+m,0)===0){let p=e[0].dims.length-2;l=new Array(p).fill(1)}X_(a,n,u,r.autoPad,r.group,o,l,t,s,i);let d=Object.assign({},r);return Object.assign(d,{kernelShape:n,pads:o,outputPadding:s,outputShape:i,dilations:u,strides:l}),d},Hb=r=>{let e=Wa(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,s=r.kernelShape,a=r.pads,u=r.strides,l=r.wIsConst(),d=r.outputPadding,p=r.outputShape;return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,outputPadding:d,outputShape:p,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},Z_=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((d,p)=>d+p,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((d,p)=>d+p,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((d,p)=>d+p,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((d,p)=>d+p,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},J_=[2,3,1,0],Q_=(r,e,n)=>{let t=Wb(n,e),o=n.format==="NHWC",i=t.outputShape,s=i[o?3:1],a=e[0].dims[o?3:1];if(t.group!==1||s===1&&a===1){r.compute(ol(e,t));return}let u=i[o?1:2],l=i[o?2:3],d=e[1].dims[2],p=e[1].dims[3],m=o?u*l:s,b=o?s:u*l,v=d*p*a,w=!0,S=r.kernelCustomData.wT??r.compute(hr(e[1],J_),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=S);let I=[e[0],S],_=e.length===3;_&&(!o&&e[2].dims.length===1?I.push(e[2].reshape([e[2].dims[0],1,1])):I.push(e[2])),r.compute(Ub(I,t,i,m,b,v,_,w),{inputs:I})},e1=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let s=e.strides;(s.length===0||s[0]===0)&&(s=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],s=[1].concat(s),i=[1].concat(i),o=[1].concat(o);let u=Wb({...e,pads:a,strides:s,dilations:i,kernelShape:o},t);r.compute(ol(t,u,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},qb=(r,e)=>{Z_(r.inputs,e),r.inputs[0].dims.length===3?e1(r,e):Q_(r,r.inputs,e)}});var t1,Kb,Yb,Xb=z(()=>{"use strict";Se();ze();It();Be();t1=(r,e,n,t)=>{let o=V.size(e),i=e.length,s=G("input",r,i),a=J("output",r,i),u=n.dataType===6?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=V.normalizeAxis(u,i),d=p=>{let m=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,b=ye("uniforms.input_shape","uniforms.axis",i),v=t.reverse?m+(t.exclusive?" + 1":""):"0",w=t.reverse?b:m+(t.exclusive?"":" + 1");return`
                ${p.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,a)}
                ${p.mainStart()}
                  ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${v};
                  let last : i32 = ${w};
                  for (var i : i32 = first; i < last; i++) {
                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${s.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},{type:6,data:l},...ne(e,e)]}),getShaderSource:d}},Kb=(r,e)=>{let n=r.inputs[0].dims,t=r.inputs[0].dataType,o=r.inputs[1];r.compute(t1(t,n,o,e),{inputs:[0]})},Yb=r=>{let e=r.exclusive===1,n=r.reverse===1;return ke({exclusive:e,reverse:n})}});var il,Xa,Zb,r1,n1,al,sl,Jb,o1,Qb,ey,ty=z(()=>{"use strict";Se();ze();It();Be();il="[a-zA-Z]|\\.\\.\\.",Xa="("+il+")+",Zb="^"+Xa+"$",r1="("+Xa+",)*"+Xa,n1="^"+r1+"$",al=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},sl=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(n1)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,u)=>{let l=e[u].dims.slice();if(!a.match(RegExp(Zb)))throw new Error("Invalid LHS term");let d=this.processTerm(a,!0,l,u);this.lhs.push(d)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,u])=>u.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(Xa)))throw new Error("Invalid RHS");o.match(RegExp(il,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let u=this.symbolToInfo.get(a);if(u===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(u.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,s=!1,a=[],u=0;if(!e.match(RegExp(Zb))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(il,"g")),d=new al(o);return l?.forEach((p,m)=>{if(p==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let b=i-l.length+1;if(b<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(u,u+b),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<a.length;v++){let w=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(w,m+v),this.addSymbol(w,t[u++],o)}}else d.addSymbol(p,m+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[u++],o)}),d}},Jb=r=>r+"_max",o1=(r,e,n,t)=>{let i=r.map(d=>d.length).map((d,p)=>G(`input${p}`,e,d)),s=V.size(t),a=J("output",e,t.length),u=[...n.symbolToInfo.keys()].filter(d=>!n.rhs.symbolToIndices.has(d)),l=d=>{let p=[],m="var prod = 1.0;",b="var sum = 0.0;",v="sum += prod;",w=[],S=[],I=[],_=[],O=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach((D,U)=>{if(n.rhs.symbolToIndices.has(U)){let H=n.rhs.symbolToIndices.get(U)?.[0];H!==void 0&&n.lhs.forEach((q,ue)=>{if(D.inputIndices.includes(ue)){let ee=q.symbolToIndices.get(U);if(ee===void 0)throw new Error("Invalid symbol error");ee.forEach(R=>{p.push(`${i[ue].indicesSet(`input${ue}Indices`,R,a.indicesGet("outputIndices",H))}`)})}})}else n.lhs.forEach((H,q)=>{if(D.inputIndices.includes(q)){let ue=H.symbolToIndices.get(U);if(ue===void 0)throw new Error("Invalid symbol error");ue.forEach(ee=>{w.push(`${i[q].indicesSet(`input${q}Indices`,ee,`${U}`)}`)}),_.push(`prod *= ${i[q].getByIndices(`input${q}Indices`)};`)}}),S.push(`for(var ${U}: u32 = 0; ${U} < uniforms.${Jb(U)}; ${U}++) {`),I.push("}")});let E=O?[...p,`let sum = ${i.map((D,U)=>D.getByIndices(`input${U}Indices`)).join(" * ")};`]:[...p,b,...S,...w,m,..._,v,...I];return`
            ${d.registerUniforms(u.map(D=>({name:`${Jb(D)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,a)}

            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${i.map((D,U)=>`var input${U}Indices: ${i[U].type.indices};`).join(`
`)}
            ${E.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:r.map(()=>"rank")},getRunData:()=>{let d=u.filter(m=>n.symbolToInfo.has(m)).map(m=>({type:12,data:n.symbolToInfo.get(m)?.dimValue||0}));d.push({type:12,data:s});let p=r.map((m,b)=>[...ne(m)]).reduce((m,b)=>m.concat(b),d);return p.push(...ne(t)),{outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:p}},getShaderSource:l}},Qb=(r,e)=>{let n=new sl(r.inputs,e.equation),t=n.outputDims,o=r.inputs.map((i,s)=>i.dims);r.compute(o1(o,r.inputs[0].dataType,n,t))},ey=r=>{let e=r.equation.replace(/\s+/g,"");return ke({equation:e})}});var i1,ry,a1,s1,ny,oy=z(()=>{"use strict";Se();ze();Be();i1=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},ry=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},a1=(r,e)=>r.length>e.length?ry(r,e):ry(e,r),s1=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=a1(e,n),o=r[0].dataType,i=o===9?4:1,s=Math.ceil(V.size(t)/i),a=l=>{let d=G("input",o,e.length,i),p=J("output",o,t.length,i),m;if(o===9){let b=(v,w,S="")=>`
          let outputIndices${w} = ${p.offsetToIndices(`outputOffset + ${w}u`)};
          let offset${w} = ${d.broadcastedIndicesToOffset(`outputIndices${w}`,p)};
          let index${w} = offset${w} / 4u;
          let component${w} = offset${w} % 4u;
          ${v}[${w}] = ${S}(${d.getByOffset(`index${w}`)}[component${w}]);
        `;m=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${b("data",0,"u32")}
        ${b("data",1,"u32")}
        ${b("data",2,"u32")}
        ${b("data",3,"u32")}
        ${p.setByOffset("global_idx","data")}
      }`}else m=`
        let outputIndices = ${p.offsetToIndices("global_idx")};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",p)};
        ${p.setByOffset("global_idx",d.getByOffset("inputOffset"))}
      }`;return`
    ${l.registerUniform("vec_size","u32").declareVariables(d,p)}
    ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${m}`},u=[{type:12,data:s},...ne(e,t)];return{name:"Expand",shaderCache:{hint:`${t.length}`,inputDependencies:["rank"]},getShaderSource:a,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},ny=r=>{i1(r.inputs),r.compute(s1(r.inputs),{inputs:[0]})}});var u1,iy,ay=z(()=>{"use strict";Se();ze();Be();Ga();u1=r=>{let e=r[0].dataType,n=V.size(r[0].dims),t=V.size(r[1].dims),o=t%4===0,i=s=>{let a=G("x",e,[1],4),u=G("bias",e,[1],4),l=J("y",e,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],p=b=>`
      let bias${b}_offset: u32 = (global_idx * 4 + ${b}) % uniforms.bias_size;
      let bias${b} = ${u.getByOffset(`bias${b}_offset / 4`)}[bias${b}_offset % 4];`,m=o?`
      let bias = ${u.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${p(0)}${p(1)}${p(2)}${p(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${s.registerUniforms(d).declareVariables(a,u,l)}

    ${Ku(Zt(e))}

    ${s.mainStart(Rn)}
      ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${m}
      let x_in = x + bias;
      ${l.setByOffset("global_idx",Yu("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${o}`,inputDependencies:["type","type"]},getShaderSource:i,getRunData:s=>({outputs:[{dims:s[0].dims,dataType:s[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:t}],dispatchGroup:{x:Math.ceil(n/Rn/4)}})}},iy=r=>{r.inputs.length<2||V.size(r.inputs[1].dims)===0?hb(r):r.compute(u1(r.inputs))}});var l1,d1,sy,uy,ly=z(()=>{"use strict";Se();ze();It();Be();l1=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},d1=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=V.normalizeAxis(e.axis,o),s=n.slice(0);s.splice(i,1,...t);let a=n[i],u=r[0].dataType===9?4:1,l=Math.ceil(V.size(s)/u),d=[{type:12,data:l},{type:6,data:a},{type:12,data:i},...ne(r[0].dims,r[1].dims,s)],p=m=>{let b=G("data",r[0].dataType,r[0].dims.length,u),v=G("inputIndices",r[1].dataType,r[1].dims.length),w=J("output",r[0].dataType,s.length,u),S=_=>{let O=t.length,E=`var indicesIndices${_}  = ${v.type.indices}(0);`;for(let D=0;D<O;D++)E+=`${O>1?`indicesIndices${_}[${D}]`:`indicesIndices${_}`} = ${s.length>1?`outputIndices${_}[uniforms.axis + ${D}]`:`outputIndices${_}`};`;E+=`
          var idx${_} = ${v.getByIndices(`indicesIndices${_}`)};
          if (idx${_} < 0) {
            idx${_} = idx${_} + uniforms.axisDimLimit;
          }
          var dataIndices${_} : ${b.type.indices};
        `;for(let D=0,U=0;D<o;D++)D===i?(E+=`${o>1?`dataIndices${_}[${D}]`:`dataIndices${_}`} = u32(idx${_});`,U+=O):(E+=`${o>1?`dataIndices${_}[${D}]`:`dataIndices${_}`} = ${s.length>1?`outputIndices${_}[${U}]`:`outputIndices${_}`};`,U++);return E},I;if(r[0].dataType===9){let _=(O,E,D="")=>`
          let outputIndices${E} = ${w.offsetToIndices(`outputOffset + ${E}u`)};
          ${S(E)};
          let offset${E} = ${b.indicesToOffset(`dataIndices${E}`)};
          let index${E} = offset${E} / 4u;
          let component${E} = offset${E} % 4u;
          ${O}[${E}] = ${D}(${b.getByOffset(`index${E}`)}[component${E}]);
        `;I=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${_("value",0,"u32")}
        ${_("value",1,"u32")}
        ${_("value",2,"u32")}
        ${_("value",3,"u32")}
        ${w.setByOffset("global_idx","value")}
      `}else I=`
      let outputIndices = ${w.offsetToIndices("global_idx")};
      ${S("")};
      let value = ${b.getByIndices("dataIndices")};
      ${w.setByOffset("global_idx","value")};
      `;return`
      ${m.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(b,v,w)}
      ${m.mainStart()}
        ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${I}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:p}},sy=r=>ke({axis:r.axis}),uy=(r,e)=>{let n=r.inputs;l1(n),r.compute(d1(r.inputs,e))}});var c1,f1,dy,cy,fy=z(()=>{"use strict";Se();ze();It();Be();c1=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},f1=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=r[1].dims,s=r[1].dataType,a=V.normalizeAxis(e.axis,o),u=n[a],l=i.slice(0),d=V.size(l),p=G("input",t,o),m=G("indicesInput",s,i.length),b=J("output",t,l.length),v=[{type:12,data:d},{type:6,data:u},{type:12,data:a}];return v.push(...ne(n,i,l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:I=>`
      ${I.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,m,b)}
      ${I.mainStart()}
      ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${b.offsetToIndices("global_idx")};

      var idx = ${m.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${b.setByOffset("global_idx","value")};
  }`}},dy=r=>ke({axis:r.axis}),cy=(r,e)=>{let n=r.inputs;c1(n),r.compute(f1(r.inputs,e))}});var p1,h1,py,hy,my=z(()=>{"use strict";Se();ze();Be();p1=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},h1=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,s]=Ba.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let u=V.size(a),l=[{type:12,data:u},{type:12,data:o},{type:12,data:i},{type:12,data:s},{type:1,data:e.alpha},{type:1,data:e.beta}],d=["type","type"];r.length===3&&(l.push(...ne(r[2].dims)),d.push("rank")),l.push(...ne(a));let p=m=>{let b="";e.transA&&e.transB?b="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?b="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?b="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(b="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=e.alpha===1?"":"value *= uniforms.alpha;",w=G("a",r[0].dataType,r[0].dims),S=G("b",r[1].dataType,r[1].dims),I=w.type.value,_=null,O=[w,S];r.length===3&&(_=G("c",r[2].dataType,r[2].dims.length),O.push(_));let E=J("output",r[0].dataType,a.length);O.push(E);let D=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${m.registerUniforms(D).declareVariables(...O)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${I}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${b}
    }

    ${v}
    ${(()=>_!=null?`let cOffset = ${_.broadcastedIndicesToOffset("vec2(m, n)",E)}; value += ${I}(uniforms.beta) * ${_.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:p}},py=r=>{let e=r.transA,n=r.transB,t=r.alpha,o=r.beta;return{transA:e,transB:n,alpha:t,beta:o,cacheKey:`${r.transA};${r.transB};${r.alpha===1}`}},hy=(r,e)=>{p1(r.inputs),r.compute(h1(r.inputs,e))}});var m1,g1,b1,gy,by=z(()=>{"use strict";Se();ze();Be();m1=(r,e)=>{let n=r[0].dims,t=n,o=2,i=V.sizeToDimension(n,o),s=V.sizeFromDimension(n,o),a=at(s),u=s/a,l=[n[0],n[1],u],d=["rank","type","type"],p=[{type:12,data:s},{type:12,data:u}];p.push(...ne(l,l));let m=b=>{let v=G("x",r[0].dataType,l.length,a),w=G("scale",r[1].dataType,r[1].dims),S=G("bias",r[2].dataType,r[2].dims),I=J("output",r[0].dataType,l.length,a),_=[v,w,S,I],O=v.type.value,E=a===1?"f32":`vec${a}<f32>`,D=64,U=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${E}, ${D}>;
  const workgroupSize = ${D}u;
  ${b.registerUniforms(U).declareVariables(..._)}
  ${b.mainStart(D)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${E}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${E}(${v.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${Jt("workgroupShared[0]",a)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${E}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${E}(${v.get("batch","channel","h")}) - ${E}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${Jt("workgroupShared[0]",a)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${w.getByOffset("channel")});
    let channelShift = f32(${S.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${v.get("batch","channel","h")} * ${O}(${E}(channelScale)) + ${O}(${E}(channelShift));
      ${I.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${a}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i},programUniforms:p}),getShaderSource:m}},g1=(r,e,n,t,o,i,s,a)=>{let u=at(s),l=64,d=u===1?"vec2f":`mat2x${u}f`,p=u===1?"f32":`vec${u}f`,m=(U,H)=>`${d}(${U}, ${H})`,b=o*s/u,v=Math.ceil(i/l),w=["type"],S=[{type:12,data:v},{type:12,data:i},{type:12,data:Math.floor(s/u)},{type:12,data:Math.floor(i*s/u)}],I=U=>{let H=G("input",e.dataType,e.dims,u);return`
  ${U.declareVariables(H)}
  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${U.mainStart(l)}
    let currentImageNumber = global_idx / ${l} / uniforms.C;
    let currentChannelNumber = (global_idx / ${l}) % uniforms.C;
    let wgOffset = local_id.x * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Dt("f32",u)};
    var squaredSum = ${Dt("f32",u)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${p}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${m("sum","squaredSum")};
  }`},_=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${u}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:[o,s,l,2],dataType:1}],dispatchGroup:{x:o*s/u},programUniforms:S}),getShaderSource:I},{inputs:[e],outputs:[-1]})[0],O=[{type:12,data:b},{type:12,data:i},{type:12,data:Math.floor(s/u)},{type:12,data:Math.floor(l*s/u)}],E=["type","type","type"],D=U=>{let H=G("scale",n.dataType,n.dims,u),q=G("bias",t.dataType,t.dims,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${d}>;
  @group(0) @binding(1) var<storage, read> scale : array<${H.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${q.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${U.mainStart()}
    ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Dt("f32",u)};
    var squaredSum = ${Dt("f32",u)};
    for (var i: u32 = 0; i < min(${l}, uniforms.H); i++) {
        let value = input[offset + i + currentChannelNumber * ${l}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${a}));
    let channelScale = invStdDev * ${p}(scale[currentChannelNumber]);
    let channelShift = ${p}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${m("channelScale","channelShift")};
  }`};return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${a}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:[o,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:O}),getShaderSource:D},{inputs:[_,n,t],outputs:[-1]})[0]},b1=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],s=t[t.length-1],a=V.sizeFromDimension(t,1)/s,u=at(s),l=V.size(o)/u,d=[{type:12,data:a},{type:12,data:Math.floor(s/u)}],p=["type","type"],m=g1(r,e[0],e[1],e[2],i,a,s,n.epsilon),b=v=>{let w=tt(e[0].dataType),S=u===1?"vec2f":`mat2x${u}f`,I=u===1?w:`vec${u}<${w}>`,_=G("input",e[0].dataType,e[0].dims,u),O=J("output",e[0].dataType,o,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${_.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${S}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${O.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${v.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${I}(scale[0]), ${I}(scale[1]));
  }`};r.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${u}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:b},{inputs:[e[0],m]})},gy=(r,e)=>{e.format==="NHWC"?b1(r,r.inputs,e):r.compute(m1(r.inputs,e))}});var y1,v1,yy,vy=z(()=>{"use strict";Se();ze();Be();y1=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},v1=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],s=t,a=V.normalizeAxis(e.axis,t.length),u=V.sizeToDimension(t,a),l=V.sizeFromDimension(t,a),d=V.size(o.dims),p=i?V.size(i.dims):0;if(d!==l||i&&p!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${p}`);let m=[];for(let E=0;E<t.length;++E)E<a?m.push(t[E]):m.push(1);let b=at(l),v=["type","type"],w=[{type:12,data:u},{type:1,data:l},{type:12,data:Math.floor(l/b)},{type:1,data:e.epsilon}];i&&v.push("type");let S=n>1,I=n>2,_=E=>{let D=tt(r[0].dataType),U=[G("x",r[0].dataType,r[0].dims,b),G("scale",o.dataType,o.dims,b)];i&&U.push(G("bias",i.dataType,i.dims,b)),U.push(J("output",r[0].dataType,s,b)),S&&U.push(J("mean_data_output",1,m)),I&&U.push(J("inv_std_output",1,m));let H=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${E.registerUniforms(H).declareVariables(...U)}
  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Dt("f32",b)};
    var mean_square_vector = ${Dt("f32",b)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${$r(D,b,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Jt("mean_vector",b)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Jt("mean_square_vector",b)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${$r(D,b,"x[j + offset]")};
      let f32scale = ${$r(D,b,"scale[j]")};
      output[j + offset] = ${U[0].type.value}((f32input - mean) * inv_std_dev * f32scale
        ${i?`+ ${$r(D,b,"bias[j]")}`:""}
      );
    }

    ${S?"mean_data_output[global_idx] = mean":""};
    ${I?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},O=[{dims:s,dataType:r[0].dataType}];return S&&O.push({dims:m,dataType:1}),I&&O.push({dims:m,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${b};${n}`,inputDependencies:v},getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:w}),getShaderSource:_}},yy=(r,e)=>{y1(r.inputs),r.compute(v1(r.inputs,e,r.outputCount))}});var w1,x1,wy,xy,_y=z(()=>{"use strict";Se();ze();It();Be();w1=(r,e)=>{if(r.length<3||r.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=r[0],t=n.dims.length;if(n.dims[t-1]!==e.k)throw new Error("The last dim of input shape does not match the k value");let o=Math.floor((e.k+e.blockSize-1)/e.blockSize),i=e.blockSize/8*e.bits,s=r[1];if(!V.areEqual(s.dims,[e.n,o,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=r[2].dims;if(V.size(u)!==e.n*o)throw new Error("scales input size error.");if(r.length===4){let d=r[3].dims,p=e.bits>4?e.n*o:e.n*Math.floor((o+1)/2);if(V.size(d)!==p)throw new Error("zeroPoints input size error.")}},x1=(r,e)=>{let n=r[0].dims,t=n.length,o=n.slice(0,t-1).concat(e.n),i=n[t-2],a=e.blockSize/8*e.bits/4,u=at(i),l=at(e.n),d=at(e.k),p=at(a),m=V.size(o)/l/u,b=[{type:12,data:m},{type:12,data:e.k},{type:12,data:e.n},{type:12,data:e.accuracyLevel},{type:12,data:e.bits},{type:12,data:e.blockSize}],v=n.slice();v.splice(-1,1,e.k/d);let w=V.convertShape(r[1].dims).slice();w.splice(-1,1,a/p),b.push(...ne(v)),b.push(...ne(w)),b.push(...ne(r[2].dims)),r.length===4&&b.push(...ne(V.convertShape(r[3].dims)));let S=o.slice();S.splice(-1,1,e.n/l),b.push(...ne(S));let I=_=>{let O=G("a",r[0].dataType,v.length,d),E=G("b",12,w.length,p),D=G("scales",r[2].dataType,r[2].dims.length),U=[O,E,D],H=r.length===4?G("zero_points",12,r[3].dims.length):void 0;H&&U.push(H);let q=J("output",r[0].dataType,o.length,l),ue=[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],ee=Math.floor((e.k+e.blockSize-1)/e.blockSize),R=tt(r[0].dataType),de=(()=>{switch(d){case 1:return`array<${R}, 8>`;case 2:return`mat4x2<${R}>`;case 4:return`mat2x4<${R}>`;default:throw new Error(`${d}-component is not supported.`)}})(),et=`
        fn dequantize(quantized: ${de}, zero_point: ${R}, scale: ${R}) -> ${de} {
          ${(()=>d===1?`var dequantized = ${de}(${Array.from({length:8},(se,rt)=>`(quantized[${rt}] - zero_point) * scale`).join(", ")});
              return dequantized;`:`var zero_points: ${de} = ${de}(${Array(8).fill("zero_point").join(",")});
              return (quantized - zero_points) * scale;`)()}
        }`,qe=`
        fn ortUnpack8x4snorm(value: u32) -> ${de} {
          var quantized: ${de};
          var offset: u32 = 0;
          let count: u32 = 4;
          for (var i: u32 = 0; i < 8u; i++) {
            var result = ${R}(extractBits(value, offset, count));
            ${(()=>{switch(d){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${d}-component is not supported.`)}})()}
            offset += count;
          }
          return quantized;
        }`,Fe=H?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${H.getByOffset("zero_point_index")};
          }`:"";return`
        ${et};
        ${qe};
        ${_.registerUniforms(ue).declareVariables(...U,q)}
        ${_.mainStart()}
          ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${q.type.value}, ${u}>;
          var output_indices = ${q.offsetToIndices("global_idx")};
          var n = ${q.indicesGet("output_indices",t-1)};
          var m = ${q.indicesGet("output_indices",t-2)};
          var a_indices: ${O.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${H?`
          var zero_point_index: u32 = n * ${l} * ((${ee} + 1) / 2) / 4;
          var zero_point_word: u32 = ${H.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = 0;`:""}
          var scale_index = n * ${ee*l};
          var b_indices: ${E.type.indices};
          for (var c: u32 = 0; c < ${l}; c++) {
            ${E.indicesSet("b_indices","0",`n * ${l} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${ee}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${D.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${R}(${H?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${E.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              for (var word: u32 = 0; word < ${a}; word += ${p}) {
                ${E.indicesSet("b_indices","2","word")};
                let b_data = ${E.getByIndices("b_indices")};
                for (var i: u32 = 0; i < ${p}; i++) {
                  let b_value = ${p===1?"b_data":"b_data[word + i]"};
                  let b_quantized_values: ${de} = ortUnpack8x4snorm(b_value);
                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);
                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
                  var offset: u32 = word_offset;
                  for (var j: u32 = 0; j < 8/${d}; j++) {
                    ${O.indicesSet("a_indices",t-1,`offset/${d}`)};
                    for (var k: u32 = 0; k < ${u}u; k++) {
                      ${O.indicesSet("a_indices",t-2,`m * ${u} + k`)};
                      let a_data = ${O.getByIndices("a_indices")};
                      output_values[k]${l>1?"[c]":""} += ${d===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};
                    }
                    offset += ${d};
                  }
                  word_offset += 8;
                }
              }
              scale_index++;
              ${Fe}
              block_offset += uniforms.block_size;
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${H?`if (zero_point_offset % 8 > 0) {
                ${Fe}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${u}u; k++) {
              ${q.indicesSet("output_indices",t-2,`${u+" * m + k"}`)};
              ${q.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${e.cacheKey};${r.length}`,inputDependencies:Array(r.length).fill("rank")},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:b}),getShaderSource:I}},wy=(r,e)=>{w1(r.inputs,e),r.compute(x1(r.inputs,e))},xy=r=>ke(r)});var _1,Ty,$y,$1,ul,Sy,Iy=z(()=>{"use strict";Se();ze();It();ka();ju();Be();lo();_1=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5],u=r[6],l=r[7];if(n.dims.length!==3&&n.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,p=n.dims[0],m=n.dims[1],b=n.dims.length===3?d?n.dims[2]/3:n.dims[2]:e.numHeads*n.dims[4],v=m,w=0,S=0,I=Math.floor(b/e.numHeads);if(u&&l){if(u.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');w=u.dims[2],S=u.dims[2]}else if(u||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let _;if(t){if(n.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(t.dims.length<3||t.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==t.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(t.dims.length===3){if(t.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');_=2,v=t.dims[1]}else if(t.dims.length===5){if(t.dims[2]!==e.numHeads||t.dims[3]!==2||t.dims[4]!==I)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');_=5,v=t.dims[1]}else{if(t.dims[1]!==e.numHeads||t.dims[3]!==I)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');_=0,v=t.dims[2]}}else{if(n.dims.length!==3&&n.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(n.dims.length===5&&(n.dims[2]!==e.numHeads||n.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let O=0;if(s){O=8;let q=s.dims;throw q.length===1?q[0]===p?O=1:q[0]===3*p+2&&(O=3):q.length===2&&q[0]===p&&q[1]===v&&(O=5),O===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let E=!1,D=b;if(o){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(v!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');D=o.dims[2]}else{if(v!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');D=o.dims[1]*o.dims[3],E=!0}}let U=w+v,H=!1;if(s)throw new Error("Key padding mask is not supported");if(a)throw new Error("extraAddQk is not supported");if(u)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:p,sequenceLength:m,pastSequenceLength:w,kvSequenceLength:v,totalSequenceLength:U,maxSequenceLength:S,inputHiddenSize:0,hiddenSize:b,vHiddenSize:D,headSize:I,vHeadSize:Math.floor(D/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:O,scale:e.scale,broadcastResPosBias:H,passPastInKv:E,qkvFormat:_}},Ty=r=>ke({...r}),$y=ke({perm:[0,2,1,3]}),$1=(r,e,n,t,o,i,s)=>{let a=[t,o,i],u=V.size(a),l=[{type:12,data:u},{type:12,data:s},{type:12,data:i}],d=p=>{let m=J("qkv_with_bias",e.dataType,a),b=G("qkv",e.dataType,a),v=G("bias",n.dataType,a),w=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${p.registerUniforms(w).declareVariables(b,v,m)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return r.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:d},{inputs:[e,n],outputs:[-1]})[0]},ul=(r,e,n,t,o,i,s,a)=>{let u=i;if(s){if(t===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=$1(r,i,s,e,t,n*o,a),u=u.reshape([e,t,n,o]),r.compute(hr(u,$y.perm),{inputs:[u],outputs:[-1]})[0]}else return i.dims.length===3&&(u=i.reshape([e,t,n,o])),r.compute(hr(u,$y.perm),{inputs:[u],outputs:[-1]})[0]},Sy=(r,e)=>{let n=_1(r.inputs,e);if(r.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(r.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let t=r.inputs[1]&&r.inputs[2]&&r.inputs[1].dims.length===4&&r.inputs[2].dims.length===4,o=ul(r,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r.inputs[0],r.inputs[3],0);if(t)return Fa(r,o,r.inputs[1],r.inputs[2],r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e);let i=ul(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,r.inputs[1],r.inputs[3],n.hiddenSize),s=ul(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,r.inputs[2],r.inputs[3],2*n.hiddenSize);Fa(r,o,i,s,r.inputs[4],void 0,r.inputs[6],r.inputs[7],r.inputs[5],n,e)}});var T1,S1,I1,A1,O1,E1,C1,P1,Ay,Oy=z(()=>{"use strict";Se();ze();Be();T1=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1&&r[0].dataType!==10)throw new Error("Input type must be float or float16.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},S1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
            k = i32(${r.indicesGet("indices",o)}) - ${ye("uniforms.pads",o,n)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${ye("uniforms.x_shape",o,e)})) {
              break;
            }
            offset += k * i32(${ye("uniforms.x_strides",o,e)});
        `;return`
          value = ${r.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${t}
            value = x[offset];
          }
      `},I1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${ye("uniforms.pads",o,n)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${ye("uniforms.x_shape",o,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${ye("uniforms.x_shape",o,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${ye("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},A1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${ye("uniforms.pads",o,n)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${ye("uniforms.x_shape",o,e)})) {
                  k = i32(${ye("uniforms.x_shape",o,e)}) - 1;
                }
                offset += k * i32(${ye("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},O1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${ye("uniforms.pads",o,n)};
                if (k < 0)  {
                  k += i32(${ye("uniforms.x_shape",o,e)}]);
                }
                if (k >= i32(${ye("uniforms.x_shape",o,e)})) {
                  k -= i32(${ye("uniforms.x_shape",o,e)});
                }
                offset += k * i32(${ye("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},E1=(r,e,n)=>{switch(n.mode){case 0:return S1(r,e,n.pads.length);case 1:return I1(r,e,n.pads.length);case 2:return A1(r,e,n.pads.length);case 3:return O1(r,e,n.pads.length);default:throw new Error("Invalid mode")}},C1=(r,e)=>{let n=V.padShape(r[0].dims.slice(),e.pads),t=r[0].dims,o=V.size(n),i=[{type:12,data:o},{type:6,data:e.pads}];e.mode===0&&i.push({type:r[0].dataType,data:e.value}),i.push(...ne(r[0].dims,n));let s=["rank"],a=u=>{let l=J("output",r[0].dataType,n.length),d=G("x",r[0].dataType,t.length),p=d.type.value,m=E1(l,t.length,e),b=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&b.push({name:"constant_value",type:p}),`
            ${u.registerUniforms(b).declareVariables(d,l)}
            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${l.offsetToIndices("global_idx")};

            var value = ${p}(0);
            ${m}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:s},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(V.size(n)/64)},programUniforms:i}),getShaderSource:a}},P1=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let u=0;u<a.length;u++)i[Number(a[u])]=Number(n[u]),i[Number(a[u])+o]=Number(n[u+a.length])}else n.forEach((a,u)=>i[Number(u)]=Number(a));let s=[];return i.forEach(a=>s.push(a)),{mode:e.mode,value:t,pads:s}}else return e},Ay=(r,e)=>{T1(r.inputs);let n=P1(r.inputs,e);r.compute(C1(r.inputs,n),{inputs:[0]})}});var Za,Ey,Cy,Py,ky,k1,D1,Dy,By,Ry,zy,Ny,My,Ly,Fy,Uy,Vy,Gy,Wy,Hy=z(()=>{"use strict";Pt();Se();ze();Be();Za=r=>{if(ge.webgpu.validateInputContent&&(!r||r.length!==1))throw new Error("Pool ops requires 1 input.")},Ey=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),s=e.kernelShape.slice(),a=e.strides.slice(),u=i?e.dilations.slice():[],l=e.pads.slice();Bn.adjustPoolAttributes(n,o,s,a,u,l);let d=Bn.computePoolOutputShape(n,o,a,u,s,l,e.autoPad),p=Object.assign({},e);i?Object.assign(p,{kernelShape:s,strides:a,pads:l,dilations:u,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:s,strides:a,pads:l,cacheKey:e.cacheKey});let m=d.slice();return m.push(m.splice(1,1)[0]),[p,t?m:d]},Cy=(r,e)=>{let n=e.format==="NHWC",t=V.size(r),o=V.size(e.kernelShape),i=[{type:12,data:t},{type:12,data:o}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let a=e.kernelShape[e.kernelShape.length-1],u=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],p=!!(l+d);i.push({type:12,data:a},{type:12,data:u},{type:12,data:l},{type:12,data:d}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let m=!1;if(e.kernelShape.length===2){let b=e.kernelShape[e.kernelShape.length-2],v=e.strides[e.strides.length-2],w=e.pads[e.pads.length/2-2],S=e.pads[e.pads.length-2];m=!!(w+S),i.push({type:12,data:b},{type:12,data:v},{type:12,data:w},{type:12,data:S}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,s,!0,p,m]}else{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=V.computeStrides(e.kernelShape);i.push({type:12,data:a},{type:12,data:e.pads},{type:12,data:e.strides}),s.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let u=e.pads.reduce((l,d)=>l+d);return[i,s,!!u,!1,!1]}},Py=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let m=o.format==="NHWC",b=e.type.value,v=J("output",e.type.tensor,t);if(o.kernelShape.length<=2){let w="",S="",I="",_=n-(m?2:1);if(d?w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${_}] < 0 || xIndices[${_}]
                      >= uniforms.x_shape[${_}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let E=n-(m?3:2);p?S=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${E}] < 0 || xIndices[${E}] >= uniforms.x_shape[${E}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:S=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;
                `,I=`
              }
            `}return`
            ${r.registerUniforms(u).declareVariables(e,v)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${v.offsetToIndices("global_idx")};
              var xIndices = ${v.offsetToIndices("global_idx")};

              var value = ${b}(${a});
              var pad = 0;
              ${S}
              ${w}
              ${I}
              ${s}

              output[global_idx] = value;
            }`}else{if(m)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let w=o.kernelShape.length,S=o.pads.length,I="";return l?I=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:I=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.registerUniforms(u).declareVariables(e,v)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${v.offsetToIndices("global_idx")};
              var xIndices = ${v.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${b}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / ${ye("uniforms.kernelStrides","j",w)};
                  offset -= offsets[j] * ${ye("uniforms.kernelStrides","j",w)};
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${n-w}u; j < ${n}u; j++) {
                  xIndices[j] = indices[j] * ${ye("uniforms.strides",`j - ${n-w}u`,w)}
                    + offsets[j - ${n-w}u] - ${ye("uniforms.pads","j - 2u",S)};
                  ${I}
              }
              ${s}

              output[global_idx] = value;
            }`}},ky=r=>`${r.format};${r.ceilMode};${r.autoPad};${r.kernelShape.length}`,k1=r=>`${ky(r)};${r.countIncludePad}`,D1=r=>`${ky(r)};${r.storageOrder};${r.dilations}`,Dy=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),By=(r,e,n,t)=>{let[o,i]=Ey(e,t,n),s=G("x",e.dataType,e.dims.length),a=s.type.value,u="value += x_val;",l="";o.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,p,m,b,v]=Cy(i,o);d.push(...ne(e.dims,i));let w=["rank"];return{name:r,shaderCache:{hint:`${t.cacheKey};${m};${b};${v}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(V.size(i)/64)},programUniforms:d}),getShaderSource:S=>Py(S,s,e.dims.length,i.length,o,u,l,0,p,m,b,v)}},Ry=r=>{let e=r.count_include_pad!==0,n=Dy(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let t={countIncludePad:e,...n,cacheKey:""};return{...t,cacheKey:k1(t)}},zy=(r,e)=>{Za(r.inputs),r.compute(By("AveragePool",r.inputs[0],!1,e))},Ny={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},My=r=>{let e=r.format;return{format:e,...Ny,cacheKey:e}},Ly=(r,e)=>{Za(r.inputs),r.compute(By("GlobalAveragePool",r.inputs[0],!0,e))},Fy=(r,e,n,t)=>{let[o,i]=Ey(e,t,n),s=`
      value = max(x_val, value);
    `,a="",u=G("x",e.dataType,e.dims.length),l=["rank"],[d,p,m,b,v]=Cy(i,o);return d.push(...ne(e.dims,i)),{name:r,shaderCache:{hint:`${t.cacheKey};${m};${b};${v}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(V.size(i)/64)},programUniforms:d}),getShaderSource:w=>Py(w,u,e.dims.length,i.length,o,s,a,e.dataType===10?-65504:-1e5,p,m,b,v)}},Uy=(r,e)=>{Za(r.inputs),r.compute(Fy("MaxPool",r.inputs[0],!1,e))},Vy=r=>{let e=r.storage_order,n=r.dilations,t=Dy(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:e,dilations:n,...t,cacheKey:""};return{...o,cacheKey:D1(o)}},Gy=r=>{let e=r.format;return{format:e,...Ny,cacheKey:e}},Wy=(r,e)=>{Za(r.inputs),r.compute(Fy("GlobalMaxPool",r.inputs[0],!0,e))}});var R1,z1,qy,jy=z(()=>{"use strict";Pt();Se();Be();R1=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},z1=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],s=o,a=[{type:12,data:s},{type:t,data:r},{type:t,data:n},...ne(i)],u=l=>{let d=J("output",t,i.length),p=d.type.value,m=[{name:"outputSize",type:"u32"},{name:"start",type:p},{name:"delta",type:p}];return`
        ${l.registerUniforms(m).declareVariables(d)}
        ${l.mainStart()}
        ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${p}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${t}`},getShaderSource:u,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:a})}},qy=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),ge.webgpu.validateInputContent&&R1(e,n,t),r.compute(z1(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var N1,M1,L1,F1,U1,V1,G1,W1,H1,q1,j1,Ky,K1,Y1,X1,Z1,J1,Yy,Xy,Zy=z(()=>{"use strict";Se();ze();It();Be();N1=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===3||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1||r.length===5&&r[0]===1&&r[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},M1=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},L1=(r,e,n,t,o,i)=>{let[s,a,u]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(s>0&&r.length>s&&r[s].dims.length>0)r[s].getFloat32Array().forEach(d=>i.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(d=>t.push(d)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");N1(t,e),e.axes.length>0&&M1(t,e.axes,l).forEach((d,p)=>t[p]=d)}if(u>0&&r.length>u&&(r[u].getBigInt64Array().forEach(d=>o.push(Number(d))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},F1=(r,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(r){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",U1=(r,e,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",V1=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,s)=>{t[i]=o[s],t[s+n]=o[e.length+s]}),t):o},G1=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,s)=>o[i]=n[s])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,s)=>Math.round(i*e[s]))}return o},W1=(r,e,n)=>{let t=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let o=r.slice();return n.axes.length>0?(n.axes.forEach(i=>e[i]=t),n.axes.forEach(i=>o[i]=Math.round(r[i]*e[i]))):(e.fill(t,0,e.length),o.forEach((i,s)=>o[s]=Math.round(i*e[s]))),o},H1=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> array<${r.type.value}, ${n.length}> {
      var original_indices: array<${r.type.value}, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var scale = ${ye("uniforms.scales","i",t)};
        var roi_low = ${ye("uniforms.roi","i",o)};
        var roi_hi = ${ye("uniforms.roi",`i + ${e.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${r.type.value}(output_index);
        } else {
          var input_shape_i = ${ye("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${ye("uniforms.output_shape","i",n.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,q1=(r,e,n,t,o,i,s)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
      var input_indices: ${r.type.indices};
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${ye("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${ye("uniforms.roi","i",i)};
          var roi_hi = ${ye("uniforms.roi",`i + ${n.length}`,i)};
          var input_shape_i = ${ye("uniforms.input_shape","i",n.length)};
          var output_shape_i = ${ye("uniforms.output_shape","i",t.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${s} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${r.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,j1=(r,e)=>`
    fn checkInputIndices(input_indices: ${r.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${r.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${ye("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,Ky=(r,e,n,t)=>r.rank>t?`
    ${r.indicesSet("input_indices",e,"channel")};
    ${r.indicesSet("input_indices",n,"batch")};
`:"",K1=(r,e,n,t,o)=>{let[s,a,u,l]=n.length===2?[-1,0,1,-1]:[0,2,3,1],d=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(col, ${n[u]} - 1))`)};
      ${Ky(r,l,s,2)}
      return ${r.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${a}];
      var col:${d} = originalIndices[${u}];
      ${t?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[u]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${n[a]} - 1));
      col = max(0, min(col, ${n[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${n.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},Y1=(r,e,n,t,o,i,s,a,u,l)=>{let d=n.length===2,p=!0,[m,b]=d?[0,1]:p?[2,3]:[1,2],v=r.type.value,w=S=>{let I=S===m?"row":"col";return`
      fn ${I}CubicInterpolation(input_indices: ${r.type.indices}, output_indices: ${e.type.indices}) -> ${v} {
        var output_index = ${e.indicesGet("output_indices",S)};
        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[S]},
        ${t[S]}, ${n[S]}, ${i[S]}, ${i[S]} + ${n.length});
        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[S]} - 1))) {
          return ${u};
        }
        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${I}: ${v} = originalIdx + ${v}(i);
          if (${I} < 0 || ${I} >= ${n[S]}) {
            ${(()=>l?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${u};`:`${I} = max(0, min(${I}, ${n[S]} - 1));`)()};
          }
        var input_indices_copy: ${r.type.indices} = input_indices;
          ${r.indicesSet("input_indices_copy",S,`u32(${I})`)};
          data[i + 1] = ${S===m?r.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${w(m)};
    ${w(b)};
  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {
    var absS = abs(s);
    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${v} = 1.0 - absS;
    var twoMinusAbsS: ${v} = 2.0 - absS;
    var onePlusAbsS: ${v} = 1.0 + absS;
    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};
    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;
    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {
    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${v} {
    var input_indices: ${r.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},X1=(r,e,n,t,o)=>{let[s,a,u,l,d]=n.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(height, ${n[u]} - 1))`)};
      ${r.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};
      ${Ky(r,d,s,3)}
      return ${r.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${a}];
      var height:${p} = originalIndices[${u}];
      var width:${p} = originalIndices[${l}];
      ${t?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[u]} - 1) || width < 0 || (width > ${n[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${n[a]} - 1));
      height = max(0, min(height, ${n[u]} - 1));
      width = max(0, min(width, ${n[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${n.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Z1=(r,e,n,t,o,i)=>{let s=r.dims,a=V1(i,e.axes,s.length),u=G1(s,t,o,e.axes),l=t.slice();t.length===0&&(l=s.map((_,O)=>_===0?1:u[O]/_),e.keepAspectRatioPolicy!=="stretch"&&(u=W1(s,l,e)));let d=J("output",r.dataType,u.length),p=G("input",r.dataType,s.length),m=V.size(u),b=s.length===u.length&&s.every((_,O)=>_===u[O]),v=e.coordinateTransformMode==="tf_crop_and_resize",w=e.extrapolationValue,S=p.type.value,I=_=>`
      ${b?"":`
      ${F1(e.coordinateTransformMode,S)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${j1(p,s)};
              ${U1(e.nearestMode,n,S)};
              ${q1(p,d,s,u,l.length,a.length,v)};
              `;case"linear":return`
              ${H1(d,s,u,l.length,a.length)};
              ${(()=>{if(s.length===2||s.length===4)return`${K1(p,d,s,v,w)}`;if(s.length===3||s.length===5)return`${X1(p,d,s,v,w)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(s.length===2||s.length===4)return`${Y1(p,d,s,u,l,a,e.cubicCoeffA,v,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${_.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",a.length).declareVariables(p,d)}
      ${_.mainStart()}
        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${b?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${p.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${p.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${s.length===2||s.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}|${a.length>0?a:""}|${b}|${s}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[{dims:u,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},{type:1,data:l},{type:1,data:a},...ne(s,u)]})}},J1=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},Yy=(r,e)=>{let n=[],t=[],o=[],i=J1(r);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");L1(r.inputs,e,i,n,t,o),r.compute(Z1(r.inputs[0],e,i,n,t,o),{inputs:[0]})},Xy=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,s=r.extrapolationValue,a=r.keepAspectRatioPolicy,u=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return ke({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:a,mode:u,nearestMode:l})}});var Q1,e$,Jy,Qy=z(()=>{"use strict";Se();ze();It();Be();Q1=(r,e)=>{let[n,t,o,i]=r,{numHeads:s,rotaryEmbeddingDim:a}=e;if(n.dims.length!==3&&n.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${n.dims.length}`);if(!V.areEqual(t.dims,[])&&!V.areEqual(t.dims,[1])&&t.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${t.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!V.areEqual(o.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&s===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let u=n.dims[0],l=n.dims[n.dims.length-2],d=o.dims[0],p=V.sizeFromDimension(n.dims,1)/l,m=a===0?o.dims[1]*2:p/s;if(a>m)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(t.dims.length===2){if(u!==t.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${t.dims[0]}`);if(l!==t.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${t.dims[1]}`)}if(m/2!==o.dims[1]&&a/2!==o.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${o.dims[1]}`);if(l>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},e$=(r,e)=>{let{interleaved:n,numHeads:t,rotaryEmbeddingDim:o,scale:i}=e,s=r[0].dims[0],a=V.sizeFromDimension(r[0].dims,1),u=r[0].dims[r[0].dims.length-2],l=a/u,d=r[2].dims[1],p=o===0?d*2:l/t,m=new Array(s,u,l/p,p-d),b=V.computeStrides(m),v=[{type:1,data:i},{type:12,data:m},{type:12,data:b},...r[0].dims.length===3?new Array({type:12,data:[a,l,p,1]}):[],...r[0].dims.length===4?new Array({type:12,data:[a,p,u*p,1]}):[],...ne(r[0].dims,r[1].dims,r[2].dims,r[3].dims,r[0].dims)],w=S=>{let I=G("input",r[0].dataType,r[0].dims.length),_=G("position_ids",r[1].dataType,r[1].dims.length),O=G("cos_cache",r[2].dataType,r[2].dims.length),E=G("sin_cache",r[3].dataType,r[3].dims.length),D=J("output",r[0].dataType,r[0].dims.length);return S.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:m.length},{name:"global_strides",type:"u32",length:b.length},{name:"input_output_strides",type:"u32",length:b.length}]),`
        ${S.declareVariables(I,_,O,E,D)}

        ${S.mainStart(Rn)}
          let half_rotary_emb_dim = uniforms.${O.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${S.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${_.broadcastedIndicesToOffset("bsnh.xy",J("",_.type.tensor,2))};
            let position_id =
                u32(${_.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${n});
            let j = i + select(half_rotary_emb_dim, 1, ${n});
            let re = ${I.getByOffset("i")} * ${O.get("position_id","bsnh[3]")} -
                ${I.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};
            ${D.setByOffset("i","re")}
            let im = ${I.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} +
                ${I.getByOffset("j")} * ${O.get("position_id","bsnh[3]")};
            ${D.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${D.setByOffset("k",I.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:ke({interleaved:n}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:w,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(V.size(m)/Rn)},programUniforms:v})}},Jy=(r,e)=>{Q1(r.inputs,e),r.compute(e$(r.inputs,e))}});var t$,r$,e0,t0=z(()=>{"use strict";Se();ze();Be();t$=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let s=r[3];if(s.dims.length!==1)throw new Error("Beta must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let s=r[4];if(s.dims.length!==1)throw new Error("Bias must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},r$=(r,e,n,t)=>{let o=r[0].dims,i=V.size(o),s=o,a=i,u=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],d=r.length>3,p=r.length>4,m=t&&n>1,b=t&&n>2,v=n>3,w=at(u),S=[{type:12,data:a},{type:12,data:w},{type:12,data:u},{type:1,data:e.epsilon}],I=O=>{let E=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],D=[G("x",r[0].dataType,r[0].dims,w),G("skip",r[1].dataType,r[1].dims,w),G("gamma",r[2].dataType,r[2].dims,w)];d&&D.push(G("beta",r[3].dataType,r[3].dims,w)),p&&D.push(G("bias",r[4].dataType,r[4].dims,w)),D.push(J("output",r[0].dataType,s,w)),m&&D.push(J("mean_output",1,l)),b&&D.push(J("inv_std_output",1,l)),v&&D.push(J("input_skip_bias_sum",r[0].dataType,s,w));let U=tt(r[0].dataType);return`

      ${O.registerUniforms(E).declareVariables(...D)}

      ${O.mainStart()}
        ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${Dt("f32",w)};
        var squareSum = ${Dt("f32",w)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${p?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${v?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${$r(U,w,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${Jt("sum",w)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Jt("squareSum",w)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${m?"mean_output[global_idx] = mean;":""}
        ${b?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${U}(mean)) * ${U}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};
        }
      }`},_=[{dims:s,dataType:r[0].dataType}];return n>1&&_.push({dims:l,dataType:1}),n>2&&_.push({dims:l,dataType:1}),n>3&&_.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${w};${m};${b};${v}`,inputDependencies:r.map((O,E)=>"type")},getShaderSource:I,getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(a/u/64)},programUniforms:S})}},e0=(r,e)=>{t$(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(r$(r.inputs,e,r.outputCount,!1),{outputs:t})}});var n$,Ja,o$,r0,i$,a$,n0,o0,i0=z(()=>{"use strict";Se();ze();It();Be();n$=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},Ja=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},o$=(r,e)=>{if(r.length>1){let n=Ja(r,1),t=Ja(r,2),o=Ja(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),ke({starts:n,ends:t,axes:o})}else return e},r0=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},i$=(r,e,n)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
          var input_indices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            let input_shape_i = ${ye("uniforms.input_shape","i",n.length)};
            let steps_i = ${ye("uniforms.steps","i",n.length)};
            let signs_i = ${ye("uniforms.signs","i",n.length)};
            let starts_i = ${ye("uniforms.starts","i",n.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${r.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,a$=(r,e)=>{let n=r[0].dims,t=V.size(n),o=e.axes.length>0?V.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=Ja(r,4);i.forEach(I=>I!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let s=e.starts.map((I,_)=>r0(I,_,n,o,i)),a=e.ends.map((I,_)=>r0(I,_,n,o,i));if(o.length!==s.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==n.length)for(let I=0;I<n.length;++I)o.includes(I)||(s.splice(I,0,0),a.splice(I,0,n[I]),i.splice(I,0,1));let u=i.map(I=>Math.sign(I));i.forEach((I,_,O)=>{if(I<0){let E=(a[_]-s[_])/I,D=s[_],U=D+E*i[_];s[_]=U,a[_]=D,O[_]=-I}});let l=n.slice(0);o.forEach((I,_)=>{l[I]=Math.ceil((a[I]-s[I])/i[I])});let d={dims:l,dataType:r[0].dataType},p=J("output",r[0].dataType,l.length),m=G("input",r[0].dataType,r[0].dims.length),b=V.size(l),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:i.length}],w=[{type:12,data:b},{type:12,data:s},{type:6,data:u},{type:12,data:i},...ne(r[0].dims,l)],S=I=>`
      ${I.registerUniforms(v).declareVariables(m,p)}
        ${i$(m,p,n)}
        ${I.mainStart()}
          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",m.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${u.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:w})}},n0=(r,e)=>{n$(r.inputs,e);let n=o$(r.inputs,e);r.compute(a$(r.inputs,n),{inputs:[0]})},o0=r=>{let e=r.starts,n=r.ends,t=r.axes;return ke({starts:e,ends:n,axes:t})}});var s$,u$,a0,s0,u0=z(()=>{"use strict";Se();ze();It();Be();s$=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},u$=(r,e)=>{let n=r.dims,t=V.size(n),o=64,i=e.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let s=n[i],a=t/s,u=at(s),l=s/u,d=(S,I)=>I===4?`max(max(${S}.x, ${S}.y), max(${S}.z, ${S}.w))`:I===2?`max(${S}.x, ${S}.y)`:I===3?`max(max(${S}.x, ${S}.y), ${S}.z)`:S,p=G("x",r.dataType,r.dims,u),m=J("result",r.dataType,r.dims,u),b=p.type.value,v=tt(r.dataType)==="f32"?`var threadMax = ${b}(-3.402823e+38f);`:`var threadMax = ${b}(-65504.0h);`,w=S=>`
      var<workgroup> rowMaxShared : ${b};
      var<workgroup> rowSumShared : ${b};
      var<workgroup> threadShared : array<${b}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${b} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${b}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${S.registerUniform("packedCols","i32").declareVariables(p,m)}
      ${S.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${v}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${b}(${d("threadShared[0]",u)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${b}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${b}(${Jt("threadShared[0]",u)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${u}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:a},programUniforms:[{type:6,data:l}]}),getShaderSource:w}},a0=(r,e)=>{s$(r.inputs),r.compute(u$(r.inputs[0],e))},s0=r=>ke({axis:r.axis})});var l$,d$,c$,f$,p$,l0,d0,c0=z(()=>{"use strict";Se();ze();It();Be();l$=r=>{if(!r||r.length<1)throw new Error("too few inputs")},d$=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),ke({numOutputs:t,axis:e.axis,splitSizes:n})},c$=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < ${ye("uniforms.size_in_split_axis","i",r)}) {
        return i;
    }
    }
    return ${r}u;
}`,f$=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (output_number == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (output_number == ${t}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},p$=(r,e)=>{let n=r[0].dims,t=V.size(n),o=r[0].dataType,i=V.normalizeAxis(e.axis,n.length),s=new Array(e.numOutputs),a=G("input",o,n.length),u=new Array(e.numOutputs),l=[],d=[],p=0,m=[{type:12,data:t}];for(let v=0;v<e.numOutputs;v++){p+=e.splitSizes[v],u[v]=p;let w=n.slice();w[e.axis]=e.splitSizes[v],d.push(w),s[v]=J(`output${v}`,o,w.length),l.push({dims:d[v],dataType:r[0].dataType})}m.push({type:12,data:u},...ne(n,...d));let b=v=>`
  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(a,...s)}
  ${c$(u.length)}
  ${f$(s)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${ye("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:b,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(t/64)},programUniforms:m})}},l0=(r,e)=>{l$(r.inputs);let n=r.inputs.length===1?e:d$(r.inputs,e);r.compute(p$(r.inputs,n),{inputs:[0]})},d0=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ke({axis:e,numOutputs:t,splitSizes:n})}});var f0,h$,m$,g$,p0,h0=z(()=>{"use strict";Se();ze();Be();f0=r=>Array.from(r.getBigInt64Array(),Number),h$=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(f0(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},m$=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},g$=r=>{let e=r[0].dims,n=f0(r[1]),t=m$(e,n),o=V.size(t),i=r[0].dataType,s=G("input",i,e.length),a=J("output",i,t.length),u=l=>`
      const inputShape = ${s.indices(...e)};
      ${l.registerUniform("output_size","u32").declareVariables(s,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${a.offsetToIndices("global_idx")};
      var input_indices: ${s.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${a.indicesGet("output_indices","i")}  % input_dim_i;

        ${s.indicesSet("input_indices","i","input_dim_value")}
      }
      ${a.setByOffset("global_idx",s.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...ne(r[0].dims,t)]}),getShaderSource:u}},p0=r=>{h$(r.inputs),r.compute(g$(r.inputs),{inputs:[0]})}});var b$,y$,m0,g0=z(()=>{"use strict";Se();ze();Be();b$=(r,e,n,t,o)=>{let i=J("output_data",o,n.length,4),s=G("a_data",e[1].dataType,e[1].dims.length,4),a=G("b_data",e[2].dataType,e[2].dims.length,4),u=G("c_data",e[0].dataType,e[0].dims.length,4),l,d=(p,m,b)=>`select(${m}, ${p}, ${b})`;if(!t)l=i.setByOffset("global_idx",d(s.getByOffset("global_idx"),a.getByOffset("global_idx"),u.getByOffset("global_idx")));else{let p=(m,b,v="")=>{let w=`a_data[index_a${b}][component_a${b}]`,S=`b_data[index_b${b}][component_b${b}]`,I=`bool(c_data[index_c${b}] & (0xffu << (component_c${b} * 8)))`;return`
            let output_indices${b} = ${i.offsetToIndices(`global_idx * 4u + ${b}u`)};
            let offset_a${b} = ${s.broadcastedIndicesToOffset(`output_indices${b}`,i)};
            let offset_b${b} = ${a.broadcastedIndicesToOffset(`output_indices${b}`,i)};
            let offset_c${b} = ${u.broadcastedIndicesToOffset(`output_indices${b}`,i)};
            let index_a${b} = offset_a${b} / 4u;
            let index_b${b} = offset_b${b} / 4u;
            let index_c${b} = offset_c${b} / 4u;
            let component_a${b} = offset_a${b} % 4u;
            let component_b${b} = offset_b${b} % 4u;
            let component_c${b} = offset_c${b} % 4u;
            ${m}[${b}] = ${v}(${d(w,S,I)});
          `};o===9?l=`
            var data = vec4<u32>(0);
            ${p("data",0,"u32")}
            ${p("data",1,"u32")}
            ${p("data",2,"u32")}
            ${p("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:l=`
            ${p("output_data[global_idx]",0)}
            ${p("output_data[global_idx]",1)}
            ${p("output_data[global_idx]",2)}
            ${p("output_data[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(u,s,a,i)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${l}
      }`},y$=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(V.areEqual(e,n)&&V.areEqual(n,t)),s=e,a=V.size(e);if(i){let l=zr.calcShape(zr.calcShape(e,n,!1),t,!1);if(!l)throw new Error("Can't perform where op on the given tensors");s=l,a=V.size(s)}let u=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:l=>b$(l,r,s,i,o),getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:u},...ne(t,e,n,s)]})}},m0=r=>{r.compute(y$(r.inputs))}});var b0,y0=z(()=>{"use strict";Cg();ju();Dg();Rg();vb();Cb();Db();Ju();jb();Xb();ty();oy();ay();ly();fy();my();by();vy();el();_y();Iy();Oy();Hy();jy();Ma();Zy();Qy();t0();i0();u0();c0();h0();lo();Ga();g0();b0=new Map([["Abs",[zg]],["Acos",[Ng]],["Acosh",[Mg]],["Add",[wb]],["ArgMax",[Eg,qu]],["ArgMin",[Og,qu]],["Asin",[Lg]],["Asinh",[Fg]],["Atan",[Ug]],["Atanh",[Vg]],["Attention",[Pg]],["AveragePool",[zy,Ry]],["BatchNormalization",[kg]],["BiasAdd",[Bg]],["BiasSplitGelu",[yb]],["Cast",[Wg,Gg]],["Ceil",[qg]],["Clip",[Hg]],["Concat",[Pb,kb]],["Conv",[nl,rl]],["ConvTranspose",[qb,Hb]],["Cos",[jg]],["Cosh",[Kg]],["CumSum",[Kb,Yb]],["Div",[xb]],["Einsum",[Qb,ey]],["Elu",[Yg,Ua]],["Equal",[_b]],["Erf",[Xg]],["Exp",[Zg]],["Expand",[ny]],["FastGelu",[iy]],["Floor",[Jg]],["FusedConv",[nl,rl]],["Gather",[uy,sy]],["GatherElements",[cy,dy]],["Gelu",[Qg]],["Gemm",[hy,py]],["GlobalAveragePool",[Ly,My]],["GlobalMaxPool",[Wy,Gy]],["Greater",[Ib]],["GreaterOrEqual",[Ob]],["HardSigmoid",[sb,ab]],["InstanceNormalization",[gy]],["LayerNormalization",[yy]],["LeakyRelu",[eb,Ua]],["Less",[Ab]],["LessOrEqual",[Eb]],["Log",[gb]],["MatMul",[Lb]],["MatMulNBits",[wy,xy]],["MaxPool",[Uy,Vy]],["Mul",[$b]],["MultiHeadAttention",[Sy,Ty]],["Neg",[rb]],["Not",[tb]],["Pad",[Ay]],["Pow",[Tb]],["Range",[qy]],["Reciprocal",[nb]],["ReduceMin",[_g]],["ReduceMean",[bg]],["ReduceMax",[xg]],["ReduceSum",[Tg]],["ReduceProd",[$g]],["ReduceL1",[yg]],["ReduceL2",[vg]],["ReduceLogSum",[Ig]],["ReduceLogSumExp",[wg]],["ReduceSumSquare",[Sg]],["Relu",[ob]],["Resize",[Yy,Xy]],["RotaryEmbedding",[Jy]],["Sigmoid",[ib]],["Sin",[ub]],["Sinh",[lb]],["Slice",[n0,o0]],["SkipLayerNormalization",[e0]],["Split",[l0,d0]],["Sqrt",[db]],["Softmax",[a0,s0]],["Sub",[Sb]],["Tan",[cb]],["Tanh",[pb]],["ThresholdedRelu",[mb,Ua]],["Tile",[p0]],["Transpose",[og,ig]],["Where",[m0]]])});var Qa,v0=z(()=>{"use strict";Pt();dn();Be();Qa=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i){jt(e.programInfo.name);let s=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let d of n)u.push({binding:u.length,resource:{buffer:d.buffer}});for(let d of t)u.push({binding:u.length,resource:{buffer:d.buffer}});i&&u.push({binding:u.length,resource:i});let l=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:o};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}a.setPipeline(e.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...o),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ut(e.programInfo.name)}dispose(){}build(e,n){jt(e.name);let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=rg(n,this.backend.device.limits),s=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${s}`,u=t.createShaderModule({code:a,label:e.name});it("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Ut(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let s=n*t*o,a=Math.ceil(Math.sqrt(s));if(a>i){if(a=Math.ceil(Math.cbrt(s)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var v$,w$,ll,es,w0=z(()=>{"use strict";Pt();Se();dn();Zm();tg();y0();v0();v$=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},w$=(r,e,n)=>{let t=r.name;return r.shaderCache?.hint&&(t+="["+r.shaderCache.hint+"]"),t+=":"+n+`:${v$(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,t},ll=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},es=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,n){this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("chromium-experimental-timestamp-query-inside-passes")?t.push("chromium-experimental-timestamp-query-inside-passes"):n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.adapterInfo=new ll(await n.requestAdapterInfo()),this.gpuDataManager=eg(this),this.programManager=new Qa(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ym(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:n,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),n={};this.queryType==="at-passes"&&(n.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(n)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;jt(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let n=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<n.length/2;o++){let i=t[o],s=i.kernelId,a=this.kernels.get(s),u=a.kernelType,l=a.kernelName,d=i.programName,p=i.inputTensorViews,m=i.outputTensorViews,b=n[o*2],v=n[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=b);let w=Number(b-this.queryTimeBase),S=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(w)||!Number.isSafeInteger(S))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:p.map(I=>({dims:I.dims,dataType:ln(I.dataType)})),outputsMetadata:m.map(I=>({dims:I.dims,dataType:ln(I.dataType)})),kernelId:s,kernelType:u,kernelName:l,programName:d,startTime:w,endTime:S});else{let I="";p.forEach((O,E)=>{I+=`input[${E}]: [${O.dims}] | ${ln(O.dataType)}, `});let _="";m.forEach((O,E)=>{_+=`output[${E}]: [${O.dims}] | ${ln(O.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${l}|${d}" ${I}${_}execution time: ${S-w} ns`)}Ro("GPU",`${d}::${b}::${v}`)}e.unmap(),this.pendingQueries.delete(e)}),Ut()}run(e,n,t,o,i){jt(e.name);let s=[];for(let _=0;_<n.length;++_){let O=n[_].data;if(O===0)continue;let E=this.gpuDataManager.get(O);if(!E)throw new Error(`no GPU data for input: ${O}`);s.push(E)}let{outputs:a,dispatchGroup:u,programUniforms:l}=e.getRunData(n),d=t.length===0?a.map((_,O)=>O):t;if(d.length!==a.length)throw new Error(`Output size ${d.length} must be equal to ${a.length}.`);let p=[],m=[];for(let _=0;_<a.length;++_){if(!Number.isInteger(d[_])||d[_]<-3||d[_]>=a.length)throw new Error(`Invalid output index: ${d[_]}`);if(d[_]===-3)continue;let O=d[_]===-1,E=d[_]===-2,D=O||E?i(a[_].dataType,a[_].dims):o(d[_],a[_].dataType,a[_].dims);if(p.push(D),D.data===0)continue;let U=this.gpuDataManager.get(D.data);if(!U)throw new Error(`no GPU data for output: ${D.data}`);if(O&&this.temporaryData.push(U),E){let H=this.kernelPersistentData.get(this.currentKernelId);H||(H=[],this.kernelPersistentData.set(this.currentKernelId,H)),H.push(U)}m.push(U)}if(s.length!==n.length||m.length!==p.length){if(m.length===0)return Ut(e.name),p;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let b;if(l){let _=0,O=[];l.forEach(H=>{let q=typeof H.data=="number"?[H.data]:H.data;if(q.length===0)return;let ue=H.type===10?2:4,ee,R;H.type===10?(R=q.length>4?16:q.length>2?8:q.length*ue,ee=q.length>4?16:ue*q.length):(R=q.length<=2?q.length*ue:16,ee=16),_=Math.ceil(_/R)*R,O.push(_);let de=H.type===10?8:4;_+=q.length>4?Math.ceil(q.length/de)*ee:q.length*ue});let E=16;_=Math.ceil(_/E)*E;let D=new ArrayBuffer(_);l.forEach((H,q)=>{let ue=O[q],ee=typeof H.data=="number"?[H.data]:H.data;if(H.type===6)new Int32Array(D,ue,ee.length).set(ee);else if(H.type===12)new Uint32Array(D,ue,ee.length).set(ee);else if(H.type===10)new Uint16Array(D,ue,ee.length).set(ee);else if(H.type===1)new Float32Array(D,ue,ee.length).set(ee);else throw new Error(`Unsupported uniform type: ${ln(H.type)}`)});let U=this.gpuDataManager.create(_,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(U.buffer,0,D,0,_),this.gpuDataManager.release(U.id),b={offset:0,size:_,buffer:U.buffer}}let v=this.programManager.normalizeDispatchGroupSize(u),w=v[1]===1&&v[2]===1,S=w$(e,n,w),I=this.programManager.getArtifact(S);if(I||(I=this.programManager.build(e,v),this.programManager.setArtifact(S,I),it("info",()=>`[artifact] key: ${S}, programName: ${e.name}`)),l&&I.uniformVariablesInfo){if(l.length!==I.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${I.uniformVariablesInfo.length}, got ${l.length} in program "${I.programInfo.name}".`);for(let _=0;_<l.length;_++){let O=l[_],E=O.type,D=typeof O.data=="number"?1:O.data.length,[U,H]=I.uniformVariablesInfo[_];if(E!==U||D!==H)throw new Error(`Uniform variable ${_} mismatch: expect type ${U} with size ${H}, got type ${E} with size ${D} in program "${I.programInfo.name}".`)}}if(it("info",()=>`[ProgramManager] run "${e.name}" (key=${S}) with ${v[0]}x${v[1]}x${v[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let _={kernelId:this.currentKernelId,programName:I.programInfo.name,inputTensorViews:n,outputTensorViews:p};this.pendingKernels.push(_),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(_)}return this.programManager.run(I,s,m,v,b),Ut(e.name),p}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=b0.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:o,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(n,s)}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let i=o.kernelType,s=o.kernelName,a=o.kernelEntry,u=o.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),it("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,u[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${i}] ${s}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,s?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await Lu(this,e,n);return Xm(o.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){it("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){it("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){it("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),n=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let o=0;o<t;o++){let i=this.getComputePassEncoder(),s=e[o];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(s.computePipeline),i.setBindGroup(0,s.bindGroup),i.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(n[o]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}});var x0={};tn(x0,{init:()=>x$});var oi,dl,x$,_0=z(()=>{"use strict";Se();w0();dn();ze();oi=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=V.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=V.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=V.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(V.size(e)!==V.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},dl=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=n.adapterInfo;let o=e.HEAPU32,i=t>>>2;this.opKernelContext=o[i++];let s=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let u=0;u<s;u++){let l=o[i++],d=o[i++],p=o[i++],m=[];for(let b=0;b<p;b++)m.push(o[i++]);a.push(new oi(e,l,d,m))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,u,l)=>new oi(this.module,u,this.output(a,l),l),s=(a,u)=>{let l=Jo(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let d=l*V.size(u),p=d>0?this.backend.gpuDataManager.create(d).id:0;return new oi(this.module,a,p,u)};return this.backend.run(e,t,o,i,s)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let s=0;s<n.length;s++)this.module.HEAPU32[i++]=n[s];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},x$=async(r,e,n,t)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(r==="webgpu"){let i=new es;await i.initialize(n,t),o("webgpu",[i,s=>i.alloc(s),s=>i.free(s),(s,a,u,l=!1)=>{if(l)it("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${s}, dst=${a}, size=${u}`),i.memcpy(s,a);else{it("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${s}, gpuDataId=${a}, size=${u}`);let d=e.HEAPU8.subarray(s>>>0,(s>>>0)+u);i.upload(a,d)}},async(s,a,u)=>{it("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${a}, size=${u}`),await i.download(s,()=>e.HEAPU8.subarray(a>>>0,(a>>>0)+u))},(s,a,u)=>i.createKernel(s,a,u,e.UTF8ToString(e._JsepGetNodeName(a))),s=>i.releaseKernel(s),(s,a,u,l)=>{it("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${s}, contextDataOffset=${a}`);let d=new dl(e,i,a);return i.computeKernel(s,d,l)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay()])}else o("webnn")}});var _$,T0,S0,zn,$$,cl,I0,A0,$0,O0,E0,C0,P0=z(()=>{"use strict";Wm();qm();Se();so();Ea();Nu();_$=(r,e)=>{pt()._OrtInit(r,e)!==0&&ot("Can't initialize onnxruntime.")},T0=async r=>{_$(r.wasm.numThreads,Qo(r.logLevel))},S0=async(r,e)=>{{let n=(_0(),qr(x0)).init;if(e==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=r.webgpu.adapter;if(t){if(typeof t.limits!="object"||typeof t.features!="object"||typeof t.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let o=r.webgpu.powerPreference;if(o!==void 0&&o!=="low-power"&&o!=="high-performance")throw new Error(`Invalid powerPreference setting: "${o}"`);let i=r.webgpu.forceFallbackAdapter;if(i!==void 0&&typeof i!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${i}"`);if(t=await navigator.gpu.requestAdapter({powerPreference:o,forceFallbackAdapter:i}),!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}if(!r.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await n("webgpu",pt(),r,t)}if(e==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await n("webnn",pt(),r)}}},zn=new Map,$$=r=>{let e=pt(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&ot("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},cl=r=>{let e=pt(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},I0=async(r,e)=>{let n,t,o=pt();Array.isArray(r)?[n,t]=r:r.buffer===o.HEAPU8.buffer?[n,t]=[r.byteOffset,r.byteLength]:[n,t]=cl(r);let i=0,s=0,a=0,u=[],l=[],d=[];try{if([s,u]=Hm(e),e?.externalData&&o.mountExternalData){let _=[];for(let O of e.externalData){let E=typeof O=="string"?O:O.path;_.push(ei(typeof O=="string"?O:O.data).then(D=>{o.mountExternalData(E,D)}))}await Promise.all(_)}i=await o._OrtCreateSession(n,t,s),i===0&&ot("Can't create a session.");let[p,m]=$$(i),b=!!e?.enableGraphCapture,v=[],w=[],S=[];for(let _=0;_<p;_++){let O=o._OrtGetInputName(i,_);O===0&&ot("Can't get an input name."),l.push(O),v.push(o.UTF8ToString(O))}for(let _=0;_<m;_++){let O=o._OrtGetOutputName(i,_);O===0&&ot("Can't get an output name."),d.push(O);let E=o.UTF8ToString(O);w.push(E);{if(b&&e?.preferredOutputLocation===void 0){S.push("gpu-buffer");continue}let D=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[E]??"cpu";if(D!=="cpu"&&D!=="cpu-pinned"&&D!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${D}.`);if(b&&D!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${D}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);S.push(D)}}let I=null;return S.some(_=>_==="gpu-buffer")&&(a=o._OrtCreateBinding(i),a===0&&ot("Can't create IO binding."),I={handle:a,outputPreferredLocations:S,outputPreferredLocationsEncoded:S.map(_=>zu(_))}),zn.set(i,[i,l,d,I,b,!1]),[i,v,w]}catch(p){throw l.forEach(m=>o._OrtFree(m)),d.forEach(m=>o._OrtFree(m)),a!==0&&o._OrtReleaseBinding(a),i!==0&&o._OrtReleaseSession(i),p}finally{o._free(n),s!==0&&o._OrtReleaseSessionOptions(s),u.forEach(p=>o._free(p)),o.unmountExternalData?.()}},A0=r=>{let e=pt(),n=zn.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,s,a]=n;s&&(a&&e._OrtClearBoundOutputs(s.handle),e._OrtReleaseBinding(s.handle)),e.jsepOnReleaseSession?.(r),o.forEach(u=>e._OrtFree(u)),i.forEach(u=>e._OrtFree(u)),e._OrtReleaseSession(t),zn.delete(r)},$0=(r,e,n,t,o,i=!1)=>{if(!r){e.push(0);return}let s=pt(),a=r[0],u=r[1],l=r[3],d,p;if(a==="string"&&l==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(i&&l!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${o} when enableGraphCapture is true.`);if(l==="gpu-buffer"){let v=r[2].gpuBuffer,w=Jo(Ru(a));p=u.reduce((I,_)=>I*_,1)*w;let S=s.jsepRegisterBuffer;if(!S)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');d=S(t,o,v,p)}else{let v=r[2];if(Array.isArray(v)){p=4*v.length,d=s._malloc(p),n.push(d);let w=d/4;for(let S=0;S<v.length;S++){if(typeof v[S]!="string")throw new TypeError(`tensor data at index ${S} is not a string`);s.HEAPU32[w++]=ht(v[S],n)}}else p=v.byteLength,d=s._malloc(p),n.push(d),s.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,p),d)}let m=s.stackSave(),b=s.stackAlloc(4*u.length);try{let v=b/4;u.forEach(S=>s.HEAP32[v++]=S);let w=s._OrtCreateTensor(Ru(a),d,p,b,u.length,zu(l));w===0&&ot(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(w)}finally{s.stackRestore(m)}},O0=async(r,e,n,t,o,i)=>{let s=pt(),a=zn.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let u=a[0],l=a[1],d=a[2],p=a[3],m=a[4],b=a[5],v=e.length,w=t.length,S=0,I=[],_=[],O=[],E=[],D=s.stackSave(),U=s.stackAlloc(v*4),H=s.stackAlloc(v*4),q=s.stackAlloc(w*4),ue=s.stackAlloc(w*4);try{[S,I]=Gm(i);for(let se=0;se<v;se++)$0(n[se],_,E,r,e[se],m);for(let se=0;se<w;se++)$0(o[se],O,E,r,v+t[se],m);let ee=U/4,R=H/4,de=q/4,et=ue/4;for(let se=0;se<v;se++)s.HEAPU32[ee++]=_[se],s.HEAPU32[R++]=l[e[se]];for(let se=0;se<w;se++)s.HEAPU32[de++]=O[se],s.HEAPU32[et++]=d[t[se]];if(p&&!b){let{handle:se,outputPreferredLocations:rt,outputPreferredLocationsEncoded:Ee}=p;if(l.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model's input count (${l.length}).`);for(let Ie=0;Ie<v;Ie++){let ve=e[Ie];await s._OrtBindInput(se,l[ve],_[Ie])!==0&&ot(`Can't bind input[${Ie}] for session=${r}.`)}for(let Ie=0;Ie<w;Ie++){let ve=t[Ie];o[Ie]?.[3]?s._OrtBindOutput(se,d[ve],O[Ie],0)!==0&&ot(`Can't bind pre-allocated output[${Ie}] for session=${r}.`):s._OrtBindOutput(se,d[ve],0,Ee[ve])!==0&&ot(`Can't bind output[${Ie}] to ${rt[Ie]} for session=${r}.`)}zn.set(r,[u,l,d,p,m,!0])}s.jsepOnRunStart?.(u);let qe;p?qe=await s._OrtRunWithBinding(u,p.handle,w,q,S):qe=await s._OrtRun(u,H,U,v,ue,w,q,S),qe!==0&&ot("failed to call OrtRun().");let Fe=[];for(let se=0;se<w;se++){let rt=s.HEAPU32[q/4+se];if(rt===O[se]){Fe.push(o[se]);continue}let Ee=s.stackSave(),Ie=s.stackAlloc(4*4),ve=!1,Ae,je=0;try{s._OrtGetTensorData(rt,Ie,Ie+4,Ie+8,Ie+12)!==0&&ot(`Can't access output tensor data on index ${se}.`);let Y=Ie/4,me=s.HEAPU32[Y++];je=s.HEAPU32[Y++];let Ne=s.HEAPU32[Y++],ft=s.HEAPU32[Y++],At=[];for(let wt=0;wt<ft;wt++)At.push(s.HEAPU32[Ne/4+wt]);s._OrtFree(Ne);let Qt=At.reduce((wt,xt)=>wt*xt,1);Ae=ln(me);let Rt=p?.outputPreferredLocations[t[se]];if(Ae==="string"){if(Rt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let wt=[],xt=je/4;for(let er=0;er<Qt;er++){let Zr=s.HEAPU32[xt++],Ar=er===Qt-1?void 0:s.HEAPU32[xt]-Zr;wt.push(s.UTF8ToString(Zr,Ar))}Fe.push([Ae,At,wt,"cpu"])}else if(Rt==="gpu-buffer"&&Qt>0){let wt=s.jsepGetBuffer;if(!wt)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let xt=wt(je),er=Jo(me);if(er===void 0||!Pa(Ae))throw new Error(`Unsupported data type: ${Ae}`);ve=!0,Fe.push([Ae,At,{gpuBuffer:xt,download:s.jsepCreateDownloader(xt,Qt*er,Ae),dispose:()=>{s._OrtReleaseTensor(rt)}},"gpu-buffer"])}else{let wt=Ca(Ae),xt=new wt(Qt);new Uint8Array(xt.buffer,xt.byteOffset,xt.byteLength).set(s.HEAPU8.subarray(je,je+xt.byteLength)),Fe.push([Ae,At,xt,"cpu"])}}finally{s.stackRestore(Ee),Ae==="string"&&je&&s._free(je),ve||s._OrtReleaseTensor(rt)}}return p&&!m&&(s._OrtClearBoundOutputs(p.handle),zn.set(r,[u,l,d,p,m,!1])),Fe}finally{s.stackRestore(D),_.forEach(ee=>s._OrtReleaseTensor(ee)),O.forEach(ee=>s._OrtReleaseTensor(ee)),E.forEach(ee=>s._free(ee)),S!==0&&s._OrtReleaseRunOptions(S),I.forEach(ee=>s._free(ee))}},E0=r=>{let e=pt(),n=zn.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&ot("Can't get an profile file name."),e._OrtFree(o)},C0=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var k0=st((MM,S$)=>{S$.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var ao=Object.defineProperty;var Ql=Object.getOwnPropertyDescriptor;var ed=Object.getOwnPropertyNames;var td=Object.prototype.hasOwnProperty;var K=(e,t)=>()=>(e&&(t=e(e=0)),t);var Vr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),wn=(e,t)=>{for(var r in t)ao(e,r,{get:t[r],enumerable:!0})},rd=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ed(t))!td.call(e,i)&&i!==r&&ao(e,i,{get:()=>t[i],enumerable:!(o=Ql(t,i))||o.enumerable});return e};var mr=e=>rd(ao({},"__esModule",{value:!0}),e);var so={};wn(so,{createReadStream:()=>Ci,readFile:()=>nd,readFileSync:()=>od});var nd,od,Ci,uo=K(()=>{nd=void 0,od=void 0,Ci=void 0});var lo={};wn(lo,{join:()=>id});var id,co=K(()=>{id=void 0});var Ti=Vr((Ii,po)=>{"use strict";var Ai=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,i;r.ready=new Promise((s,m)=>{o=s,i=m}),r.mountExternalData=(s,m)=>{(r.gb||(r.gb=new Map)).set(s,m)},r.unmountExternalData=()=>{delete r.gb};let u=()=>{let s=(g,v,I)=>(...B)=>{let H=tt,q=v?.();B=g(...B);let Q=v?.();return q!==Q&&(g=Q,I(q),v=I=null),tt!=H?en():B},m=g=>async(...v)=>{try{if(r.fb)throw Error("Session already started");let I=r.fb={Eb:v[0],errors:[]},B=await g(...v);if(r.fb!==I)throw Error("Session mismatch");r.ob?.flush();let H=I.errors;if(0<H.length){let q=await Promise.all(H);if(q=q.filter(Q=>Q),0<q.length)throw Error(q.join(`\n`))}return B}finally{r.fb=null}};r._OrtCreateSession=s(r._OrtCreateSession,()=>r._OrtCreateSession,g=>r._OrtCreateSession=g),r._OrtRun=m(s(r._OrtRun,()=>r._OrtRun,g=>r._OrtRun=g)),r._OrtRunWithBinding=m(s(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,g=>r._OrtRunWithBinding=g)),r._OrtBindInput=s(r._OrtBindInput,()=>r._OrtBindInput,g=>r._OrtBindInput=g),u=void 0};r.jsepInit=(s,m)=>{if(u?.(),s==="webgpu"){[r.ob,r.wb,r.Ab,r.pb,r.zb,r.Sa,r.Bb,r.Db,r.xb,r.yb,r.Cb]=m;let g=r.ob;r.jsepRegisterBuffer=(v,I,B,H)=>g.registerBuffer(v,I,B,H),r.jsepGetBuffer=v=>g.getBuffer(v),r.jsepCreateDownloader=(v,I,B)=>g.createDownloader(v,I,B),r.jsepOnReleaseSession=v=>{g.onReleaseSession(v)},r.jsepOnRunStart=v=>g.onRunStart(v)}};var a=Object.assign({},r),c="./this.program",p=(s,m)=>{throw m},h=typeof window=="object",l=typeof importScripts=="function",y=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",w="",_,$,S;if(y){var E=(uo(),mr(so)),A=(co(),mr(lo));w=l?A.dirname(w)+"/":__dirname+"/",_=(s,m)=>(s=xe(s)?new URL(s):A.normalize(s),E.readFileSync(s,m?void 0:"utf8")),S=s=>(s=_(s,!0),s.buffer||(s=new Uint8Array(s)),s),$=(s,m,g,v=!0)=>{s=xe(s)?new URL(s):A.normalize(s),E.readFile(s,v?void 0:"utf8",(I,B)=>{I?g(I):m(v?B.buffer:B)})},!r.thisProgram&&1<process.argv.length&&(c=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),p=(s,m)=>{throw process.exitCode=s,m},r.inspect=()=>"[Emscripten Module object]"}else(h||l)&&(l?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),e&&(w=e),w.indexOf("blob:")!==0?w=w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):w="",_=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.send(null),m.responseText},l&&(S=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),$=(s,m,g)=>{var v=new XMLHttpRequest;v.open("GET",s,!0),v.responseType="arraybuffer",v.onload=()=>{v.status==200||v.status==0&&v.response?m(v.response):g()},v.onerror=g,v.send(null)});var x=console.log.bind(console),P=console.error.bind(console);Object.assign(r,a),a=null,typeof WebAssembly!="object"&&F("no native wasm support detected");var T,k=!1,W,N,G,oe,X,U,re,Be,Ee,Ae,te;function Me(){var s=T.buffer;r.HEAP8=N=new Int8Array(s),r.HEAP16=oe=new Int16Array(s),r.HEAPU8=G=new Uint8Array(s),r.HEAPU16=X=new Uint16Array(s),r.HEAP32=U=new Int32Array(s),r.HEAPU32=re=new Uint32Array(s),r.HEAPF32=Be=new Float32Array(s),r.HEAPF64=te=new Float64Array(s),r.HEAP64=Ee=new BigInt64Array(s),r.HEAPU64=Ae=new BigUint64Array(s)}var ye=[],he=[],ue=[],ge=0,Pe=null,Le=null;function F(s){throw s="Aborted("+s+")",P(s),k=!0,W=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var ie=s=>s.startsWith("data:application/octet-stream;base64,"),xe=s=>s.startsWith("file://"),Ne;if(Ne="ort-wasm-simd.wasm",!ie(Ne)){var Ye=Ne;Ne=r.locateFile?r.locateFile(Ye,w):w+Ye}function dt(s){if(S)return S(s);throw"both async and sync fetching of the wasm failed"}function et(s){if(h||l){if(typeof fetch=="function"&&!xe(s))return fetch(s,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at \'"+s+"\'";return m.arrayBuffer()}).catch(()=>dt(s));if($)return new Promise((m,g)=>{$(s,v=>m(new Uint8Array(v)),g)})}return Promise.resolve().then(()=>dt(s))}function Fe(s,m,g){return et(s).then(v=>WebAssembly.instantiate(v,m)).then(v=>v).then(g,v=>{P(`failed to asynchronously prepare wasm: ${v}`),F(v)})}function qe(s,m){var g=Ne;return typeof WebAssembly.instantiateStreaming!="function"||ie(g)||xe(g)||y||typeof fetch!="function"?Fe(g,s,m):fetch(g,{credentials:"same-origin"}).then(v=>WebAssembly.instantiateStreaming(v,s).then(m,function(I){return P(`wasm streaming compile failed: ${I}`),P("falling back to ArrayBuffer instantiation"),Fe(g,s,m)}))}var ct={768496:(s,m,g,v)=>{if(typeof r>"u"||!r.gb)return 1;if(s=je(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.gb.get(s),!s)return 2;if(m>>>=0,g>>>=0,m+g>s.byteLength)return 3;try{return G.set(s.subarray(m,m+g),v>>>0>>>0),0}catch{return 4}},768997:()=>{r.xb()},769028:()=>{r.yb()},769057:()=>{r.Cb()},769082:s=>r.wb(s),769115:s=>r.Ab(s),769147:(s,m,g)=>{r.pb(s,m,g,!0)},769186:(s,m,g)=>{r.pb(s,m,g)},769219:s=>{r.Sa("Abs",s,void 0)},769270:s=>{r.Sa("Neg",s,void 0)},769321:s=>{r.Sa("Floor",s,void 0)},769374:s=>{r.Sa("Ceil",s,void 0)},769426:s=>{r.Sa("Reciprocal",s,void 0)},769484:s=>{r.Sa("Sqrt",s,void 0)},769536:s=>{r.Sa("Exp",s,void 0)},769587:s=>{r.Sa("Erf",s,void 0)},769638:s=>{r.Sa("Sigmoid",s,void 0)},769693:(s,m,g)=>{r.Sa("HardSigmoid",s,{alpha:m,beta:g})},769772:s=>{r.Sa("Log",s,void 0)},769823:s=>{r.Sa("Sin",s,void 0)},769874:s=>{r.Sa("Cos",s,void 0)},769925:s=>{r.Sa("Tan",s,void 0)},769976:s=>{r.Sa("Asin",s,void 0)},770028:s=>{r.Sa("Acos",s,void 0)},770080:s=>{r.Sa("Atan",s,void 0)},770132:s=>{r.Sa("Sinh",s,void 0)},770184:s=>{r.Sa("Cosh",s,void 0)},770236:s=>{r.Sa("Asinh",s,void 0)},770289:s=>{r.Sa("Acosh",s,void 0)},770342:s=>{r.Sa("Atanh",s,void 0)},770395:s=>{r.Sa("Tanh",s,void 0)},770447:s=>{r.Sa("Not",s,void 0)},770498:(s,m,g)=>{r.Sa("Clip",s,{min:m,max:g})},770567:s=>{r.Sa("Clip",s,void 0)},770619:(s,m)=>{r.Sa("Elu",s,{alpha:m})},770677:s=>{r.Sa("Relu",s,void 0)},770729:(s,m)=>{r.Sa("LeakyRelu",s,{alpha:m})},770793:(s,m)=>{r.Sa("ThresholdedRelu",s,{alpha:m})},770863:(s,m)=>{r.Sa("Cast",s,{to:m})},770921:s=>{r.Sa("Add",s,void 0)},770972:s=>{r.Sa("Sub",s,void 0)},771023:s=>{r.Sa("Mul",s,void 0)},771074:s=>{r.Sa("Div",s,void 0)},771125:s=>{r.Sa("Pow",s,void 0)},771176:s=>{r.Sa("Equal",s,void 0)},771229:s=>{r.Sa("Greater",s,void 0)},771284:s=>{r.Sa("GreaterOrEqual",s,void 0)},771346:s=>{r.Sa("Less",s,void 0)},771398:s=>{r.Sa("LessOrEqual",s,void 0)},771457:(s,m,g,v,I)=>{r.Sa("ReduceMean",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},771616:(s,m,g,v,I)=>{r.Sa("ReduceMax",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},771774:(s,m,g,v,I)=>{r.Sa("ReduceMin",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},771932:(s,m,g,v,I)=>{r.Sa("ReduceProd",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},772091:(s,m,g,v,I)=>{r.Sa("ReduceSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},772249:(s,m,g,v,I)=>{r.Sa("ReduceL1",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},772406:(s,m,g,v,I)=>{r.Sa("ReduceL2",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},772563:(s,m,g,v,I)=>{r.Sa("ReduceLogSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},772724:(s,m,g,v,I)=>{r.Sa("ReduceSumSquare",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},772888:(s,m,g,v,I)=>{r.Sa("ReduceLogSumExp",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},773052:s=>{r.Sa("Where",s,void 0)},773105:(s,m,g)=>{r.Sa("Transpose",s,{perm:m?Array.from(U.subarray(m>>>0,g>>>0)):[]})},773213:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te,R,ce)=>{r.Sa("ConvTranspose",s,{format:Q?"NHWC":"NCHW",autoPad:m,dilations:[g],group:v,kernelShape:[I],pads:[B,H],strides:[q],wIsConst:()=>!!N[Y>>>0],outputPadding:de?Array.from(U.subarray(de>>>0,be>>>0)):[],outputShape:Te?Array.from(U.subarray(Te>>>0,R>>>0)):[],activation:je(ce)})},773614:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te,R)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(U.subarray(g>>>0,(g>>>0)+2>>>0)),group:v,kernelShape:Array.from(U.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(U.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(U.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[Q>>>0],outputPadding:Y?Array.from(U.subarray(Y>>>0,de>>>0)):[],outputShape:be?Array.from(U.subarray(be>>>0,Te>>>0)):[],activation:je(R)})},774179:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te,R,ce)=>{r.Sa("ConvTranspose",s,{format:Q?"NHWC":"NCHW",autoPad:m,dilations:[g],group:v,kernelShape:[I],pads:[B,H],strides:[q],wIsConst:()=>!!N[Y>>>0],outputPadding:de?Array.from(U.subarray(de>>>0,be>>>0)):[],outputShape:Te?Array.from(U.subarray(Te>>>0,R>>>0)):[],activation:je(ce)})},774580:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te,R)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(U.subarray(g>>>0,(g>>>0)+2>>>0)),group:v,kernelShape:Array.from(U.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(U.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(U.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[Q>>>0],outputPadding:Y?Array.from(U.subarray(Y>>>0,de>>>0)):[],outputShape:be?Array.from(U.subarray(be>>>0,Te>>>0)):[],activation:je(R)})},775145:(s,m)=>{r.Sa("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},775236:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te,R,ce,Ie)=>{r.Sa("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:v,storage_order:I,dilations:[B,H],kernel_shape:[q,Q],pads:[Y,de,be,Te],strides:[R,ce]})},775520:(s,m)=>{r.Sa("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},775611:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te,R,ce,Ie)=>{r.Sa("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:v,storage_order:I,dilations:[B,H],kernel_shape:[q,Q],pads:[Y,de,be,Te],strides:[R,ce]})},775895:(s,m)=>{r.Sa("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},775982:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te,R,ce,Ie)=>{r.Sa("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:v,storage_order:I,dilations:[B,H],kernel_shape:[q,Q],pads:[Y,de,be,Te],strides:[R,ce]})},776262:(s,m)=>{r.Sa("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},776349:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te,R,ce,Ie)=>{r.Sa("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:v,storage_order:I,dilations:[B,H],kernel_shape:[q,Q],pads:[Y,de,be,Te],strides:[R,ce]})},776629:(s,m,g,v,I)=>{r.Sa("Gemm",s,{alpha:m,beta:g,transA:v,transB:I})},776733:s=>{r.Sa("MatMul",s,void 0)},776787:(s,m,g,v)=>{r.Sa("ArgMax",s,{keepDims:!!m,selectLastIndex:!!g,axis:v})},776895:(s,m,g,v)=>{r.Sa("ArgMin",s,{keepDims:!!m,selectLastIndex:!!g,axis:v})},777003:(s,m)=>{r.Sa("Softmax",s,{axis:m})},777066:(s,m)=>{r.Sa("Concat",s,{axis:m})},777126:(s,m,g,v,I)=>{r.Sa("Split",s,{axis:m,numOutputs:g,splitSizes:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},777266:s=>{r.Sa("Expand",s,void 0)},777320:(s,m)=>{r.Sa("Gather",s,{axis:Number(m)})},777391:(s,m)=>{r.Sa("GatherElements",s,{axis:Number(m)})},777470:(s,m,g,v,I,B,H,q,Q,Y,de)=>{r.Sa("Resize",s,{antialias:m,axes:g?Array.from(U.subarray(g>>>0,v>>>0)):[],coordinateTransformMode:je(I),cubicCoeffA:B,excludeOutside:H,extrapolationValue:q,keepAspectRatioPolicy:je(Q),mode:je(Y),nearestMode:je(de)})},777816:(s,m,g,v,I,B,H)=>{r.Sa("Slice",s,{starts:m?Array.from(U.subarray(m>>>0,g>>>0)):[],ends:v?Array.from(U.subarray(v>>>0,I>>>0)):[],axes:B?Array.from(U.subarray(B>>>0,H>>>0)):[]})},778032:s=>{r.Sa("Tile",s,void 0)},778084:(s,m,g)=>{r.Sa("LayerNormalization",s,{axis:Number(m),epsilon:Number(g)})},778191:(s,m,g)=>{r.Sa("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},778305:(s,m,g)=>{r.Sa("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},778419:s=>{r.Sa("Range",s,void 0)},778472:(s,m)=>{r.Sa("Einsum",s,{equation:je(m)})},778553:(s,m,g,v,I)=>{r.Sa("Pad",s,{mode:m,value:g,pads:v?Array.from(U.subarray(v>>>0,I>>>0)):[]})},778680:(s,m,g,v,I,B)=>{r.Sa("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!I,trainingMode:!!v,format:B?"NHWC":"NCHW"})},778849:(s,m,g,v,I,B)=>{r.Sa("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!I,trainingMode:!!v,format:B?"NHWC":"NCHW"})},779018:(s,m,g)=>{r.Sa("CumSum",s,{exclusive:Number(m),reverse:Number(g)})},779115:(s,m,g,v,I,B,H,q,Q)=>{r.Sa("Attention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:v,scale:I,doRotary:B,qkvHiddenSizes:H?Array.from(U.subarray(Number(q)>>>0,Number(q)+H>>>0)):[],pastPresentShareBuffer:!!Q})},779387:s=>{r.Sa("BiasAdd",s,void 0)},779442:s=>{r.Sa("BiasSplitGelu",s,void 0)},779503:s=>{r.Sa("FastGelu",s,void 0)},779559:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te)=>{r.Sa("Conv",s,{format:Q?"NHWC":"NCHW",auto_pad:m,dilations:[g],group:v,kernel_shape:[I],pads:B?Array.from(U.subarray(B>>>0,H>>>0)):[],strides:[q],w_is_const:()=>!!N[Y>>>0],activation:je(de),activation_params:be?Array.from(Be.subarray(be>>>0,Te>>>0)):[]})},779929:(s,m,g,v,I,B,H,q,Q,Y,de,be,Te,R,ce,Ie)=>{r.Sa("Conv",s,{format:be?"NHWC":"NCHW",auto_pad:m,dilations:[g,v],group:I,kernel_shape:[B,H],pads:q?Array.from(U.subarray(q>>>0,Q>>>0)):[],strides:[Y,de],w_is_const:()=>!!N[Te>>>0],activation:je(R),activation_params:ce?Array.from(Be.subarray(ce>>>0,Ie>>>0)):[]})},780320:s=>{r.Sa("Gelu",s,void 0)},780372:(s,m,g,v,I,B)=>{r.Sa("MatMulNBits",s,{k:m,n:g,accuracyLevel:v,bits:I,blockSize:B})},780499:(s,m,g,v,I,B)=>{r.Sa("MultiHeadAttention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:v,scale:I,doRotary:B})},780658:(s,m,g,v,I)=>{r.Sa("RotaryEmbedding",s,{interleaved:!!m,numHeads:g,rotaryEmbeddingDim:v,scale:I})},780797:(s,m)=>{r.Sa("SkipLayerNormalization",s,{epsilon:m})},780878:s=>{r.Bb(s)},780912:(s,m)=>r.Db(s,m,r.fb.Eb,r.fb.errors)};function zt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}function xt(s){this.cb=s-24,this.sb=function(m){re[this.cb+4>>>2>>>0]=m},this.rb=function(m){re[this.cb+8>>>2>>>0]=m},this.kb=function(m,g){this.jb(),this.sb(m),this.rb(g)},this.jb=function(){re[this.cb+16>>>2>>>0]=0}}var nr=0,Ft=0,br=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Ut=(s,m,g)=>{m>>>=0;var v=m+g;for(g=m;s[g]&&!(g>=v);)++g;if(16<g-m&&s.buffer&&br)return br.decode(s.subarray(m,g));for(v="";m<g;){var I=s[m++];if(I&128){var B=s[m++]&63;if((I&224)==192)v+=String.fromCharCode((I&31)<<6|B);else{var H=s[m++]&63;I=(I&240)==224?(I&15)<<12|B<<6|H:(I&7)<<18|B<<12|H<<6|s[m++]&63,65536>I?v+=String.fromCharCode(I):(I-=65536,v+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else v+=String.fromCharCode(I)}return v},je=(s,m)=>(s>>>=0)?Ut(G,s,m):"",Rt=s=>{for(var m=0,g=0;g<s.length;++g){var v=s.charCodeAt(g);127>=v?m++:2047>=v?m+=2:55296<=v&&57343>=v?(m+=4,++g):m+=3}return m},Ct=(s,m,g,v)=>{if(g>>>=0,!(0<v))return 0;var I=g;v=g+v-1;for(var B=0;B<s.length;++B){var H=s.charCodeAt(B);if(55296<=H&&57343>=H){var q=s.charCodeAt(++B);H=65536+((H&1023)<<10)|q&1023}if(127>=H){if(g>=v)break;m[g++>>>0]=H}else{if(2047>=H){if(g+1>=v)break;m[g++>>>0]=192|H>>6}else{if(65535>=H){if(g+2>=v)break;m[g++>>>0]=224|H>>12}else{if(g+3>=v)break;m[g++>>>0]=240|H>>18,m[g++>>>0]=128|H>>12&63}m[g++>>>0]=128|H>>6&63}m[g++>>>0]=128|H&63}}return m[g>>>0]=0,g-I},wr=s=>{if(s===null)return"null";var m=typeof s;return m==="object"||m==="array"||m==="function"?s.toString():""+s},jr,it=s=>{for(var m="";G[s>>>0];)m+=jr[G[s++>>>0]];return m},vr={},qt={},$r={},ht;function Kr(s,m,g={}){var v=m.name;if(!s)throw new ht(`type "${v}" must have a positive integer typeid pointer`);if(qt.hasOwnProperty(s)){if(g.ub)return;throw new ht(`Cannot register type \'${v}\' twice`)}qt[s]=m,delete $r[s],vr.hasOwnProperty(s)&&(m=vr[s],delete vr[s],m.forEach(I=>I()))}function Ze(s,m,g={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");Kr(s,m,g)}var _r=(s,m,g)=>{switch(m){case 1:return g?v=>N[v>>>0>>>0]:v=>G[v>>>0>>>0];case 2:return g?v=>oe[v>>>1>>>0]:v=>X[v>>>1>>>0];case 4:return g?v=>U[v>>>2>>>0]:v=>re[v>>>2>>>0];case 8:return g?v=>Ee[v>>>3]:v=>Ae[v>>>3];default:throw new TypeError(`invalid integer width (${m}): ${s}`)}};function Sr(){this.$a=[void 0],this.nb=[]}var ze=new Sr;function xr(s){s>>>=0,s>=ze.cb&&--ze.get(s).qb===0&&ze.jb(s)}var _e=s=>{if(!s)throw new ht("Cannot use deleted val. handle = "+s);return ze.get(s).value},at=s=>{switch(s){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return ze.kb({qb:1,value:s})}};function or(s){return this.fromWireType(U[s>>>2>>>0])}var Cr=(s,m)=>{switch(m){case 4:return function(g){return this.fromWireType(Be[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(te[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${s}`)}};function Kn(s){return this.fromWireType(re[s>>>2>>>0])}var Ar=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Yn=(s,m)=>{for(var g=s>>1,v=g+m/2;!(g>=v)&&X[g>>>0];)++g;if(g<<=1,32<g-s&&Ar)return Ar.decode(G.subarray(s>>>0,g>>>0));for(g="",v=0;!(v>=m/2);++v){var I=oe[s+2*v>>>1>>>0];if(I==0)break;g+=String.fromCharCode(I)}return g},le=(s,m,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var v=m;g=g<2*s.length?g/2:s.length;for(var I=0;I<g;++I)oe[m>>>1>>>0]=s.charCodeAt(I),m+=2;return oe[m>>>1>>>0]=0,m-v},ir=s=>2*s.length,Yr=(s,m)=>{for(var g=0,v="";!(g>=m/4);){var I=U[s+4*g>>>2>>>0];if(I==0)break;++g,65536<=I?(I-=65536,v+=String.fromCharCode(55296|I>>10,56320|I&1023)):v+=String.fromCharCode(I)}return v},Zn=(s,m,g)=>{if(m>>>=0,g??=2147483647,4>g)return 0;var v=m;g=v+g-4;for(var I=0;I<s.length;++I){var B=s.charCodeAt(I);if(55296<=B&&57343>=B){var H=s.charCodeAt(++I);B=65536+((B&1023)<<10)|H&1023}if(U[m>>>2>>>0]=B,m+=4,m+4>g)break}return U[m>>>2>>>0]=0,m-v},Zr=s=>{for(var m=0,g=0;g<s.length;++g){var v=s.charCodeAt(g);55296<=v&&57343>=v&&++g,m+=4}return m},Ir=(s,m)=>{var g=qt[s];if(g===void 0)throw s=Zt(s),g=it(s),st(s),new ht(m+" has unknown type "+g);return g},Tr=(s,m,g)=>{var v=[];return s=s.toWireType(v,g),v.length&&(re[m>>>2>>>0]=at(v)),s},jt=s=>{try{s()}catch(m){F(m)}};function Xr(){var s=ae,m={};for(let[g,v]of Object.entries(s))m[g]=typeof v=="function"?function(){Vt.push(g);try{return v.apply(null,arguments)}finally{k||(Vt.pop(),tt&&bt===1&&Vt.length===0&&(bt=0,jt(mn),typeof Fibers<"u"&&Fibers.Kb()))}}:v;return m}var bt=0,tt=null,Er=0,Vt=[],Pr={},Or={},Jr=0,ar=null,Qr=[];function en(){return new Promise((s,m)=>{ar={resolve:s,reject:m}})}function tn(){var s=Wt(65548),m=s+12;re[s>>>2>>>0]=m,re[s+4>>>2>>>0]=m+65536,m=Vt[0];var g=Pr[m];return g===void 0&&(g=Jr++,Pr[m]=g,Or[g]=m),U[s+8>>>2>>>0]=g,s}function rn(s){if(!k){if(bt===0){var m=!1,g=!1;s((v=0)=>{if(!k&&(Er=v,m=!0,g)){bt=2,jt(()=>wt(tt)),typeof Browser<"u"&&Browser.lb.tb&&Browser.lb.resume(),v=!1;try{var I=(0,ae[Or[U[tt+8>>>2>>>0]]])()}catch(q){I=q,v=!0}var B=!1;if(!tt){var H=ar;H&&(ar=null,(v?H.reject:H.resolve)(I),B=!0)}if(v&&!B)throw I}}),g=!0,m||(bt=1,tt=tn(),typeof Browser<"u"&&Browser.lb.tb&&Browser.lb.pause(),jt(()=>Xt(tt)))}else bt===2?(bt=0,jt(mt),st(tt),tt=null,Qr.forEach(v=>{if(!k)try{v();try{W=W=v=W,r.onExit?.(v),k=!0,p(v,new zt(v))}catch(I){I instanceof zt||I=="unwind"||p(1,I)}}catch(I){I instanceof zt||I=="unwind"||p(1,I)}})):F(`invalid state: ${bt}`);return Er}}function kr(s){return rn(m=>{s().then(m)})}var Kt=[],nn={},sr=s=>{var m=nn[s];return m===void 0?it(s):m},Rr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),pt=s=>{var m=Kt.length;return Kt.push(s),m},Br=(s,m)=>{for(var g=Array(s),v=0;v<s;++v)g[v]=Ir(re[m+4*v>>>2>>>0],"parameter "+v);return g},ur=(s,m)=>Object.defineProperty(m,"name",{value:s});function Xn(s){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var g=ur(m.name||"unknownFunctionName",function(){});return g.prototype=m.prototype,g=new g,s=m.apply(g,s),s instanceof Object?s:g}var rt=s=>s%4===0&&(s%100!==0||s%400===0),on=[0,31,60,91,121,152,182,213,244,274,305,335],gt=[0,31,59,90,120,151,181,212,243,273,304,334],Dr=s=>{var m=Rt(s)+1,g=Wt(m);return g&&Ct(s,G,g,m),g},lr=[],nt=(s,m)=>{lr.length=0;for(var g;g=G[s++>>>0];){var v=g!=105;v&=g!=112,m+=v&&m%8?4:0,lr.push(g==112?re[m>>>2>>>0]:g==106?Ee[m>>>3]:g==105?U[m>>>2>>>0]:te[m>>>3>>>0]),m+=v?8:4}return lr},Yt={},Xe=()=>{if(!ot){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:c||"./this.program"},m;for(m in Yt)Yt[m]===void 0?delete s[m]:s[m]=Yt[m];var g=[];for(m in s)g.push(`${m}=${s[m]}`);ot=g}return ot},ot,an=[null,[],[]],sn=[31,29,31,30,31,30,31,31,30,31,30,31],un=[31,28,31,30,31,30,31,31,30,31,30,31];function ln(s){var m=Array(Rt(s)+1);return Ct(s,m,0,m.length),m}function dn(s,m,g,v){function I(R,ce,Ie){for(R=typeof R=="number"?R.toString():R||"";R.length<ce;)R=Ie[0]+R;return R}function B(R,ce){return I(R,ce,"0")}function H(R,ce){function Ie(Mt){return 0>Mt?-1:0<Mt?1:0}var Dt;return(Dt=Ie(R.getFullYear()-ce.getFullYear()))===0&&(Dt=Ie(R.getMonth()-ce.getMonth()))===0&&(Dt=Ie(R.getDate()-ce.getDate())),Dt}function q(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function Q(R){var ce=R.ab;for(R=new Date(new Date(R.bb+1900,0,1).getTime());0<ce;){var Ie=R.getMonth(),Dt=(rt(R.getFullYear())?sn:un)[Ie];if(ce>Dt-R.getDate())ce-=Dt-R.getDate()+1,R.setDate(1),11>Ie?R.setMonth(Ie+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+ce);break}}return Ie=new Date(R.getFullYear()+1,0,4),ce=q(new Date(R.getFullYear(),0,4)),Ie=q(Ie),0>=H(ce,R)?0>=H(Ie,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}s>>>=0,m>>>=0,g>>>=0,v>>>=0;var Y=re[v+40>>>2>>>0];v={Hb:U[v>>>2>>>0],Gb:U[v+4>>>2>>>0],hb:U[v+8>>>2>>>0],mb:U[v+12>>>2>>>0],ib:U[v+16>>>2>>>0],bb:U[v+20>>>2>>>0],Wa:U[v+24>>>2>>>0],ab:U[v+28>>>2>>>0],Jb:U[v+32>>>2>>>0],Fb:U[v+36>>>2>>>0],Ib:Y?je(Y):""},g=je(g),Y={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var de in Y)g=g.replace(new RegExp(de,"g"),Y[de]);var be="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Te="January February March April May June July August September October November December".split(" ");Y={"%a":R=>be[R.Wa].substring(0,3),"%A":R=>be[R.Wa],"%b":R=>Te[R.ib].substring(0,3),"%B":R=>Te[R.ib],"%C":R=>B((R.bb+1900)/100|0,2),"%d":R=>B(R.mb,2),"%e":R=>I(R.mb,2," "),"%g":R=>Q(R).toString().substring(2),"%G":R=>Q(R),"%H":R=>B(R.hb,2),"%I":R=>(R=R.hb,R==0?R=12:12<R&&(R-=12),B(R,2)),"%j":R=>{for(var ce=0,Ie=0;Ie<=R.ib-1;ce+=(rt(R.bb+1900)?sn:un)[Ie++]);return B(R.mb+ce,3)},"%m":R=>B(R.ib+1,2),"%M":R=>B(R.Gb,2),"%n":()=>`\n`,"%p":R=>0<=R.hb&&12>R.hb?"AM":"PM","%S":R=>B(R.Hb,2),"%t":()=>"	","%u":R=>R.Wa||7,"%U":R=>B(Math.floor((R.ab+7-R.Wa)/7),2),"%V":R=>{var ce=Math.floor((R.ab+7-(R.Wa+6)%7)/7);if(2>=(R.Wa+371-R.ab-2)%7&&ce++,ce)ce==53&&(Ie=(R.Wa+371-R.ab)%7,Ie==4||Ie==3&&rt(R.bb)||(ce=1));else{ce=52;var Ie=(R.Wa+7-R.ab-1)%7;(Ie==4||Ie==5&&rt(R.bb%400-1))&&ce++}return B(ce,2)},"%w":R=>R.Wa,"%W":R=>B(Math.floor((R.ab+7-(R.Wa+6)%7)/7),2),"%y":R=>(R.bb+1900).toString().substring(2),"%Y":R=>R.bb+1900,"%z":R=>{R=R.Fb;var ce=0<=R;return R=Math.abs(R)/60,(ce?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.Ib,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(de in Y)g.includes(de)&&(g=g.replace(new RegExp(de,"g"),Y[de](v)));return g=g.replace(/\\0\\0/g,"%"),de=ln(g),de.length>m?0:(N.set(de,s>>>0),de.length-1)}for(var cn=Array(256),dr=0;256>dr;++dr)cn[dr]=String.fromCharCode(dr);jr=cn,ht=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Object.assign(Sr.prototype,{get(s){return this.$a[s]},has(s){return this.$a[s]!==void 0},kb(s){var m=this.nb.pop()||this.$a.length;return this.$a[m]=s,m},jb(s){this.$a[s]=void 0,this.nb.push(s)}}),ze.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),ze.cb=ze.$a.length,r.count_emval_handles=()=>{for(var s=0,m=ze.cb;m<ze.$a.length;++m)ze.$a[m]!==void 0&&++s;return s};var Jn={ia:function(s,m,g){return kr(async()=>{await r.zb(s,m,g)})},a:function(s,m,g){throw s>>>=0,new xt(s).kb(m>>>0,g>>>0),nr=s,Ft++,nr},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(s,m,g,v,I){m>>>=0,m=it(m);var B=m.indexOf("u")!=-1;B&&(I=(1n<<64n)-1n),Ze(s>>>0,{name:m,fromWireType:H=>H,toWireType:function(H,q){if(typeof q!="bigint"&&typeof q!="number")throw new TypeError(`Cannot convert "${wr(q)}" to ${this.name}`);if(q<v||q>I)throw new TypeError(`Passing a number "${wr(q)}" from JS side to C/C++ side to an argument of type "${m}", which is outside the valid range [${v}, ${I}]!`);return q},argPackAdvance:8,readValueFromPointer:_r(m,g>>>0,!B),eb:null})},ga:function(s,m,g,v){m=it(m>>>0),Ze(s>>>0,{name:m,fromWireType:function(I){return!!I},toWireType:function(I,B){return B?g:v},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(G[I>>>0])},eb:null})},fa:function(s,m){m=it(m>>>0),Ze(s>>>0,{name:m,fromWireType:g=>{var v=_e(g);return xr(g),v},toWireType:(g,v)=>at(v),argPackAdvance:8,readValueFromPointer:or,eb:null})},F:function(s,m,g){m=it(m>>>0),Ze(s>>>0,{name:m,fromWireType:v=>v,toWireType:(v,I)=>I,argPackAdvance:8,readValueFromPointer:Cr(m,g>>>0),eb:null})},s:function(s,m,g,v,I){if(s>>>=0,g>>>=0,m=it(m>>>0),I===-1&&(I=4294967295),I=q=>q,v===0){var B=32-8*g;I=q=>q<<B>>>B}var H=m.includes("unsigned")?function(q,Q){return Q>>>0}:function(q,Q){return Q};Ze(s,{name:m,fromWireType:I,toWireType:H,argPackAdvance:8,readValueFromPointer:_r(m,g,v!==0),eb:null})},n:function(s,m,g){function v(B){return new I(N.buffer,re[B+4>>>2>>>0],re[B>>>2>>>0])}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];g=it(g>>>0),Ze(s>>>0,{name:g,fromWireType:v,argPackAdvance:8,readValueFromPointer:v},{ub:!0})},H:function(s,m){m=it(m>>>0);var g=m==="std::string";Ze(s>>>0,{name:m,fromWireType:function(v){var I=re[v>>>2>>>0],B=v+4;if(g)for(var H=B,q=0;q<=I;++q){var Q=B+q;if(q==I||G[Q>>>0]==0){if(H=je(H,Q-H),Y===void 0)var Y=H;else Y+=String.fromCharCode(0),Y+=H;H=Q+1}}else{for(Y=Array(I),q=0;q<I;++q)Y[q]=String.fromCharCode(G[B+q>>>0]);Y=Y.join("")}return st(v),Y},toWireType:function(v,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var B=typeof I=="string";if(!(B||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new ht("Cannot pass non-string to std::string");var H=g&&B?Rt(I):I.length,q=Wt(4+H+1),Q=q+4;if(re[q>>>2>>>0]=H,g&&B)Ct(I,G,Q,H+1);else if(B)for(B=0;B<H;++B){var Y=I.charCodeAt(B);if(255<Y)throw st(Q),new ht("String has UTF-16 code units that do not fit in 8 bits");G[Q+B>>>0]=Y}else for(B=0;B<H;++B)G[Q+B>>>0]=I[B];return v!==null&&v.push(st,q),q},argPackAdvance:8,readValueFromPointer:Kn,eb(v){st(v)}})},y:function(s,m,g){if(m>>>=0,g>>>=0,g=it(g),m===2)var v=Yn,I=le,B=ir,H=()=>X,q=1;else m===4&&(v=Yr,I=Zn,B=Zr,H=()=>re,q=2);Ze(s>>>0,{name:g,fromWireType:Q=>{for(var Y=re[Q>>>2>>>0],de=H(),be,Te=Q+4,R=0;R<=Y;++R){var ce=Q+4+R*m;(R==Y||de[ce>>>q]==0)&&(Te=v(Te,ce-Te),be===void 0?be=Te:(be+=String.fromCharCode(0),be+=Te),Te=ce+m)}return st(Q),be},toWireType:(Q,Y)=>{if(typeof Y!="string")throw new ht(`Cannot pass non-string to C++ string type ${g}`);var de=B(Y),be=Wt(4+de+m);return re[be>>>2]=de>>q,I(Y,be+4,de+m),Q!==null&&Q.push(st,be),be},argPackAdvance:8,readValueFromPointer:or,eb(Q){st(Q)}})},ha:function(s,m){m=it(m>>>0),Ze(s>>>0,{vb:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,u:function(s,m,g){return m>>>=0,g>>>=0,s=_e(s>>>0),m=Ir(m,"emval::as"),Tr(m,g,s)},v:function(s){return s>>>=0,kr(()=>(s=_e(s),s.then(at)))},o:function(s,m,g,v){return g>>>=0,v>>>=0,s=Kt[s>>>0],m=_e(m>>>0),s(null,m,g,v)},l:function(s,m,g,v,I){return g>>>=0,v>>>=0,I>>>=0,s=Kt[s>>>0],m=_e(m>>>0),g=sr(g),s(m,m[g],v,I)},b:xr,z:function(s,m){return m>>>=0,s=_e(s>>>0),m=_e(m),s==m},m:function(s){return s>>>=0,s===0?at(Rr()):(s=sr(s),at(Rr()[s]))},i:function(s,m,g){m=Br(s,m>>>0);var v=m.shift();s--;var I=`return function (obj, func, destructorsRef, args) {\n`,B=0,H=[];g===0&&H.push("obj");for(var q=["retType"],Q=[v],Y=0;Y<s;++Y)H.push("arg"+Y),q.push("argType"+Y),Q.push(m[Y]),I+=`  var arg${Y} = argType${Y}.readValueFromPointer(args${B?"+"+B:""});\n`,B+=m[Y].argPackAdvance;for(I+=`  var rv = ${g===1?"new func":"func.call"}(${H.join(", ")});\n`,Y=0;Y<s;++Y)m[Y].deleteObject&&(I+=`  argType${Y}.deleteObject(arg${Y});\n`);return v.vb||(q.push("emval_returnValue"),Q.push(Tr),I+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),q.push(I+`};\n`),s=Xn(q).apply(null,Q),g=`methodCaller<(${m.map(de=>de.name).join(", ")}) => ${v.name}>`,pt(ur(g,s))},r:function(s,m){return m>>>=0,s=_e(s>>>0),m=_e(m),at(s[m])},d:function(s){s>>>=0,4<s&&(ze.get(s).qb+=1)},t:function(){return at([])},k:function(s){s=_e(s>>>0);for(var m=Array(s.length),g=0;g<s.length;g++)m[g]=s[g];return at(m)},f:function(s){return at(sr(s>>>0))},j:function(){return at({})},h:function(s){s>>>=0;for(var m=_e(s);m.length;){var g=m.pop();m.pop()(g)}xr(s)},g:function(s,m,g){m>>>=0,g>>>=0,s=_e(s>>>0),m=_e(m),g=_e(g),s[m]=g},c:function(s,m){return m>>>=0,s=Ir(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(m),at(s)},U:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),U[m>>>2>>>0]=s.getUTCSeconds(),U[m+4>>>2>>>0]=s.getUTCMinutes(),U[m+8>>>2>>>0]=s.getUTCHours(),U[m+12>>>2>>>0]=s.getUTCDate(),U[m+16>>>2>>>0]=s.getUTCMonth(),U[m+20>>>2>>>0]=s.getUTCFullYear()-1900,U[m+24>>>2>>>0]=s.getUTCDay(),U[m+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),U[m>>>2>>>0]=s.getSeconds(),U[m+4>>>2>>>0]=s.getMinutes(),U[m+8>>>2>>>0]=s.getHours(),U[m+12>>>2>>>0]=s.getDate(),U[m+16>>>2>>>0]=s.getMonth(),U[m+20>>>2>>>0]=s.getFullYear()-1900,U[m+24>>>2>>>0]=s.getDay(),U[m+28>>>2>>>0]=(rt(s.getFullYear())?on:gt)[s.getMonth()]+s.getDate()-1|0,U[m+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),v=new Date(s.getFullYear(),0,1).getTimezoneOffset();U[m+32>>>2>>>0]=(g!=v&&s.getTimezoneOffset()==Math.min(v,g))|0},W:function(s){s>>>=0;var m=new Date(U[s+20>>>2>>>0]+1900,U[s+16>>>2>>>0],U[s+12>>>2>>>0],U[s+8>>>2>>>0],U[s+4>>>2>>>0],U[s>>>2>>>0],0),g=U[s+32>>>2>>>0],v=m.getTimezoneOffset(),I=new Date(m.getFullYear(),6,1).getTimezoneOffset(),B=new Date(m.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(B,I);return 0>g?U[s+32>>>2>>>0]=+(I!=B&&H==v):0<g!=(H==v)&&(I=Math.max(B,I),m.setTime(m.getTime()+6e4*((0<g?H:I)-v))),U[s+24>>>2>>>0]=m.getDay(),U[s+28>>>2>>>0]=(rt(m.getFullYear())?on:gt)[m.getMonth()]+m.getDate()-1|0,U[s>>>2>>>0]=m.getSeconds(),U[s+4>>>2>>>0]=m.getMinutes(),U[s+8>>>2>>>0]=m.getHours(),U[s+12>>>2>>>0]=m.getDate(),U[s+16>>>2>>>0]=m.getMonth(),U[s+20>>>2>>>0]=m.getYear(),s=m.getTime(),isNaN(s)?(U[pn()>>>2>>>0]=61,s=-1):s/=1e3,BigInt(s)},S:function(){return-52},T:function(){},L:function(s,m,g){function v(Q){return(Q=Q.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Q[1]:"GMT"}g>>>=0;var I=new Date().getFullYear(),B=new Date(I,0,1),H=new Date(I,6,1);I=B.getTimezoneOffset();var q=H.getTimezoneOffset();re[s>>>0>>>2>>>0]=60*Math.max(I,q),U[m>>>0>>>2>>>0]=+(I!=q),s=v(B),m=v(H),s=Dr(s),m=Dr(m),q<I?(re[g>>>2>>>0]=s,re[g+4>>>2>>>0]=m):(re[g>>>2>>>0]=m,re[g+4>>>2>>>0]=s)},A:()=>{F("")},e:function(s,m,g){return s>>>=0,m=nt(m>>>0,g>>>0),ct[s].apply(null,m)},I:function(s,m,g){return s>>>=0,m=nt(m>>>0,g>>>0),ct[s].apply(null,m)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(s){s>>>=0;var m=G.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var v=m*(1+.2/g);v=Math.min(v,s+100663296);var I=Math;v=Math.max(s,v);e:{I=(I.min.call(I,4294901760,v+(65536-v%65536)%65536)-T.buffer.byteLength+65535)/65536;try{T.grow(I),Me();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},Z:function(s,m){s>>>=0,m>>>=0;var g=0;return Xe().forEach((v,I)=>{var B=m+g;for(I=re[s+4*I>>>2>>>0]=B,B=0;B<v.length;++B)N[I++>>>0>>>0]=v.charCodeAt(B);N[I>>>0>>>0]=0,g+=v.length+1}),0},_:function(s,m){s>>>=0,m>>>=0;var g=Xe();re[s>>>2>>>0]=g.length;var v=0;return g.forEach(I=>v+=I.length+1),re[m>>>2>>>0]=v,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(s,m,g,v){m>>>=0,g>>>=0,v>>>=0;for(var I=0,B=0;B<g;B++){var H=re[m>>>2>>>0],q=re[m+4>>>2>>>0];m+=8;for(var Q=0;Q<q;Q++){var Y=G[H+Q>>>0],de=an[s];Y===0||Y===10?((s===1?x:P)(Ut(de,0)),de.length=0):de.push(Y)}I+=q}return re[v>>>2>>>0]=I,0},ea:dn,p:function(s,m,g,v){return dn(s>>>0,m>>>0,g>>>0,v>>>0)}},ae=function(){function s(g){return ae=g.exports,ae=Xr(),ae=fn(),T=ae.ja,Me(),he.unshift(ae.ka),ge--,ge==0&&(Pe!==null&&(clearInterval(Pe),Pe=null),Le&&(g=Le,Le=null,g())),ae}var m={a:Jn};if(ge++,r.instantiateWasm)try{return r.instantiateWasm(m,s)}catch(g){P(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return qe(m,function(g){s(g.instance)}).catch(i),{}}();r._OrtInit=(s,m)=>(r._OrtInit=ae.la)(s,m),r._OrtGetLastError=(s,m)=>(r._OrtGetLastError=ae.ma)(s,m),r._OrtCreateSessionOptions=(s,m,g,v,I,B,H,q,Q,Y)=>(r._OrtCreateSessionOptions=ae.na)(s,m,g,v,I,B,H,q,Q,Y),r._OrtAppendExecutionProvider=(s,m)=>(r._OrtAppendExecutionProvider=ae.oa)(s,m),r._OrtAddFreeDimensionOverride=(s,m,g)=>(r._OrtAddFreeDimensionOverride=ae.pa)(s,m,g),r._OrtAddSessionConfigEntry=(s,m,g)=>(r._OrtAddSessionConfigEntry=ae.qa)(s,m,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=ae.ra)(s),r._OrtCreateSession=(s,m,g)=>(r._OrtCreateSession=ae.sa)(s,m,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=ae.ta)(s),r._OrtGetInputOutputCount=(s,m,g)=>(r._OrtGetInputOutputCount=ae.ua)(s,m,g),r._OrtGetInputName=(s,m)=>(r._OrtGetInputName=ae.va)(s,m),r._OrtGetOutputName=(s,m)=>(r._OrtGetOutputName=ae.wa)(s,m),r._OrtFree=s=>(r._OrtFree=ae.xa)(s),r._OrtCreateTensor=(s,m,g,v,I,B)=>(r._OrtCreateTensor=ae.ya)(s,m,g,v,I,B),r._OrtGetTensorData=(s,m,g,v,I)=>(r._OrtGetTensorData=ae.za)(s,m,g,v,I),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=ae.Aa)(s),r._OrtCreateRunOptions=(s,m,g,v)=>(r._OrtCreateRunOptions=ae.Ba)(s,m,g,v),r._OrtAddRunConfigEntry=(s,m,g)=>(r._OrtAddRunConfigEntry=ae.Ca)(s,m,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=ae.Da)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=ae.Ea)(s),r._OrtBindInput=(s,m,g)=>(r._OrtBindInput=ae.Fa)(s,m,g),r._OrtBindOutput=(s,m,g,v)=>(r._OrtBindOutput=ae.Ga)(s,m,g,v),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=ae.Ha)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=ae.Ia)(s),r._OrtRunWithBinding=(s,m,g,v,I)=>(r._OrtRunWithBinding=ae.Ja)(s,m,g,v,I),r._OrtRun=(s,m,g,v,I,B,H,q)=>(r._OrtRun=ae.Ka)(s,m,g,v,I,B,H,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=ae.La)(s),r._JsepOutput=(s,m,g)=>(r._JsepOutput=ae.Ma)(s,m,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=ae.Na)(s);var pn=()=>(pn=ae.Oa)(),Wt=r._malloc=s=>(Wt=r._malloc=ae.Pa)(s),st=r._free=s=>(st=r._free=ae.Qa)(s),Zt=s=>(Zt=ae.Ra)(s),cr=()=>(cr=ae.Ta)(),pr=s=>(pr=ae.Ua)(s),Mr=s=>(Mr=ae.Va)(s),Xt=s=>(Xt=ae.Xa)(s),mn=()=>(mn=ae.Ya)(),wt=s=>(wt=ae.Za)(s),mt=()=>(mt=ae._a)();r.___start_em_js=781024,r.___stop_em_js=781185;function fn(){var s=ae;s=Object.assign({},s);var m=v=>()=>v()>>>0,g=v=>I=>v(I)>>>0;return s.Oa=m(s.Oa),s.Pa=g(s.Pa),s.Ra=g(s.Ra),s.Ta=m(s.Ta),s.Va=g(s.Va),s}r.stackAlloc=Mr,r.stackSave=cr,r.stackRestore=pr,r.UTF8ToString=je,r.stringToUTF8=(s,m,g)=>Ct(s,G,m,g),r.lengthBytesUTF8=Rt;var Bt;Le=function s(){Bt||zr(),Bt||(Le=s)};function zr(){if(!(0<ge)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();ye.unshift(s)}for(;0<ye.length;)ye.shift()(r);if(!(0<ge||Bt||(Bt=!0,r.calledRun=!0,k))){for(;0<he.length;)he.shift()(r);for(o(r);0<ue.length;)ue.shift()(r)}}}return zr(),t.ready}})();typeof Ii=="object"&&typeof po=="object"?po.exports=Ai:typeof define=="function"&&define.amd&&define([],()=>Ai)});var Ei=Vr(()=>{});var Pi=Vr(()=>{});var Oi={};wn(Oi,{cpus:()=>ad});var ad,ki=K(()=>{ad=void 0});var Di=Vr((Bi,mo)=>{"use strict";var Ri=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return te.buffer!=ue.buffer&&et(),ue}function o(){return te.buffer!=ue.buffer&&et(),ge}function i(){return te.buffer!=ue.buffer&&et(),Pe}function u(){return te.buffer!=ue.buffer&&et(),Le}function a(){return te.buffer!=ue.buffer&&et(),F}function c(){return te.buffer!=ue.buffer&&et(),ie}function p(){return te.buffer!=ue.buffer&&et(),xe}function h(){return te.buffer!=ue.buffer&&et(),dt}var l=t,y,w;l.ready=new Promise((n,d)=>{y=n,w=d}),l.mountExternalData=(n,d)=>{(l.Fb||(l.Fb=new Map)).set(n,d)},l.unmountExternalData=()=>{delete l.Fb};let _=()=>{let n=(f,b,C)=>(...O)=>{let V=mt,L=b?.();O=f(...O);let ee=b?.();return L!==ee&&(f=ee,C(L),b=C=null),mt!=V?I():O},d=f=>async(...b)=>{try{if(l.Eb)throw Error("Session already started");let C=l.Eb={kc:b[0],errors:[]},O=await f(...b);if(l.Eb!==C)throw Error("Session mismatch");l.Ob?.flush();let V=C.errors;if(0<V.length){let L=await Promise.all(V);if(L=L.filter(ee=>ee),0<L.length)throw Error(L.join(`\n`))}return O}finally{l.Eb=null}};l._OrtCreateSession=n(l._OrtCreateSession,()=>l._OrtCreateSession,f=>l._OrtCreateSession=f),l._OrtRun=d(n(l._OrtRun,()=>l._OrtRun,f=>l._OrtRun=f)),l._OrtRunWithBinding=d(n(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,f=>l._OrtRunWithBinding=f)),l._OrtBindInput=n(l._OrtBindInput,()=>l._OrtBindInput,f=>l._OrtBindInput=f),_=void 0};l.jsepInit=(n,d)=>{if(_?.(),n==="webgpu"){[l.Ob,l.ac,l.ec,l.Pb,l.dc,l.eb,l.fc,l.ic,l.bc,l.cc,l.hc]=d;let f=l.Ob;l.jsepRegisterBuffer=(b,C,O,V)=>f.registerBuffer(b,C,O,V),l.jsepGetBuffer=b=>f.getBuffer(b),l.jsepCreateDownloader=(b,C,O)=>f.createDownloader(b,C,O),l.jsepOnReleaseSession=b=>{f.onReleaseSession(b)},l.jsepOnRunStart=b=>f.onRunStart(b)}};var $=Object.assign({},l),S="./this.program",E=(n,d)=>{throw d},A=typeof window=="object",x=typeof importScripts=="function",P=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=l.ENVIRONMENT_IS_PTHREAD||!1,k="";function W(n){return l.locateFile?l.locateFile(n,k):k+n}var N,G,oe;if(P){var X=(uo(),mr(so)),U=(co(),mr(lo));k=x?U.dirname(k)+"/":__dirname+"/",N=(d,f)=>(d=Rt(d)?new URL(d):U.normalize(d),X.readFileSync(d,f?void 0:"utf8")),oe=d=>(d=N(d,!0),d.buffer||(d=new Uint8Array(d)),d),G=(d,f,b,C=!0)=>{d=Rt(d)?new URL(d):U.normalize(d),X.readFile(d,C?void 0:"utf8",(O,V)=>{O?b(O):f(C?V.buffer:V)})},!l.thisProgram&&1<process.argv.length&&(S=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),E=(d,f)=>{throw process.exitCode=d,f},l.inspect=()=>"[Emscripten Module object]";let n;try{n=Ei()}catch(d){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),d}global.Worker=n.Worker}else(A||x)&&(x?k=self.location.href:typeof document<"u"&&document.currentScript&&(k=document.currentScript.src),typeof e<"u"&&e&&(k=e),k.indexOf("blob:")!==0?k=k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):k="",P||(N=n=>{var d=new XMLHttpRequest;return d.open("GET",n,!1),d.send(null),d.responseText},x&&(oe=n=>{var d=new XMLHttpRequest;return d.open("GET",n,!1),d.responseType="arraybuffer",d.send(null),new Uint8Array(d.response)}),G=(n,d,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?d(b.response):f()},b.onerror=f,b.send(null)}));P&&typeof performance>"u"&&(global.performance=Pi().performance);var re=console.log.bind(console),Be=console.error.bind(console);P&&(re=(...n)=>X.writeSync(1,n.join(" ")+`\n`),Be=(...n)=>X.writeSync(2,n.join(" ")+`\n`));var Ee=re,Ae=Be;Object.assign(l,$),$=null,typeof WebAssembly!="object"&&Ut("no native wasm support detected");var te,Me,ye=!1,he,ue,ge,Pe,Le,F,ie,xe,Ne,Ye,dt;function et(){var n=te.buffer;l.HEAP8=ue=new Int8Array(n),l.HEAP16=Pe=new Int16Array(n),l.HEAPU8=ge=new Uint8Array(n),l.HEAPU16=Le=new Uint16Array(n),l.HEAP32=F=new Int32Array(n),l.HEAPU32=ie=new Uint32Array(n),l.HEAPF32=xe=new Float32Array(n),l.HEAPF64=dt=new Float64Array(n),l.HEAP64=Ne=new BigInt64Array(n),l.HEAPU64=Ye=new BigUint64Array(n)}var Fe=16777216;if(T)te=l.wasmMemory;else if(l.wasmMemory)te=l.wasmMemory;else if(te=new WebAssembly.Memory({initial:Fe/65536,maximum:65536,shared:!0}),!(te.buffer instanceof SharedArrayBuffer))throw Ae("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),P&&Ae("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");et(),Fe=te.buffer.byteLength;var qe=[],ct=[],zt=[],xt=0,nr=null,Ft=null;function br(){if(xt--,xt==0&&(nr!==null&&(clearInterval(nr),nr=null),Ft)){var n=Ft;Ft=null,n()}}function Ut(n){throw n="Aborted("+n+")",Ae(n),ye=!0,he=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),w(n),n}var je=n=>n.startsWith("data:application/octet-stream;base64,"),Rt=n=>n.startsWith("file://"),Ct;Ct="ort-wasm-simd-threaded.wasm",je(Ct)||(Ct=W(Ct));function wr(n){if(oe)return oe(n);throw"both async and sync fetching of the wasm failed"}function jr(n){if(A||x){if(typeof fetch=="function"&&!Rt(n))return fetch(n,{credentials:"same-origin"}).then(d=>{if(!d.ok)throw"failed to load wasm binary file at \'"+n+"\'";return d.arrayBuffer()}).catch(()=>wr(n));if(G)return new Promise((d,f)=>{G(n,b=>d(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>wr(n))}function it(n,d,f){return jr(n).then(b=>WebAssembly.instantiate(b,d)).then(b=>b).then(f,b=>{Ae(`failed to asynchronously prepare wasm: ${b}`),Ut(b)})}function vr(n,d){var f=Ct;return typeof WebAssembly.instantiateStreaming!="function"||je(f)||Rt(f)||P||typeof fetch!="function"?it(f,n,d):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(d,function(C){return Ae(`wasm streaming compile failed: ${C}`),Ae("falling back to ArrayBuffer instantiation"),it(f,n,d)}))}var qt={907972:(n,d,f,b)=>{if(typeof l>"u"||!l.Fb)return 1;if(n=ze(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=l.Fb.get(n),!n)return 2;if(d>>>=0,f>>>=0,b>>>=0,d+f>n.byteLength)return 3;try{return o().set(n.subarray(d,d+f),b>>>0),0}catch{return 4}},908473:()=>{l.bc()},908504:()=>{l.cc()},908533:()=>{l.hc()},908558:n=>l.ac(n),908591:n=>l.ec(n),908623:(n,d,f)=>{l.Pb(n,d,f,!0)},908662:(n,d,f)=>{l.Pb(n,d,f)},908695:n=>{l.eb("Abs",n,void 0)},908746:n=>{l.eb("Neg",n,void 0)},908797:n=>{l.eb("Floor",n,void 0)},908850:n=>{l.eb("Ceil",n,void 0)},908902:n=>{l.eb("Reciprocal",n,void 0)},908960:n=>{l.eb("Sqrt",n,void 0)},909012:n=>{l.eb("Exp",n,void 0)},909063:n=>{l.eb("Erf",n,void 0)},909114:n=>{l.eb("Sigmoid",n,void 0)},909169:(n,d,f)=>{l.eb("HardSigmoid",n,{alpha:d,beta:f})},909248:n=>{l.eb("Log",n,void 0)},909299:n=>{l.eb("Sin",n,void 0)},909350:n=>{l.eb("Cos",n,void 0)},909401:n=>{l.eb("Tan",n,void 0)},909452:n=>{l.eb("Asin",n,void 0)},909504:n=>{l.eb("Acos",n,void 0)},909556:n=>{l.eb("Atan",n,void 0)},909608:n=>{l.eb("Sinh",n,void 0)},909660:n=>{l.eb("Cosh",n,void 0)},909712:n=>{l.eb("Asinh",n,void 0)},909765:n=>{l.eb("Acosh",n,void 0)},909818:n=>{l.eb("Atanh",n,void 0)},909871:n=>{l.eb("Tanh",n,void 0)},909923:n=>{l.eb("Not",n,void 0)},909974:(n,d,f)=>{l.eb("Clip",n,{min:d,max:f})},910043:n=>{l.eb("Clip",n,void 0)},910095:(n,d)=>{l.eb("Elu",n,{alpha:d})},910153:n=>{l.eb("Relu",n,void 0)},910205:(n,d)=>{l.eb("LeakyRelu",n,{alpha:d})},910269:(n,d)=>{l.eb("ThresholdedRelu",n,{alpha:d})},910339:(n,d)=>{l.eb("Cast",n,{to:d})},910397:n=>{l.eb("Add",n,void 0)},910448:n=>{l.eb("Sub",n,void 0)},910499:n=>{l.eb("Mul",n,void 0)},910550:n=>{l.eb("Div",n,void 0)},910601:n=>{l.eb("Pow",n,void 0)},910652:n=>{l.eb("Equal",n,void 0)},910705:n=>{l.eb("Greater",n,void 0)},910760:n=>{l.eb("GreaterOrEqual",n,void 0)},910822:n=>{l.eb("Less",n,void 0)},910874:n=>{l.eb("LessOrEqual",n,void 0)},910933:(n,d,f,b,C)=>{l.eb("ReduceMean",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},911092:(n,d,f,b,C)=>{l.eb("ReduceMax",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},911250:(n,d,f,b,C)=>{l.eb("ReduceMin",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},911408:(n,d,f,b,C)=>{l.eb("ReduceProd",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},911567:(n,d,f,b,C)=>{l.eb("ReduceSum",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},911725:(n,d,f,b,C)=>{l.eb("ReduceL1",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},911882:(n,d,f,b,C)=>{l.eb("ReduceL2",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},912039:(n,d,f,b,C)=>{l.eb("ReduceLogSum",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},912200:(n,d,f,b,C)=>{l.eb("ReduceSumSquare",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},912364:(n,d,f,b,C)=>{l.eb("ReduceLogSumExp",n,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},912528:n=>{l.eb("Where",n,void 0)},912581:(n,d,f)=>{l.eb("Transpose",n,{perm:d?Array.from(a().subarray(d>>>0,f>>>0)):[]})},912689:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re,D,me)=>{l.eb("ConvTranspose",n,{format:ee?"NHWC":"NCHW",autoPad:d,dilations:[f],group:b,kernel_shape:[C],pads:[O,V],strides:[L],wIsConst:()=>!!r()[J>>>0],outputPadding:pe?Array.from(a().subarray(pe>>>0,Ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,D>>>0)):[],activation:ze(me)})},913091:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re,D)=>{l.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:d,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(O>>>0,(O>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[ee>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,pe>>>0)):[],outputShape:Ce?Array.from(a().subarray(Ce>>>0,Re>>>0)):[],activation:ze(D)})},913656:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re,D,me)=>{l.eb("ConvTranspose",n,{format:ee?"NHWC":"NCHW",autoPad:d,dilations:[f],group:b,kernel_shape:[C],pads:[O,V],strides:[L],wIsConst:()=>!!r()[J>>>0],outputPadding:pe?Array.from(a().subarray(pe>>>0,Ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,D>>>0)):[],activation:ze(me)})},914058:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re,D)=>{l.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:d,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(O>>>0,(O>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[ee>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,pe>>>0)):[],outputShape:Ce?Array.from(a().subarray(Ce>>>0,Re>>>0)):[],activation:ze(D)})},914623:(n,d)=>{l.eb("GlobalAveragePool",n,{format:d?"NHWC":"NCHW"})},914714:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re,D,me,Oe)=>{l.eb("AveragePool",n,{format:Oe?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[O,V],kernel_shape:[L,ee],pads:[J,pe,Ce,Re],strides:[D,me]})},914998:(n,d)=>{l.eb("GlobalAveragePool",n,{format:d?"NHWC":"NCHW"})},915089:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re,D,me,Oe)=>{l.eb("AveragePool",n,{format:Oe?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[O,V],kernel_shape:[L,ee],pads:[J,pe,Ce,Re],strides:[D,me]})},915373:(n,d)=>{l.eb("GlobalMaxPool",n,{format:d?"NHWC":"NCHW"})},915460:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re,D,me,Oe)=>{l.eb("MaxPool",n,{format:Oe?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[O,V],kernel_shape:[L,ee],pads:[J,pe,Ce,Re],strides:[D,me]})},915740:(n,d)=>{l.eb("GlobalMaxPool",n,{format:d?"NHWC":"NCHW"})},915827:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re,D,me,Oe)=>{l.eb("MaxPool",n,{format:Oe?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[O,V],kernel_shape:[L,ee],pads:[J,pe,Ce,Re],strides:[D,me]})},916107:(n,d,f,b,C)=>{l.eb("Gemm",n,{alpha:d,beta:f,transA:b,transB:C})},916211:n=>{l.eb("MatMul",n,void 0)},916265:(n,d,f,b)=>{l.eb("ArgMax",n,{keepDims:!!d,selectLastIndex:!!f,axis:b})},916373:(n,d,f,b)=>{l.eb("ArgMin",n,{keepDims:!!d,selectLastIndex:!!f,axis:b})},916481:(n,d)=>{l.eb("Softmax",n,{axis:d})},916544:(n,d)=>{l.eb("Concat",n,{axis:d})},916604:(n,d,f,b,C)=>{l.eb("Split",n,{axis:d,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},916744:n=>{l.eb("Expand",n,void 0)},916798:(n,d)=>{l.eb("Gather",n,{axis:Number(d)})},916869:(n,d)=>{l.eb("GatherElements",n,{axis:Number(d)})},916948:(n,d,f,b,C,O,V,L,ee,J,pe)=>{l.eb("Resize",n,{antialias:d,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:ze(C),cubicCoeffA:O,excludeOutside:V,extrapolationValue:L,keepAspectRatioPolicy:ze(ee),mode:ze(J),nearestMode:ze(pe)})},917294:(n,d,f,b,C,O,V)=>{l.eb("Slice",n,{starts:d?Array.from(a().subarray(d>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,C>>>0)):[],axes:O?Array.from(a().subarray(O>>>0,V>>>0)):[]})},917510:n=>{l.eb("Tile",n,void 0)},917562:(n,d,f)=>{l.eb("LayerNormalization",n,{axis:Number(d),epsilon:Number(f)})},917669:(n,d,f)=>{l.eb("InstanceNormalization",n,{epsilon:d,format:f?"NHWC":"NCHW"})},917783:(n,d,f)=>{l.eb("InstanceNormalization",n,{epsilon:d,format:f?"NHWC":"NCHW"})},917897:n=>{l.eb("Range",n,void 0)},917950:(n,d)=>{l.eb("Einsum",n,{equation:ze(d)})},918031:(n,d,f,b,C)=>{l.eb("Pad",n,{mode:d,value:f,pads:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},918158:(n,d,f,b,C,O)=>{l.eb("BatchNormalization",n,{epsilon:d,momentum:f,spatial:!!C,trainingMode:!!b,format:O?"NHWC":"NCHW"})},918327:(n,d,f,b,C,O)=>{l.eb("BatchNormalization",n,{epsilon:d,momentum:f,spatial:!!C,trainingMode:!!b,format:O?"NHWC":"NCHW"})},918496:(n,d,f)=>{l.eb("CumSum",n,{exclusive:Number(d),reverse:Number(f)})},918593:(n,d,f,b,C,O,V,L,ee)=>{l.eb("Attention",n,{numHeads:d,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:O,qkvHiddenSizes:V?Array.from(a().subarray(Number(L)>>>0,Number(L)+V>>>0)):[],pastPresentShareBuffer:!!ee})},918865:n=>{l.eb("BiasAdd",n,void 0)},918920:n=>{l.eb("BiasSplitGelu",n,void 0)},918981:n=>{l.eb("FastGelu",n,void 0)},919037:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re)=>{l.eb("Conv",n,{format:ee?"NHWC":"NCHW",auto_pad:d,dilations:[f],group:b,kernel_shape:[C],pads:O?Array.from(a().subarray(O>>>0,V>>>0)):[],strides:[L],w_is_const:()=>!!r()[J>>>0],activation:ze(pe),activation_params:Ce?Array.from(p().subarray(Ce>>>0,Re>>>0)):[]})},919407:(n,d,f,b,C,O,V,L,ee,J,pe,Ce,Re,D,me,Oe)=>{l.eb("Conv",n,{format:Ce?"NHWC":"NCHW",auto_pad:d,dilations:[f,b],group:C,kernel_shape:[O,V],pads:L?Array.from(a().subarray(L>>>0,ee>>>0)):[],strides:[J,pe],w_is_const:()=>!!r()[Re>>>0],activation:ze(D),activation_params:me?Array.from(p().subarray(me>>>0,Oe>>>0)):[]})},919798:n=>{l.eb("Gelu",n,void 0)},919850:(n,d,f,b,C,O)=>{l.eb("MatMulNBits",n,{k:d,n:f,accuracyLevel:b,bits:C,blockSize:O})},919977:(n,d,f,b,C,O)=>{l.eb("MultiHeadAttention",n,{numHeads:d,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:O})},920136:(n,d)=>{l.eb("SkipLayerNormalization",n,{epsilon:d})},920217:n=>{l.fc(n)},920251:(n,d)=>l.ic(n,d,l.Eb.kc,l.Eb.errors)};function $r(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var ht=n=>{n.terminate(),n.onmessage=()=>{}},Kr=n=>{le.yb.length==0&&(Ar(),le.Qb(le.yb[0]));var d=le.yb.pop();if(!d)return 6;le.zb.push(d),le.pb[n.xb]=d,d.xb=n.xb;var f={cmd:"run",start_routine:n.lc,arg:n.Wb,pthread_ptr:n.xb};return P&&d.unref(),d.postMessage(f,n.rc),0},Ze=0,_r=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Sr=(n,d,f)=>{d>>>=0;var b=d+f;for(f=d;n[f]&&!(f>=b);)++f;if(16<f-d&&n.buffer&&_r)return _r.decode(n.buffer instanceof SharedArrayBuffer?n.slice(d,f):n.subarray(d,f));for(b="";d<f;){var C=n[d++];if(C&128){var O=n[d++]&63;if((C&224)==192)b+=String.fromCharCode((C&31)<<6|O);else{var V=n[d++]&63;C=(C&240)==224?(C&15)<<12|O<<6|V:(C&7)<<18|O<<12|V<<6|n[d++]&63,65536>C?b+=String.fromCharCode(C):(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else b+=String.fromCharCode(C)}return b},ze=(n,d)=>(n>>>=0)?Sr(o(),n,d):"",xr=n=>{var d=oo();return n=n(),yn(d),n};function _e(n,d){var f=arguments.length-2,b=arguments;return xr(()=>{for(var C=2*f,O=io(8*C),V=O>>>3,L=0;L<f;L++){var ee=b[2+L];typeof ee=="bigint"?(Ne[V+2*L]=1n,Ne[V+2*L+1]=ee):(Ne[V+2*L]=0n,h()[V+2*L+1>>>0]=ee)}return hi(n,C,O,d)})}function at(n){if(T)return _e(0,1,n);he=n,0<Ze||(le.mc(),l.onExit?.(n),ye=!0),E(n,new $r(n))}var or=n=>{if(he=n,T)throw Yr(n),"unwind";at(n)},Cr=n=>{n instanceof $r||n=="unwind"||E(1,n)};function Kn(){for(var n=l.numThreads;n--;)Ar();qe.unshift(()=>{xt++,Yn(()=>br())})}function Ar(){var n=W("ort-wasm-simd-threaded.worker.js");n=new Worker(n),le.yb.push(n)}function Yn(n){T?n():Promise.all(le.yb.map(le.Qb)).then(n)}var le={yb:[],zb:[],Vb:[],pb:{},Ib(){T?(le.receiveObjectTransfer=le.jc,le.threadInitTLS=le.Ub,le.setExitStatus=le.Tb):Kn()},Tb:n=>he=n,vc:["$terminateWorker"],mc:()=>{for(var n of le.zb)ht(n);for(n of le.yb)ht(n);le.yb=[],le.zb=[],le.pb=[]},Sb:n=>{var d=n.xb;delete le.pb[d],le.yb.push(n),le.zb.splice(le.zb.indexOf(n),1),n.xb=0,ro(d)},jc(){},Ub(){le.Vb.forEach(n=>n())},Qb:n=>new Promise(d=>{n.onmessage=O=>{O=O.data;var V=O.cmd;if(O.targetThread&&O.targetThread!=gn()){var L=le.pb[O.targetThread];L?L.postMessage(O,O.transferList):Ae(`Internal error! Worker sent a message "${V}" to target pthread ${O.targetThread}, but that thread no longer exists!`)}else V==="checkMailbox"?Zt():V==="spawnThread"?Kr(O):V==="cleanupThread"?le.Sb(le.pb[O.thread]):V==="killThread"?(O=O.thread,V=le.pb[O],delete le.pb[O],ht(V),ro(O),le.zb.splice(le.zb.indexOf(V),1),V.xb=0):V==="cancelThread"?le.pb[O.thread].postMessage({cmd:"cancel"}):V==="loaded"?(n.loaded=!0,P&&!n.xb&&n.unref(),d(n)):V==="alert"?alert(`Thread ${O.threadId}: ${O.text}`):O.target==="setimmediate"?n.postMessage(O):V==="callHandler"?l[O.handler](...O.args):V&&Ae(`worker sent an unknown command ${V}`)},n.onerror=O=>{throw Ae(`worker sent an error! ${O.filename}:${O.lineno}: ${O.message}`),O},P&&(n.on("message",O=>n.onmessage({data:O})),n.on("error",O=>n.onerror(O)));var f=[],b=["onExit"],C;for(C of b)l.hasOwnProperty(C)&&f.push(C);n.postMessage({cmd:"load",handlers:f,urlOrBlob:l.mainScriptUrlOrBlob||e,wasmMemory:te,wasmModule:Me})})};l.PThread=le;var ir=n=>{for(;0<n.length;)n.shift()(l)};l.establishStackSpace=()=>{var n=gn(),d=c()[n+52>>>2>>>0];n=c()[n+56>>>2>>>0],yi(d,d-n),yn(d)};function Yr(n){if(T)return _e(1,0,n);or(n)}l.invokeEntryPoint=(n,d)=>{n=bi.apply(null,[n,d]),0<Ze?le.Tb(n):no(n)};function Zn(n){this.Db=n-24,this.tc=function(d){c()[this.Db+4>>>2>>>0]=d},this.Mb=function(d){c()[this.Db+8>>>2>>>0]=d},this.Ib=function(d,f){this.Kb(),this.tc(d),this.Mb(f)},this.Kb=function(){c()[this.Db+16>>>2>>>0]=0}}var Zr=0,Ir=0;function Tr(n,d,f,b){return T?_e(2,1,n,d,f,b):jt(n,d,f,b)}function jt(n,d,f,b){if(n>>>=0,d>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return Ae("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return T&&C.length===0?Tr(n,d,f,b):(n={lc:f,xb:n,Wb:b,rc:C},T?(n.uc="spawnThread",postMessage(n,C),0):Kr(n))}function Xr(n,d,f){return T?_e(3,1,n,d,f):0}function bt(n,d){if(T)return _e(4,1,n,d)}var tt=n=>{for(var d=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?d++:2047>=b?d+=2:55296<=b&&57343>=b?(d+=4,++f):d+=3}return d},Er=(n,d,f,b)=>{if(f>>>=0,!(0<b))return 0;var C=f;b=f+b-1;for(var O=0;O<n.length;++O){var V=n.charCodeAt(O);if(55296<=V&&57343>=V){var L=n.charCodeAt(++O);V=65536+((V&1023)<<10)|L&1023}if(127>=V){if(f>=b)break;d[f++>>>0]=V}else{if(2047>=V){if(f+1>=b)break;d[f++>>>0]=192|V>>6}else{if(65535>=V){if(f+2>=b)break;d[f++>>>0]=224|V>>12}else{if(f+3>=b)break;d[f++>>>0]=240|V>>18,d[f++>>>0]=128|V>>12&63}d[f++>>>0]=128|V>>6&63}d[f++>>>0]=128|V&63}}return d[f>>>0]=0,f-C},Vt=(n,d,f)=>Er(n,o(),d,f);function Pr(n,d){if(T)return _e(5,1,n,d)}function Or(n,d,f){if(T)return _e(6,1,n,d,f)}function Jr(n,d,f){return T?_e(7,1,n,d,f):0}function ar(n,d){if(T)return _e(8,1,n,d)}function Qr(n,d,f){if(T)return _e(9,1,n,d,f)}function en(n,d,f,b){if(T)return _e(10,1,n,d,f,b)}function tn(n,d,f,b){if(T)return _e(11,1,n,d,f,b)}function rn(n,d,f,b){if(T)return _e(12,1,n,d,f,b)}function kr(n){if(T)return _e(13,1,n)}function Kt(n,d){if(T)return _e(14,1,n,d)}function nn(n,d,f){if(T)return _e(15,1,n,d,f)}var sr=n=>{if(n===null)return"null";var d=typeof n;return d==="object"||d==="array"||d==="function"?n.toString():""+n},Rr,pt=n=>{for(var d="";o()[n>>>0];)d+=Rr[o()[n++>>>0]];return d},Br={},ur={},Xn={},rt;function on(n,d,f={}){var b=d.name;if(!n)throw new rt(`type "${b}" must have a positive integer typeid pointer`);if(ur.hasOwnProperty(n)){if(f.Zb)return;throw new rt(`Cannot register type \'${b}\' twice`)}ur[n]=d,delete Xn[n],Br.hasOwnProperty(n)&&(d=Br[n],delete Br[n],d.forEach(C=>C()))}function gt(n,d,f={}){if(!("argPackAdvance"in d))throw new TypeError("registerType registeredInstance requires argPackAdvance");on(n,d,f)}var Dr=(n,d,f)=>{switch(d){case 1:return f?b=>r()[b>>>0>>>0]:b=>o()[b>>>0>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>c()[b>>>2>>>0];case 8:return f?b=>Ne[b>>>3]:b=>Ye[b>>>3];default:throw new TypeError(`invalid integer width (${d}): ${n}`)}};function lr(){this.wb=[void 0],this.Nb=[]}var nt=new lr;function Yt(n){n>>>=0,n>=nt.Db&&--nt.get(n).Rb===0&&nt.Mb(n)}var Xe=n=>{if(!n)throw new rt("Cannot use deleted val. handle = "+n);return nt.get(n).value},ot=n=>{switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return nt.Kb({Rb:1,value:n})}};function an(n){return this.fromWireType(a()[n>>>2>>>0])}var sn=(n,d)=>{switch(d){case 4:return function(f){return this.fromWireType(p()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${d}): ${n}`)}};function un(n){return this.fromWireType(c()[n>>>2>>>0])}var ln=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,dn=(n,d)=>{for(var f=n>>1,b=f+d/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&ln)return ln.decode(o().slice(n,f));for(f="",b=0;!(b>=d/2);++b){var C=i()[n+2*b>>>1>>>0];if(C==0)break;f+=String.fromCharCode(C)}return f},cn=(n,d,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=d;f=f<2*n.length?f/2:n.length;for(var C=0;C<f;++C){var O=n.charCodeAt(C);i()[d>>>1>>>0]=O,d+=2}return i()[d>>>1>>>0]=0,d-b},dr=n=>2*n.length,Jn=(n,d)=>{for(var f=0,b="";!(f>=d/4);){var C=a()[n+4*f>>>2>>>0];if(C==0)break;++f,65536<=C?(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023)):b+=String.fromCharCode(C)}return b},ae=(n,d,f)=>{if(d>>>=0,f??=2147483647,4>f)return 0;var b=d;f=b+f-4;for(var C=0;C<n.length;++C){var O=n.charCodeAt(C);if(55296<=O&&57343>=O){var V=n.charCodeAt(++C);O=65536+((O&1023)<<10)|V&1023}if(a()[d>>>2>>>0]=O,d+=4,d+4>f)break}return a()[d>>>2>>>0]=0,d-b},pn=n=>{for(var d=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,d+=4}return d},Wt=()=>{if(!(0<Ze))try{T?no(he):or(he)}catch(n){Cr(n)}};function st(n){n>>>=0,typeof Atomics.sc=="function"&&(Atomics.sc(a(),n>>>2,n).value.then(Zt),n+=128,Atomics.store(a(),n>>>2,1))}l.__emscripten_thread_mailbox_await=st;var Zt=()=>{var n=gn();if(n&&(st(n),!ye))try{gi(),Wt()}catch(d){Cr(d)}};l.checkMailbox=Zt;var cr=[],pr=(n,d)=>{var f=ur[n];if(f===void 0)throw n=mi(n),f=pt(n),At(n),new rt(d+" has unknown type "+f);return f},Mr=(n,d,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(c()[d>>>2>>>0]=ot(b)),n},Xt=n=>{try{n()}catch(d){Ut(d)}};function mn(){var n=ne,d={};for(let[f,b]of Object.entries(n))d[f]=typeof b=="function"?function(){Bt.push(f);try{return b.apply(null,arguments)}finally{ye||(Bt.pop(),mt&&wt===1&&Bt.length===0&&(wt=0,Ze+=1,Xt(vi),typeof Fibers<"u"&&Fibers.xc()))}}:b;return d}var wt=0,mt=null,fn=0,Bt=[],zr={},s={},m=0,g=null,v=[];function I(){return new Promise((n,d)=>{g={resolve:n,reject:d}})}function B(){var n=Ur(65548),d=n+12;c()[n>>>2>>>0]=d,c()[n+4>>>2>>>0]=d+65536,d=Bt[0];var f=zr[d];return f===void 0&&(f=m++,zr[d]=f,s[f]=d),d=f,a()[n+8>>>2>>>0]=d,n}function H(){var n=a()[mt+8>>>2>>>0];return n=ne[s[n]],--Ze,n()}function q(n){if(!ye){if(wt===0){var d=!1,f=!1;n((b=0)=>{if(!ye&&(fn=b,d=!0,f)){wt=2,Xt(()=>$i(mt)),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.resume(),b=!1;try{var C=H()}catch(L){C=L,b=!0}var O=!1;if(!mt){var V=g;V&&(g=null,(b?V.reject:V.resolve)(C),O=!0)}if(b&&!O)throw C}}),f=!0,d||(wt=1,mt=B(),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.pause(),Xt(()=>wi(mt)))}else wt===2?(wt=0,Xt(_i),At(mt),mt=null,v.forEach(b=>{if(!ye)try{b(),Wt()}catch(C){Cr(C)}})):Ut(`invalid state: ${wt}`);return fn}}function Q(n){return q(d=>{n().then(d)})}var Y=[],de={},be=n=>{var d=de[n];return d===void 0?pt(n):d},Te=()=>typeof globalThis=="object"?globalThis:Function("return this")(),R=n=>{var d=Y.length;return Y.push(n),d},ce=(n,d)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=pr(c()[d+4*b>>>2>>>0],"parameter "+b);return f},Ie=(n,d)=>Object.defineProperty(d,"name",{value:n});function Dt(n){var d=Function;if(!(d instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof d} which is not a function`);var f=Ie(d.name||"unknownFunctionName",function(){});return f.prototype=d.prototype,f=new f,n=d.apply(f,n),n instanceof Object?n:f}var Mt=n=>n%4===0&&(n%100!==0||n%400===0),Yo=[0,31,60,91,121,152,182,213,244,274,305,335],Zo=[0,31,59,90,120,151,181,212,243,273,304,334];function Xo(n,d,f,b,C,O,V){return T?_e(16,1,n,d,f,b,C,O,V):-52}function Jo(n,d,f,b,C,O){if(T)return _e(17,1,n,d,f,b,C,O)}var Qo=n=>{var d=tt(n)+1,f=Ur(d);return f&&Vt(n,f,d),f},Qn=[],ei=(n,d)=>{Qn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,d+=b&&d%8?4:0,Qn.push(f==112?c()[d>>>2>>>0]:f==106?Ne[d>>>3]:f==105?a()[d>>>2>>>0]:h()[d>>>3>>>0]),d+=b?8:4}return Qn},eo={},ti=()=>{if(!to){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:S||"./this.program"},d;for(d in eo)eo[d]===void 0?delete n[d]:n[d]=eo[d];var f=[];for(d in n)f.push(`${d}=${n[d]}`);to=f}return to},to;function ri(n,d){if(T)return _e(18,1,n,d);n>>>=0,d>>>=0;var f=0;return ti().forEach((b,C)=>{var O=d+f;for(C=c()[n+4*C>>>2>>>0]=O,O=0;O<b.length;++O)r()[C++>>>0>>>0]=b.charCodeAt(O);r()[C>>>0>>>0]=0,f+=b.length+1}),0}function ni(n,d){if(T)return _e(19,1,n,d);n>>>=0,d>>>=0;var f=ti();c()[n>>>2>>>0]=f.length;var b=0;return f.forEach(C=>b+=C.length+1),c()[d>>>2>>>0]=b,0}function oi(n){return T?_e(20,1,n):52}function ii(n,d,f,b){return T?_e(21,1,n,d,f,b):52}function ai(n,d,f,b){return T?_e(22,1,n,d,f,b):70}var jl=[null,[],[]];function si(n,d,f,b){if(T)return _e(23,1,n,d,f,b);d>>>=0,f>>>=0,b>>>=0;for(var C=0,O=0;O<f;O++){var V=c()[d>>>2>>>0],L=c()[d+4>>>2>>>0];d+=8;for(var ee=0;ee<L;ee++){var J=o()[V+ee>>>0],pe=jl[n];J===0||J===10?((n===1?Ee:Ae)(Sr(pe,0)),pe.length=0):pe.push(J)}C+=L}return c()[b>>>2>>>0]=C,0}var ui=[31,29,31,30,31,30,31,31,30,31,30,31],li=[31,28,31,30,31,30,31,31,30,31,30,31];function Kl(n){var d=Array(tt(n)+1);return Er(n,d,0,d.length),d}var Yl=(n,d)=>{r().set(n,d>>>0)};function di(n,d,f,b){function C(D,me,Oe){for(D=typeof D=="number"?D.toString():D||"";D.length<me;)D=Oe[0]+D;return D}function O(D,me){return C(D,me,"0")}function V(D,me){function Oe(xi){return 0>xi?-1:0<xi?1:0}var Jt;return(Jt=Oe(D.getFullYear()-me.getFullYear()))===0&&(Jt=Oe(D.getMonth()-me.getMonth()))===0&&(Jt=Oe(D.getDate()-me.getDate())),Jt}function L(D){switch(D.getDay()){case 0:return new Date(D.getFullYear()-1,11,29);case 1:return D;case 2:return new Date(D.getFullYear(),0,3);case 3:return new Date(D.getFullYear(),0,2);case 4:return new Date(D.getFullYear(),0,1);case 5:return new Date(D.getFullYear()-1,11,31);case 6:return new Date(D.getFullYear()-1,11,30)}}function ee(D){var me=D.Ab;for(D=new Date(new Date(D.Bb+1900,0,1).getTime());0<me;){var Oe=D.getMonth(),Jt=(Mt(D.getFullYear())?ui:li)[Oe];if(me>Jt-D.getDate())me-=Jt-D.getDate()+1,D.setDate(1),11>Oe?D.setMonth(Oe+1):(D.setMonth(0),D.setFullYear(D.getFullYear()+1));else{D.setDate(D.getDate()+me);break}}return Oe=new Date(D.getFullYear()+1,0,4),me=L(new Date(D.getFullYear(),0,4)),Oe=L(Oe),0>=V(me,D)?0>=V(Oe,D)?D.getFullYear()+1:D.getFullYear():D.getFullYear()-1}n>>>=0,d>>>=0,f>>>=0,b>>>=0;var J=c()[b+40>>>2>>>0];b={pc:a()[b>>>2>>>0],oc:a()[b+4>>>2>>>0],Gb:a()[b+8>>>2>>>0],Lb:a()[b+12>>>2>>>0],Hb:a()[b+16>>>2>>>0],Bb:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],Ab:a()[b+28>>>2>>>0],wc:a()[b+32>>>2>>>0],nc:a()[b+36>>>2>>>0],qc:J?ze(J):""},f=ze(f),J={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var pe in J)f=f.replace(new RegExp(pe,"g"),J[pe]);var Ce="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Re="January February March April May June July August September October November December".split(" ");J={"%a":D=>Ce[D.vb].substring(0,3),"%A":D=>Ce[D.vb],"%b":D=>Re[D.Hb].substring(0,3),"%B":D=>Re[D.Hb],"%C":D=>O((D.Bb+1900)/100|0,2),"%d":D=>O(D.Lb,2),"%e":D=>C(D.Lb,2," "),"%g":D=>ee(D).toString().substring(2),"%G":D=>ee(D),"%H":D=>O(D.Gb,2),"%I":D=>(D=D.Gb,D==0?D=12:12<D&&(D-=12),O(D,2)),"%j":D=>{for(var me=0,Oe=0;Oe<=D.Hb-1;me+=(Mt(D.Bb+1900)?ui:li)[Oe++]);return O(D.Lb+me,3)},"%m":D=>O(D.Hb+1,2),"%M":D=>O(D.oc,2),"%n":()=>`\n`,"%p":D=>0<=D.Gb&&12>D.Gb?"AM":"PM","%S":D=>O(D.pc,2),"%t":()=>"	","%u":D=>D.vb||7,"%U":D=>O(Math.floor((D.Ab+7-D.vb)/7),2),"%V":D=>{var me=Math.floor((D.Ab+7-(D.vb+6)%7)/7);if(2>=(D.vb+371-D.Ab-2)%7&&me++,me)me==53&&(Oe=(D.vb+371-D.Ab)%7,Oe==4||Oe==3&&Mt(D.Bb)||(me=1));else{me=52;var Oe=(D.vb+7-D.Ab-1)%7;(Oe==4||Oe==5&&Mt(D.Bb%400-1))&&me++}return O(me,2)},"%w":D=>D.vb,"%W":D=>O(Math.floor((D.Ab+7-(D.vb+6)%7)/7),2),"%y":D=>(D.Bb+1900).toString().substring(2),"%Y":D=>D.Bb+1900,"%z":D=>{D=D.nc;var me=0<=D;return D=Math.abs(D)/60,(me?"+":"-")+("0000"+(D/60*100+D%60)).slice(-4)},"%Z":D=>D.qc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(pe in J)f.includes(pe)&&(f=f.replace(new RegExp(pe,"g"),J[pe](b)));return f=f.replace(/\\0\\0/g,"%"),pe=Kl(f),pe.length>d?0:(Yl(pe,n),pe.length-1)}le.Ib();for(var ci=Array(256),hn=0;256>hn;++hn)ci[hn]=String.fromCharCode(hn);Rr=ci,rt=l.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},l.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},Object.assign(lr.prototype,{get(n){return this.wb[n]},has(n){return this.wb[n]!==void 0},Kb(n){var d=this.Nb.pop()||this.wb.length;return this.wb[d]=n,d},Mb(n){this.wb[n]=void 0,this.Nb.push(n)}}),nt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),nt.Db=nt.wb.length,l.count_emval_handles=()=>{for(var n=0,d=nt.Db;d<nt.wb.length;++d)nt.wb[d]!==void 0&&++n;return n};var Zl=[at,Yr,Tr,Xr,bt,Pr,Or,Jr,ar,Qr,en,tn,rn,kr,Kt,nn,Xo,Jo,ri,ni,oi,ii,ai,si],Xl={ua:function(n,d,f){return Q(async()=>{await l.dc(n,d,f)})},b:function(n,d,f){throw n>>>=0,new Zn(n).Ib(d>>>0,f>>>0),Zr=n,Ir++,Zr},ga:function(n){fi(n>>>0,!x,1,!A,131072,!1),le.Ub()},F:function(n){n>>>=0,T?postMessage({cmd:"cleanupThread",thread:n}):le.Sb(le.pb[n])},Y:jt,z:Xr,ma:bt,U:Pr,W:Or,N:Jr,ka:ar,da:Qr,ja:en,H:tn,V:rn,S:kr,la:Kt,T:nn,K:function(n,d,f,b,C){n>>>=0,d>>>=0,f>>>=0,d=pt(d);var O=d.indexOf("u")!=-1;O&&(C=(1n<<64n)-1n),gt(n,{name:d,fromWireType:V=>V,toWireType:function(V,L){if(typeof L!="bigint"&&typeof L!="number")throw new TypeError(`Cannot convert "${sr(L)}" to ${this.name}`);if(L<b||L>C)throw new TypeError(`Passing a number "${sr(L)}" from JS side to C/C++ side to an argument of type "${d}", which is outside the valid range [${b}, ${C}]!`);return L},argPackAdvance:8,readValueFromPointer:Dr(d,f,!O),Cb:null})},sa:function(n,d,f,b){n>>>=0,d=pt(d>>>0),gt(n,{name:d,fromWireType:function(C){return!!C},toWireType:function(C,O){return O?f:b},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(o()[C>>>0])},Cb:null})},ra:function(n,d){n>>>=0,d=pt(d>>>0),gt(n,{name:d,fromWireType:f=>{var b=Xe(f);return Yt(f),b},toWireType:(f,b)=>ot(b),argPackAdvance:8,readValueFromPointer:an,Cb:null})},J:function(n,d,f){n>>>=0,f>>>=0,d=pt(d>>>0),gt(n,{name:d,fromWireType:b=>b,toWireType:(b,C)=>C,argPackAdvance:8,readValueFromPointer:sn(d,f),Cb:null})},v:function(n,d,f,b,C){if(n>>>=0,f>>>=0,d=pt(d>>>0),C===-1&&(C=4294967295),C=L=>L,b===0){var O=32-8*f;C=L=>L<<O>>>O}var V=d.includes("unsigned")?function(L,ee){return ee>>>0}:function(L,ee){return ee};gt(n,{name:d,fromWireType:C,toWireType:V,argPackAdvance:8,readValueFromPointer:Dr(d,f,b!==0),Cb:null})},o:function(n,d,f){function b(O){var V=c()[O>>>2>>>0];return O=c()[O+4>>>2>>>0],new C(r().buffer,O,V)}n>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][d];f=pt(f>>>0),gt(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Zb:!0})},L:function(n,d){n>>>=0,d=pt(d>>>0);var f=d==="std::string";gt(n,{name:d,fromWireType:function(b){var C=c()[b>>>2>>>0],O=b+4;if(f)for(var V=O,L=0;L<=C;++L){var ee=O+L;if(L==C||o()[ee>>>0]==0){if(V=ze(V,ee-V),J===void 0)var J=V;else J+=String.fromCharCode(0),J+=V;V=ee+1}}else{for(J=Array(C),L=0;L<C;++L)J[L]=String.fromCharCode(o()[O+L>>>0]);J=J.join("")}return At(b),J},toWireType:function(b,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var O=typeof C=="string";if(!(O||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new rt("Cannot pass non-string to std::string");var V=f&&O?tt(C):C.length,L=Ur(4+V+1),ee=L+4;if(c()[L>>>2>>>0]=V,f&&O)Vt(C,ee,V+1);else if(O)for(O=0;O<V;++O){var J=C.charCodeAt(O);if(255<J)throw At(ee),new rt("String has UTF-16 code units that do not fit in 8 bits");o()[ee+O>>>0]=J}else for(O=0;O<V;++O)o()[ee+O>>>0]=C[O];return b!==null&&b.push(At,L),L},argPackAdvance:8,readValueFromPointer:un,Cb(b){At(b)}})},B:function(n,d,f){if(n>>>=0,d>>>=0,f>>>=0,f=pt(f),d===2)var b=dn,C=cn,O=dr,V=()=>u(),L=1;else d===4&&(b=Jn,C=ae,O=pn,V=()=>c(),L=2);gt(n,{name:f,fromWireType:ee=>{for(var J=c()[ee>>>2>>>0],pe=V(),Ce,Re=ee+4,D=0;D<=J;++D){var me=ee+4+D*d;(D==J||pe[me>>>L]==0)&&(Re=b(Re,me-Re),Ce===void 0?Ce=Re:(Ce+=String.fromCharCode(0),Ce+=Re),Re=me+d)}return At(ee),Ce},toWireType:(ee,J)=>{if(typeof J!="string")throw new rt(`Cannot pass non-string to C++ string type ${f}`);var pe=O(J),Ce=Ur(4+pe+d);return c()[Ce>>>2]=pe>>L,C(J,Ce+4,pe+d),ee!==null&&ee.push(At,Ce),Ce},argPackAdvance:8,readValueFromPointer:an,Cb(ee){At(ee)}})},ta:function(n,d){n>>>=0,d=pt(d>>>0),gt(n,{$b:!0,name:d,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(n,d){n>>>=0,n==d>>>0?setTimeout(()=>Zt()):T?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=le.pb[n])&&n.postMessage({cmd:"checkMailbox"})},Z:function(n,d,f,b){d>>>=0,f/=2,cr.length=f,b=b>>>0>>>3;for(var C=0;C<f;C++)cr[C]=Ne[b+2*C]?Ne[b+2*C+1]:h()[b+2*C+1>>>0];return n=0>n?qt[-n-1]:Zl[n],le.Xb=d,d=n.apply(null,cr),le.Xb=0,d},fa:st,pa:function(n){P&&le.pb[n>>>0].ref()},t:function(n,d,f){return d>>>=0,f>>>=0,n=Xe(n>>>0),d=pr(d,"emval::as"),Mr(d,f,n)},y:function(n){return n>>>=0,Q(()=>(n=Xe(n),n.then(ot)))},p:function(n,d,f,b){return f>>>=0,b>>>=0,n=Y[n>>>0],d=Xe(d>>>0),n(null,d,f,b)},k:function(n,d,f,b,C){return f>>>=0,b>>>=0,C>>>=0,n=Y[n>>>0],d=Xe(d>>>0),f=be(f),n(d,d[f],b,C)},c:Yt,C:function(n,d){return d>>>=0,n=Xe(n>>>0),d=Xe(d),n==d},n:function(n){return n>>>=0,n===0?ot(Te()):(n=be(n),ot(Te()[n]))},j:function(n,d,f){d=ce(n,d>>>0);var b=d.shift();n--;var C=`return function (obj, func, destructorsRef, args) {\n`,O=0,V=[];f===0&&V.push("obj");for(var L=["retType"],ee=[b],J=0;J<n;++J)V.push("arg"+J),L.push("argType"+J),ee.push(d[J]),C+=`  var arg${J} = argType${J}.readValueFromPointer(args${O?"+"+O:""});\n`,O+=d[J].argPackAdvance;for(C+=`  var rv = ${f===1?"new func":"func.call"}(${V.join(", ")});\n`,J=0;J<n;++J)d[J].deleteObject&&(C+=`  argType${J}.deleteObject(arg${J});\n`);return b.$b||(L.push("emval_returnValue"),ee.push(Mr),C+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),L.push(C+`};\n`),n=Dt(L).apply(null,ee),f=`methodCaller<(${d.map(pe=>pe.name).join(", ")}) => ${b.name}>`,R(Ie(f,n))},s:function(n,d){return d>>>=0,n=Xe(n>>>0),d=Xe(d),ot(n[d])},e:function(n){n>>>=0,4<n&&(nt.get(n).Rb+=1)},w:function(){return ot([])},m:function(n){n=Xe(n>>>0);for(var d=Array(n.length),f=0;f<n.length;f++)d[f]=n[f];return ot(d)},f:function(n){return ot(be(n>>>0))},l:function(){return ot({})},i:function(n){n>>>=0;for(var d=Xe(n);d.length;){var f=d.pop();d.pop()(f)}Yt(n)},h:function(n,d,f){d>>>=0,f>>>=0,n=Xe(n>>>0),d=Xe(d),f=Xe(f),n[d]=f},d:function(n,d){return d>>>=0,n=pr(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(d),ot(n)},aa:function(n,d){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),d>>>=0,n=new Date(1e3*n),a()[d>>>2>>>0]=n.getUTCSeconds(),a()[d+4>>>2>>>0]=n.getUTCMinutes(),a()[d+8>>>2>>>0]=n.getUTCHours(),a()[d+12>>>2>>>0]=n.getUTCDate(),a()[d+16>>>2>>>0]=n.getUTCMonth(),a()[d+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[d+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[d+28>>>2>>>0]=n},ba:function(n,d){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),d>>>=0,n=new Date(1e3*n),a()[d>>>2>>>0]=n.getSeconds(),a()[d+4>>>2>>>0]=n.getMinutes(),a()[d+8>>>2>>>0]=n.getHours(),a()[d+12>>>2>>>0]=n.getDate(),a()[d+16>>>2>>>0]=n.getMonth(),a()[d+20>>>2>>>0]=n.getFullYear()-1900,a()[d+24>>>2>>>0]=n.getDay();var f=(Mt(n.getFullYear())?Yo:Zo)[n.getMonth()]+n.getDate()-1|0;a()[d+28>>>2>>>0]=f,a()[d+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[d+32>>>2>>>0]=n},ca:function(n){n>>>=0;var d=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=d.getTimezoneOffset(),C=new Date(d.getFullYear(),6,1).getTimezoneOffset(),O=new Date(d.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(O,C);return 0>f?a()[n+32>>>2>>>0]=+(C!=O&&V==b):0<f!=(V==b)&&(C=Math.max(O,C),d.setTime(d.getTime()+6e4*((0<f?V:C)-b))),a()[n+24>>>2>>>0]=d.getDay(),f=(Mt(d.getFullYear())?Yo:Zo)[d.getMonth()]+d.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=d.getSeconds(),a()[n+4>>>2>>>0]=d.getMinutes(),a()[n+8>>>2>>>0]=d.getHours(),a()[n+12>>>2>>>0]=d.getDate(),a()[n+16>>>2>>>0]=d.getMonth(),a()[n+20>>>2>>>0]=d.getYear(),n=d.getTime(),isNaN(n)?(a()[pi()>>>2>>>0]=61,n=-1):n/=1e3,BigInt(n)},_:Xo,$:Jo,P:function(n,d,f){function b(J){return(J=J.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?J[1]:"GMT"}n>>>=0,d>>>=0,f>>>=0;var C=new Date().getFullYear(),O=new Date(C,0,1),V=new Date(C,6,1);C=O.getTimezoneOffset();var L=V.getTimezoneOffset(),ee=Math.max(C,L);c()[n>>>2>>>0]=60*ee,a()[d>>>2>>>0]=+(C!=L),n=b(O),d=b(V),n=Qo(n),d=Qo(d),L<C?(c()[f>>>2>>>0]=n,c()[f+4>>>2>>>0]=d):(c()[f>>>2>>>0]=d,c()[f+4>>>2>>>0]=n)},q:()=>{Ut("")},g:function(n,d,f){return n>>>=0,d=ei(d>>>0,f>>>0),qt[n].apply(null,d)},M:function(n,d,f){return n>>>=0,d=ei(d>>>0,f>>>0),qt[n].apply(null,d)},G:()=>{},I:()=>Date.now(),oa:()=>{throw Ze+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>P?(ki(),mr(Oi)).cpus().length:navigator.hardwareConcurrency,O:function(n){n>>>=0;var d=o().length;if(n<=d||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=d*(1+.2/f);b=Math.min(b,n+100663296);var C=Math;b=Math.max(n,b);e:{C=(C.min.call(C,4294901760,b+(65536-b%65536)%65536)-te.buffer.byteLength+65535)/65536;try{te.grow(C),et();var O=1;break e}catch{}O=void 0}if(O)return!0}return!1},ha:ri,ia:ni,X:or,A:oi,E:ii,ea:ai,D:si,a:te||l.wasmMemory,na:di,r:function(n,d,f,b){return di(n>>>0,d>>>0,f>>>0,b>>>0)}},ne=function(){function n(f,b){return ne=f.exports,ne=mn(),ne=Jl(),le.Vb.push(ne.bb),ct.unshift(ne.va),Me=b,br(),ne}var d={a:Xl};if(xt++,l.instantiateWasm)try{return l.instantiateWasm(d,n)}catch(f){Ae(`Module.instantiateWasm callback failed with error: ${f}`),w(f)}return vr(d,function(f){n(f.instance,f.module)}).catch(w),{}}();l._OrtInit=(n,d)=>(l._OrtInit=ne.wa)(n,d),l._OrtGetLastError=(n,d)=>(l._OrtGetLastError=ne.xa)(n,d),l._OrtCreateSessionOptions=(n,d,f,b,C,O,V,L,ee,J)=>(l._OrtCreateSessionOptions=ne.ya)(n,d,f,b,C,O,V,L,ee,J),l._OrtAppendExecutionProvider=(n,d)=>(l._OrtAppendExecutionProvider=ne.za)(n,d),l._OrtAddFreeDimensionOverride=(n,d,f)=>(l._OrtAddFreeDimensionOverride=ne.Aa)(n,d,f),l._OrtAddSessionConfigEntry=(n,d,f)=>(l._OrtAddSessionConfigEntry=ne.Ba)(n,d,f),l._OrtReleaseSessionOptions=n=>(l._OrtReleaseSessionOptions=ne.Ca)(n),l._OrtCreateSession=(n,d,f)=>(l._OrtCreateSession=ne.Da)(n,d,f),l._OrtReleaseSession=n=>(l._OrtReleaseSession=ne.Ea)(n),l._OrtGetInputOutputCount=(n,d,f)=>(l._OrtGetInputOutputCount=ne.Fa)(n,d,f),l._OrtGetInputName=(n,d)=>(l._OrtGetInputName=ne.Ga)(n,d),l._OrtGetOutputName=(n,d)=>(l._OrtGetOutputName=ne.Ha)(n,d),l._OrtFree=n=>(l._OrtFree=ne.Ia)(n),l._OrtCreateTensor=(n,d,f,b,C,O)=>(l._OrtCreateTensor=ne.Ja)(n,d,f,b,C,O),l._OrtGetTensorData=(n,d,f,b,C)=>(l._OrtGetTensorData=ne.Ka)(n,d,f,b,C),l._OrtReleaseTensor=n=>(l._OrtReleaseTensor=ne.La)(n),l._OrtCreateRunOptions=(n,d,f,b)=>(l._OrtCreateRunOptions=ne.Ma)(n,d,f,b),l._OrtAddRunConfigEntry=(n,d,f)=>(l._OrtAddRunConfigEntry=ne.Na)(n,d,f),l._OrtReleaseRunOptions=n=>(l._OrtReleaseRunOptions=ne.Oa)(n),l._OrtCreateBinding=n=>(l._OrtCreateBinding=ne.Pa)(n),l._OrtBindInput=(n,d,f)=>(l._OrtBindInput=ne.Qa)(n,d,f),l._OrtBindOutput=(n,d,f,b)=>(l._OrtBindOutput=ne.Ra)(n,d,f,b),l._OrtClearBoundOutputs=n=>(l._OrtClearBoundOutputs=ne.Sa)(n),l._OrtReleaseBinding=n=>(l._OrtReleaseBinding=ne.Ta)(n),l._OrtRunWithBinding=(n,d,f,b,C)=>(l._OrtRunWithBinding=ne.Ua)(n,d,f,b,C),l._OrtRun=(n,d,f,b,C,O,V,L)=>(l._OrtRun=ne.Va)(n,d,f,b,C,O,V,L),l._OrtEndProfiling=n=>(l._OrtEndProfiling=ne.Wa)(n),l._JsepOutput=(n,d,f)=>(l._JsepOutput=ne.Xa)(n,d,f),l._JsepGetNodeName=n=>(l._JsepGetNodeName=ne.Ya)(n);var pi=()=>(pi=ne.Za)(),gn=l._pthread_self=()=>(gn=l._pthread_self=ne._a)(),Ur=l._malloc=n=>(Ur=l._malloc=ne.$a)(n),At=l._free=n=>(At=l._free=ne.ab)(n);l.__emscripten_tls_init=()=>(l.__emscripten_tls_init=ne.bb)();var mi=n=>(mi=ne.cb)(n);l.__embind_initialize_bindings=()=>(l.__embind_initialize_bindings=ne.db)();var fi=l.__emscripten_thread_init=(n,d,f,b,C,O)=>(fi=l.__emscripten_thread_init=ne.fb)(n,d,f,b,C,O);l.__emscripten_thread_crashed=()=>(l.__emscripten_thread_crashed=ne.gb)();var hi=(n,d,f,b)=>(hi=ne.hb)(n,d,f,b),ro=n=>(ro=ne.ib)(n),no=l.__emscripten_thread_exit=n=>(no=l.__emscripten_thread_exit=ne.jb)(n),gi=()=>(gi=ne.kb)(),yi=(n,d)=>(yi=ne.lb)(n,d),oo=()=>(oo=ne.mb)(),yn=n=>(yn=ne.nb)(n),io=n=>(io=ne.ob)(n),bi=l.dynCall_ii=(n,d)=>(bi=l.dynCall_ii=ne.qb)(n,d),wi=n=>(wi=ne.rb)(n),vi=()=>(vi=ne.sb)(),$i=n=>($i=ne.tb)(n),_i=()=>(_i=ne.ub)();l.___start_em_js=920363,l.___stop_em_js=920524;function Jl(){var n=ne;n=Object.assign({},n);var d=b=>()=>b()>>>0,f=b=>C=>b(C)>>>0;return n.Za=d(n.Za),n._a=d(n._a),n.$a=f(n.$a),n.cb=f(n.cb),n.emscripten_main_runtime_thread_id=d(n.emscripten_main_runtime_thread_id),n.mb=d(n.mb),n.ob=f(n.ob),n}l.wasmMemory=te,l.stackAlloc=io,l.stackSave=oo,l.stackRestore=yn,l.keepRuntimeAlive=()=>0<Ze,l.UTF8ToString=ze,l.stringToUTF8=Vt,l.lengthBytesUTF8=tt,l.ExitStatus=$r,l.PThread=le;var bn;Ft=function n(){bn||Si(),bn||(Ft=n)};function Si(){if(!(0<xt))if(T)y(l),T||ir(ct),startWorker(l);else{if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)qe.unshift(l.preRun.shift());ir(qe),0<xt||bn||(bn=!0,l.calledRun=!0,ye||(T||ir(ct),y(l),T||ir(zt)))}}return Si(),t.ready}})();typeof Bi=="object"&&typeof mo=="object"?mo.exports=Ri:typeof define=="function"&&define.amd&&define([],()=>Ri)});var Mi=Vr((lm,sd)=>{sd.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var go,Nt,Nr,$n,Gr,Gi,yo,fe=K(()=>{"use strict";go=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Nt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Nr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],$n=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Gr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Gi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",yo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var _n=K(()=>{"use strict"});var Li=K(()=>{"use strict";_n()});var Fi,qi=K(()=>{"use strict";Fi="1.18.0"});var ji,ft,bo=K(()=>{"use strict";qi();ji="warning",ft={wasm:{},webgl:{},webgpu:{},versions:{common:Fi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);ji=e}},get logLevel(){return ji}};Object.defineProperty(ft,"logLevel",{enumerable:!0})});var fr,Ki=K(()=>{"use strict";bo();fr=ft});var Yi=K(()=>{"use strict"});var Zi=K(()=>{"use strict";Sn()});var Ji=K(()=>{"use strict"});var Qi=K(()=>{"use strict";Sn()});var Sn=K(()=>{"use strict";Yi();Zi();Ji();Qi()});var xn=K(()=>{"use strict";Sn()});var wo,ea,Qt,Gt,vo=K(()=>{"use strict";bo();wo=(e,t)=>{(typeof ft.trace>"u"?!ft.wasm.trace:!ft.trace)||console.timeStamp(`${e}::ORT::${t}`)},ea=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),wo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},Qt=e=>{(typeof ft.trace>"u"?!ft.wasm.trace:!ft.trace)||ea("BEGIN",e)},Gt=e=>{(typeof ft.trace>"u"?!ft.wasm.trace:!ft.trace)||ea("END",e)}});var ta=K(()=>{"use strict";_n();xn();vo()});var ra=K(()=>{"use strict";ta()});var na=K(()=>{"use strict"});var oa=K(()=>{"use strict"});var ia=K(()=>{"use strict"});var aa=K(()=>{"use strict"});var sa=K(()=>{"use strict";_n();xn()});var ua=K(()=>{"use strict";sa()});var hr=K(()=>{"use strict";Li();Ki();ra();xn();na();oa();vo();ia();aa();ua()});var bd,wd,la,da,ca,vd,Ve,Ht=K(()=>{"use strict";fe();bd=["V","I","W","E","F"],wd=(e,t)=>{console.log(`[${bd[e]},${new Date().toISOString()}]${t}`)},ca=(e,t)=>{la=e,da=t},vd=(e,t)=>{let r=Gr(e),o=Gr(la);r>=o&&wd(r,typeof t=="function"?t():t)},Ve=(...e)=>{da&&vd(...e)}});var pa,ma=K(()=>{"use strict";fe();pa=(e,t)=>new($n(t))(e)});var Cn=K(()=>{"use strict"});var An,$d,fa,_o,$o,ga,ya=K(()=>{"use strict";Ht();Cn();An=e=>Math.ceil(e/16)*16,$d=1,fa=()=>$d++,_o=async(e,t,r,o)=>{let i=An(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let c=u.getMappedRange();if(o){let p=o();return p.set(new Uint8Array(c,0,r)),p}else return new Uint8Array(c.slice(0,r))}finally{u.destroy()}},$o=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=An(u),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${u}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=p.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),p.unmap();let l=this.backend.getCommandEncoder();this.backend.endComputePass(),l.copyBufferToBuffer(p,0,c.gpuData.buffer,0,a),Ve("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(p)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=An(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else i=fa();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ve("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=An(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let p=u?this.freeBuffers:this.freeUniformBuffers,h=p.get(o);h||(h=[],p.set(o,h)),h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let c={id:fa(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Ve("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ve("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await _o(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},ga=(...e)=>new $o(...e)});var So,we,Ke=K(()=>{"use strict";So=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},we=e=>new So(e)});var xo,It,M,er,In,Tn,En,Se=K(()=>{"use strict";xo=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},It=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),c=new Array(a);if(o){if(i<2||u<2)return;let p=xo.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(p===void 0)return;[c[a-2],c[a-1]]=p}for(let p=o?3:1;p<=a;p++){let h=i-p<0?1:t[i-p],l=u-p<0?1:r[u-p];if(h!==l&&h>1&&l>1)return;let y=Math.max(h,l);if(h&&l)c[a-p]=Math.max(h,l);else{if(y>1)return;c[a-p]=0}}return c}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},M=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let i=new Array(o),u=o-1;for(;u>=0;){if(t[u]%r===0){i[u]=t[u]/r;break}if(r%t[u]!==0)throw new Error("cannot convert shape");i[u]=1,r/=t[u],u--}for(u--;u>=0;u--)i[u]=t[u];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},er=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<o.length;c++)if(c<u.length){if(u[c]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let c=0;c<o.length*2;c++)if(c<a.length){if(a[c]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[c]>=o[c]||a[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,c){if(c){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)e.adjustPadAndReturnShape(t[p+(a?1:2)],r[p],o[p],i[p],u,p,p+t.length-2,c)}}static computePoolOutputShape(t,r,o,i,u,a,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return e.computeShapeHelper(t,r,p,o,i,u,a,c),p}static computeConvOutputShape(t,r,o,i,u,a,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return e.computeShapeHelper(!1,t,p,o,i,u,a,c),p}static computeShapeHelper(t,r,o,i,u,a,c,p){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],c,h,h+r.length-2,p))}static adjustPadAndReturnShape(t,r,o,i,u,a,c,p){let h=o*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return u[a]=0,u[c]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(p==="SAME_LOWER"?(y+1)/2:y/2),u[c]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[c]-h)/r+1)}},In=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,c,p;r?(a=t[1],c=t[0]):(a=t[0],c=t[1]);let h=-1;if(i?(p=o[0],h=1):(p=o[1],h=0),o[h]!==c)throw new Error("dimension mismatch");if(a<=0||p<=0||c<=0)throw new Error("invalid shape specified");if(u&&!It.isValidBroadcast(u,[a,p]))throw new Error("gemm: invalid bias shape for broadcast");return[a,p,c]}},Tn=-34028234663852886e22,En=34028234663852886e22});var tr,Ao,De,ut,Z,We,Je,vt,lt,se,Io,z,j,Pn,Co,ba,gr,$e=K(()=>{"use strict";fe();Se();tr=64,Ao=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},De=(e,t=1)=>{let r=Ao(e,t);return typeof r=="string"?r:r[0]},ut=(e,t=1)=>{let r=Ao(e,t);return typeof r=="string"?r:r[1]},Z=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:M.computeStrides(r)})}),t},We=e=>e%4===0?4:e%2===0?2:1,Je=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,vt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,lt=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,se=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Io=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,c=[...new Array(a).keys()],p=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=Ao(t,i),l=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],w={indices:p,value:l,storage:y,tensor:t},_=F=>typeof F=="string"?F:`${F}u`,$={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=u?"uniforms.":"",E=`${S}${e}_shape`,A=`${S}${e}_strides`,x="";for(let F=0;F<a-1;F++)x+=`\n    let dim${F} = current / ${se(A,F,a)};\n    let rest${F} = current % ${se(A,F,a)};\n    indices[${F}] = dim${F};\n    current = rest${F};\n    `;x+=`indices[${a-1}] = current;`;let P=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${x}\n    return indices;\n  }`,T=F=>($.offsetToIndices=!0,a<2?F:`o2i_${e}(${F})`),k=[];if(a>=2)for(let F=a-1;F>=0;F--)k.push(`${se(A,F,a)} * (indices[${F}])`);let W=a<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${k.join("+")};\n  }`,N=F=>($.indicesToOffset=!0,a<2?F:`i2o_${e}(${F})`),G=(...F)=>a===0?"0u":`${w.indices}(${F.map(_).join(",")})`,oe=(F,ie)=>a<2?`${F}`:`${se(F,ie,a)}`,X=(F,ie,xe)=>a<2?`${F}=${xe};`:`${se(F,ie,a)}=${xe};`,U={},re=(F,ie)=>{$.broadcastedIndicesToOffset=!0;let xe=`${ie.name}broadcastedIndicesTo${e}Offset`;if(xe in U)return`${xe}(${F})`;let Ne=[];for(let Ye=a-1;Ye>=0;Ye--){let dt=ie.indicesGet("outputIndices",Ye+ie.rank-a);Ne.push(`${oe(A,Ye)} * (${dt} % ${oe(E,Ye)})`)}return U[xe]=`fn ${xe}(outputIndices: ${ie.type.indices}) -> u32 {\n             return ${Ne.length>0?Ne.join("+"):"0u"};\n           }`,`${xe}(${F})`},Be=(F,ie)=>(()=>{if(w.storage===w.value)return`${e}[${F}]=${ie};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${F}]=vec2<u32>(u32(${ie}), select(0u, 0xFFFFFFFFu, ${ie} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${F}]=vec2<u32>(u32(${ie}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${F}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ie}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),Ee=F=>(()=>{if(w.storage===w.value)return`${e}[${F}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${F}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${F}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${F}] & 0xFFu), bool(${e}[${F}] & 0xFF00u), bool(${e}[${F}] & 0xFF0000u), bool(${e}[${F}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),Ae=a<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${l} {\n    return ${Ee(`i2o_${e}(indices)`)};\n  }`,te=a<2?"":(()=>{let F=c.map(xe=>`d${xe}: u32`).join(", "),ie=c.map(xe=>`d${xe}`).join(", ");return`\n  fn get_${e}(${F}) -> ${l} {\n    return get_${e}ByIndices(${G(ie)});\n  }`})(),Me=(...F)=>{if(F.length!==a)throw new Error(`indices length must be ${a}`);let ie=F.map(_).join(",");return a===0?Ee("0u"):a===1?Ee(ie[0]):($.get=!0,$.getByIndices=!0,$.indicesToOffset=!0,`get_${e}(${ie})`)},ye=F=>a<2?Ee(F):($.getByIndices=!0,$.indicesToOffset=!0,`get_${e}ByIndices(${F})`),he=a<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${l}) {\n    ${Be(`i2o_${e}(indices)`,"value")}\n  }`,ue=a<2?"":(()=>{let F=c.map(xe=>`d${xe}: u32`).join(", "),ie=c.map(xe=>`d${xe}`).join(", ");return`\n  fn set_${e}(${F}, value: ${l}) {\n    set_${e}ByIndices(${G(ie)}, value);\n  }`})();return{impl:()=>{let F=[],ie=!1;return $.offsetToIndices&&(F.push(P),ie=!0),$.indicesToOffset&&(F.push(W),ie=!0),$.broadcastedIndicesToOffset&&(Object.values(U).forEach(xe=>F.push(xe)),ie=!0),$.set&&(F.push(ue),ie=!0),$.setByIndices&&(F.push(he),ie=!0),$.get&&(F.push(te),ie=!0),$.getByIndices&&(F.push(Ae),ie=!0),!u&&ie&&F.unshift(`const ${E} = ${w.indices}(${r.join(",")});`,`const ${A} = ${w.indices}(${M.computeStrides(r).join(",")});`),F.join(`\n`)},type:w,offsetToIndices:T,indicesToOffset:N,broadcastedIndicesToOffset:re,indices:G,indicesGet:oe,indicesSet:X,set:(...F)=>{if(F.length!==a+1)throw new Error(`indices length must be ${a}`);let ie=F[a];if(typeof ie!="string")throw new Error("value must be string");let xe=F.slice(0,a).map(_).join(",");return a===0?Be("0u",ie):a===1?Be(xe[0],ie):($.set=!0,$.setByIndices=!0,$.indicesToOffset=!0,`set_${e}(${xe}, ${ie})`)},setByOffset:Be,setByIndices:(F,ie)=>a<2?Be(F,ie):($.setByIndices=!0,$.indicesToOffset=!0,`set_${e}ByIndices(${F}, ${ie});`),get:Me,getByOffset:Ee,getByIndices:ye,usage:o,name:e,strides:A,shape:E,rank:a}},z=(e,t,r,o=1)=>Io(e,t,r,"input",o),j=(e,t,r,o=1)=>Io(e,t,r,"output",o),Pn=(e,t,r,o=1)=>Io(e,t,r,"internal",o),Co=class{constructor(t,r){this.normalizedDispatchGroup=t;this.limits=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=tr){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||o>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*o*i>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},ba=(e,t)=>new Co(e,t),gr=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var _d,wa,Sd,xd,yt,va,$a,yr=K(()=>{"use strict";fe();Se();Ke();$e();_d=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},wa=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Sd=(e,t)=>M.sortBasedOnPerm(e,wa(e.length,t)),xd=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=wa(o,t),u=Sd(e.dims,i),a=j("output",r,u.length),c=z("a",r,o),p=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(c,a)}\n\n  ${xd(i,o,c,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",c.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let l=M.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},...Z(h[0].dims,u)]}},getShaderSource:p}},va=(e,t)=>{_d(e.inputs),e.compute(yt(e.inputs[0],t.perm))},$a=e=>we({perm:e.perm})});var Cd,Ad,Id,Td,Ed,Pd,Od,kd,Rd,Bd,Tt,_a,Sa,xa,Ca,Aa,Ia,Ta,Ea,Pa,Oa,ka=K(()=>{"use strict";fe();Se();$e();On();yr();Cd={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Ad={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Id={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Td={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Ed=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Pd=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},Od=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},kd=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Rd=(e,t)=>{let r=[];if(!kd(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Bd=(e,t,r,o,i,u,a)=>{let c=r[0].dims,p=M.size(u),h=M.size(a),l=z("_A",r[0].dataType,c),y=j("output",i,u),w=32,_=`\n          var<workgroup> aBestValues : array<f32, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:S=>`\n        ${S.registerUniform("reduceSize","u32").declareVariables(l,y)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${S.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Id[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = f32(${l.getByOffset("offset + k")});\n           bestValue = ${Cd[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${Ad[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`${y.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${y.type.storage}(${Td[o]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},Tt=(e,t,r,o)=>{let i=e.inputs.length===1?r:To(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((_,$)=>$));let a=M.normalizeAxes(u,e.inputs[0].dims.length),c=a,p=e.inputs[0],h=Rd(c,e.inputs[0].dims.length);h.length>0&&(p=e.compute(yt(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],c=Ed(c.length,p.dims.length));let[l,y]=Pd(p.dims,c),w=l;i.keepDims&&(w=Od(l,a)),e.compute(Bd(t,{hint:i.cacheKey,inputDependencies:["type"]},[p],o,e.inputs[0].dataType,w,y),{inputs:[p]})},_a=(e,t)=>{Tt(e,"ReduceMeanShared",t,"mean")},Sa=(e,t)=>{Tt(e,"ReduceL1Shared",t,"l1")},xa=(e,t)=>{Tt(e,"ReduceL2Shared",t,"l2")},Ca=(e,t)=>{Tt(e,"ReduceLogSumExpShared",t,"logSumExp")},Aa=(e,t)=>{Tt(e,"ReduceMaxShared",t,"max")},Ia=(e,t)=>{Tt(e,"ReduceMinShared",t,"min")},Ta=(e,t)=>{Tt(e,"ReduceProdShared",t,"prod")},Ea=(e,t)=>{Tt(e,"ReduceSumShared",t,"sum")},Pa=(e,t)=>{Tt(e,"ReduceSumSquareShared",t,"sumSquare")},Oa=(e,t)=>{Tt(e,"ReduceLogSumShared",t,"logSum")}});var Et,Dd,kn,To,Pt,Md,zd,Ud,Vd,Wd,Nd,Gd,Hd,Ld,Fd,Ot,Ra,Ba,Da,Ma,za,Ua,Va,Wa,Na,Ga,On=K(()=>{"use strict";fe();Se();Ke();$e();ka();Et=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Dd=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],kn=(e,t,r,o,i,u,a=!1,c=!1)=>{let p=[],h=r[0].dims,l=h.length,y=M.normalizeAxes(i,l),w=!c&&y.length===0;h.forEach((E,A)=>{w||y.indexOf(A)>=0?a&&p.push(1):p.push(E)});let _=p.length,$=M.size(p);return{name:e,shaderCache:t,getShaderSource:E=>{let A=[],x=z("_A",r[0].dataType,l),P=j("output",u,_),T=o(x,P,y),k=T[2];for(let W=0,N=0;W<l;W++)w||y.indexOf(W)>=0?(a&&N++,k=`for(var j${W}: u32 = 0; j${W} < ${h[W]}; j${W}++) {\n                  ${T[2].includes("last_index")?`let last_index = j${W};`:""}\n                  ${x.indicesSet("input_indices",W,`j${W}`)}\n                  ${k}\n                }`):(A.push(`${x.indicesSet("input_indices",W,P.indicesGet("output_indices",N))};`),N++);return`\n\n        ${E.registerUniform("output_size","u32").declareVariables(x,P)}\n\n        ${E.mainStart()}\n          ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${x.type.indices};\n          let output_indices = ${P.offsetToIndices("global_idx")};\n\n          ${A.join(`\n`)}\n          ${T[0]}       // init ops for reduce max/min\n          ${T[1]}\n          ${k}\n          ${T[3]}\n          ${T.length===4?P.setByOffset("global_idx","value"):T.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:p,dataType:u}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:[{type:12,data:$},...Z(h,p)]})}},To=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),we({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Pt=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:To(i,r);e.compute(kn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?Dd:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},Md=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},zd=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Ud=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Vd=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Wd=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",c,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},Nd=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&(a*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},Gd=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Hd=(e,t)=>{Et(e.inputs),Pt(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Ld=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Fd=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Ot=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},Ra=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Nd(e,t):_a(e,t)},Ba=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?zd(e,t):Sa(e,t)},Da=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ud(e,t):xa(e,t)},Ma=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Vd(e,t):Ca(e,t)},za=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Wd(e,t):Aa(e,t)},Ua=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Gd(e,t):Ia(e,t)},Va=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hd(e,t):Ta(e,t)},Wa=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ld(e,t):Ea(e,t)},Na=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fd(e,t):Pa(e,t)},Ga=(e,t)=>{Ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Md(e,t):Oa(e,t)}});var Ha,La,Fa,Eo,qa=K(()=>{"use strict";fe();Ke();On();Ha=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},La=(e,t)=>{Ha(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(kn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Fa=(e,t)=>{Ha(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(kn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Eo=e=>we(e)});var qd,jd,Kd,Yd,Rn,Zd,ja,Po=K(()=>{"use strict";fe();Cn();$e();qd=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5];if(a&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let p=r.dims[0],h=r.dims[1],l=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==l)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,w=y,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let P of t.qkvHiddenSizes)if(P%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let $=h;if(y!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let S=0;if(a){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==p)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(S=a.dims[3])}let E=$+S,A=-1,x=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(c)throw new Error("relativePositionBias is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:S,kvSequenceLength:$,totalSequenceLength:E,maxSequenceLength:A,inputHiddenSize:l,hiddenSize:y,vHiddenSize:_,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:x,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},jd=(e,t,r,o)=>{let i=We(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let c=Math.ceil(o/i/u),p=[{type:t.dataType,data:1/o},{type:12,data:a},{type:12,data:c}],h=De(t.dataType,i),l=y=>{let w=j("x",t.dataType,t.dims,i),_="thread_max_vector";i===2?_="max(thread_max_vector.x, thread_max_vector.y)":i===4&&(_="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let $=ut(t.dataType),S=[{name:"d_inv",type:$},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${u}>;\n  var<workgroup> wgSum: array<f32, ${u}>;\n  ${y.registerUniforms(S).declareVariables(w)}\n  ${y.mainStart([u,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${Je("f32",i,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${vt($,i,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${_};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${u}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${Je("f32",i,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${vt($,i,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${lt("sumVector",i)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${Je($,i,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${vt($,i,"x[offset + i]")};\n        x[offset + i] = ${w.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${i}`},getShaderSource:l,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:p})},{inputs:[t],outputs:[]})},Kd=(e,t,r,o,i,u)=>{let a=[i.batchSize,i.numHeads,i.sequenceLength,i.kvSequenceLength+i.pastSequenceLength],c=u.scale===0?1/Math.sqrt(i.headSize):u.scale,p=We(i.headSize),h=i.headSize/p,l=12,y={x:Math.ceil(i.totalSequenceLength/l),y:Math.ceil(i.sequenceLength/l),z:i.batchSize*i.numHeads},w=[{type:12,data:i.sequenceLength},{type:12,data:h},{type:12,data:i.totalSequenceLength},{type:12,data:i.kvSequenceLength},{type:t.dataType,data:c}],_=[t,r],$=E=>{let A=z("q",t.dataType,t.dims,p),x=z("key",r.dataType,r.dims,p),P=j("output",t.dataType,a),T=De(t.dataType),k=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:T}];return`\n  const beta: ${T} = 1.0;\n  const TILE_SIZE = ${l}u;\n\n  var<workgroup> tileQ: array<${A.type.storage}, ${l*l}>;\n  var<workgroup> tileK: array<${A.type.storage}, ${l*l}>;\n  ${E.registerUniforms(k).declareVariables(A,x,P)}\n  ${E.mainStart([l,l,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${Je(T,p)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      output[outputIdx] = ${lt("value",p)} * uniforms.alpha;\n    }\n  }`},S=e.compute({name:"AttentionProbs",shaderCache:{hint:`${p}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:w}),getShaderSource:$},{inputs:_,outputs:[-1]})[0];return jd(e,S,i.batchSize*i.numHeads*i.sequenceLength,i.totalSequenceLength),S},Yd=(e,t,r,o)=>{let i=[o.batchSize,o.sequenceLength,o.vHiddenSize],u=12,a={x:Math.ceil(o.vHeadSize/u),y:Math.ceil(o.sequenceLength/u),z:o.batchSize*o.numHeads},c=[{type:12,data:o.sequenceLength},{type:12,data:o.totalSequenceLength},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}],p=h=>{let l=z("probs",t.dataType,t.dims),y=z("v",r.dataType,r.dims),w=j("output",t.dataType,i),_=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${u}u;\n  var<workgroup> tileQ: array<${l.type.value}, ${u*u}>;\n  var<workgroup> tileK: array<${l.type.value}, ${u*u}>;\n  ${h.registerUniforms(_).declareVariables(l,y,w)}\n  ${h.mainStart([u,u,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${l.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:c}),getShaderSource:p},{inputs:[t,r],outputs:[0]})[0]},Rn=(e,t,r,o,i,u,a,c,p,h,l)=>{let y=Kd(e,t,r,p,h,l);Yd(e,y,o,h)},Zd=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,c={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:o},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],l=y=>{let w=j("output_q",p[0].dataType,r),_=j("output_k",p[0].dataType,r),$=j("output_v",p[0].dataType,r),S=z("input",p[0].dataType,p[0].dims),E=z("weight",p[1].dataType,p[1].dims),A=z("bias",p[2].dataType,p[2].dims),x=S.type.storage,P=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${x}, ${a*a}>;\n  ${y.registerUniforms(P).declareVariables(S,E,A,w,_,$)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${x}(0);\n    var valueK = ${x}(0);\n    var valueV = ${x}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:h}),getShaderSource:l},{inputs:p,outputs:[-1,-1,-1]})},ja=(e,t)=>{let r=qd(e.inputs,t),[o,i,u]=Zd(e,r);return Rn(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Xd,Jd,Qd,Ka,Ya=K(()=>{"use strict";hr();fe();Se();Ke();$e();Xd=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((c,p)=>{if(c!==o[p])throw new Error(`${u}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Jd=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?We(u[u.length-1]):1,c=i==="NHWC"&&u.length>1?a:1,p=M.size(u)/a,h=o,l=h?u.length:u,y=z("x",e[0].dataType,e[0].dims,a),w=z("scale",e[1].dataType,e[1].dims,c),_=z("bias",e[2].dataType,e[2].dims,c),$=z("inputMean",e[3].dataType,e[3].dims,c),S=z("inputVar",e[4].dataType,e[4].dims,c),E=j("y",e[0].dataType,l,a),A=()=>{let P="";if(o)P=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")P=`\n            ${E.indicesSet("outputIndices","0","0")}\n            let cOffset = ${E.indicesToOffset("outputIndices")};`;else{P=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let T=1;T<w.rank;T++)P+=`cIndices[${T}] = outputIndices[${T}];`;P+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return P},x=P=>`\n  const epsilon = ${r};\n  ${P.registerUniform("outputSize","u32").declareVariables(y,w,_,$,S,E)}\n  ${P.mainStart()}\n  ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${E.offsetToIndices(`global_idx * ${a}`)};\n    ${A()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${$.getByOffset("cOffset")};\n    let inputVar = ${S.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${E.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...Z(u)]:[{type:12,data:p}]})}},Qd=e=>we(e),Ka=(e,t)=>{let{inputs:r,outputCount:o}=e,i=Qd({...t,outputCount:o});if(fr.webgpu.validateInputContent&&Xd(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Jd(r,i))}});var ec,tc,Za,Xa=K(()=>{"use strict";Se();$e();ec=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},tc=e=>{let t=e[0].dims,r=e[0].dims[2],o=M.size(t)/4,i=e[0].dataType,u=z("input",i,t,4),a=z("bias",i,[r],4),c=z("residual",i,t,4),p=j("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:l=>`\n  const channels = ${r}u / 4;\n  ${l.declareVariables(u,a,c,p)}\n\n  ${l.mainStart()}\n    ${l.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${p.setByOffset("global_idx","value")}\n  }`}},Za=e=>{ec(e.inputs),e.compute(tc(e.inputs))}});var rc,ke,Ja,Qa,es,ts,rs,ns,os,is,as,nc,ss,us,ls,ds,Bn,cs,Dn,ps,ms,fs,hs,gs,ys,bs,ws,vs,$s,_s,Ss,xs,Cs,As,Is,Ts,Es,Oo,ko,Ps,Os,ks,Mn=K(()=>{"use strict";fe();Se();Ke();$e();rc=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let p=z("inputData",r,[a],4),h=j("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(p,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${p.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",c)}\n  }`},ke=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>rc(a,M.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(M.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(e.dims)/4)}]})}),Ja=e=>{e.compute(ke(e.inputs[0],"Abs","abs"))},Qa=e=>{e.compute(ke(e.inputs[0],"Acos","acos"))},es=e=>{e.compute(ke(e.inputs[0],"Acosh","acosh"))},ts=e=>{e.compute(ke(e.inputs[0],"Asin","asin"))},rs=e=>{e.compute(ke(e.inputs[0],"Asinh","asinh"))},ns=e=>{e.compute(ke(e.inputs[0],"Atan","atan"))},os=e=>{e.compute(ke(e.inputs[0],"Atanh","atanh"))},is=e=>we(e),as=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(ke(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},nc=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Tn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:En;return we({min:t,max:r})},ss=(e,t)=>{let r=e.inputs.length===1?t:nc(e.inputs),o=ut(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},us=e=>{e.compute(ke(e.inputs[0],"Ceil","ceil"))},ls=e=>{e.compute(ke(e.inputs[0],"Cos","cos"))},ds=e=>{e.compute(ke(e.inputs[0],"Cosh","cosh"))},Bn=e=>we(e),cs=(e,t)=>{let r=ut(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Dn=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,ps=e=>{let t=ut(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Dn(t)))},ms=e=>{e.compute(ke(e.inputs[0],"Exp","exp"))},fs=e=>{e.compute(ke(e.inputs[0],"Floor","floor"))},hs=e=>{let t=ut(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Dn(t)))},gs=(e,t)=>{let r=ut(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},ys=e=>{e.compute(ke(e.inputs[0],"Not",t=>`!${t}`))},bs=e=>{e.compute(ke(e.inputs[0],"Neg",t=>`-${t}`))},ws=e=>{e.compute(ke(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},vs=e=>{let t=ut(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},$s=e=>{e.compute(ke(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},_s=e=>we(e),Ss=(e,t)=>{let r=ut(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},xs=e=>{e.compute(ke(e.inputs[0],"Sin","sin"))},Cs=e=>{e.compute(ke(e.inputs[0],"Sinh","sinh"))},As=e=>{e.compute(ke(e.inputs[0],"Sqrt","sqrt"))},Is=e=>{e.compute(ke(e.inputs[0],"Tan","tan"))},Ts=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Es=e=>{e.compute(ke(e.inputs[0],"Tanh",Ts))},Oo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Ts("v")};\n}\n`,ko=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Ps=e=>{let t=ut(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"FastGelu",ko,Oo(t),void 0,e.inputs[0].dataType))},Os=(e,t)=>{let r=ut(e.inputs[0].dataType);return e.compute(ke(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},ks=e=>{e.compute(ke(e.inputs[0],"Log","log"))}});var oc,ic,Bs,Ds=K(()=>{"use strict";Se();$e();Mn();oc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ic=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=z("input",e[0].dataType,e[0].dims,4),o=z("bias",e[0].dataType,[e[0].dims[2]],4),i=j("output",e[0].dataType,t,4),u=M.size(t)/4,a=De(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:p=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${p.declareVariables(r,o,i)}\n\n  ${Dn(a)}\n\n  ${p.mainStart()}\n    ${p.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Bs=e=>{oc(e.inputs),e.compute(ic(e.inputs))}});var ac,sc,kt,Ms,zs,Us,Vs,Ws,Ns,Gs,Hs,Ls,Fs,qs=K(()=>{"use strict";fe();Se();$e();ac=(e,t,r,o,i,u,a,c,p,h,l,y)=>{let w,_;typeof c=="string"?w=_=(x,P)=>`${c}((${x}),(${P}))`:typeof c=="function"?w=_=c:(w=c.scalar,_=c.vector);let $=j("outputData",l,o.length,4),S=z("aData",p,t.length,4),E=z("bData",h,r.length,4),A;if(i)if(u){let x=M.size(t)===1,P=M.size(r)===1,T=t.length>0&&t[t.length-1]%4===0,k=r.length>0&&r[r.length-1]%4===0;x||P?A=$.setByOffset("global_idx",_(x?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),P?`${E.type.value}(${E.getByOffset("0")}.x)`:E.getByOffset("global_idx"))):A=`\n            let outputIndices = ${$.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",$)};\n            let offsetB = ${E.broadcastedIndicesToOffset("outputIndices",$)};\n            ${$.setByOffset("global_idx",_(a||T?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||k?E.getByOffset("offsetB / 4u"):`${E.type.value}(${E.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else A=$.setByOffset("global_idx",_(S.getByOffset("global_idx"),E.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let x=(P,T,k="")=>{let W=`aData[indexA${T}][componentA${T}]`,N=`bData[indexB${T}][componentB${T}]`;return`\n            let outputIndices${T} = ${$.offsetToIndices(`global_idx * 4u + ${T}u`)};\n            let offsetA${T} = ${S.broadcastedIndicesToOffset(`outputIndices${T}`,$)};\n            let offsetB${T} = ${E.broadcastedIndicesToOffset(`outputIndices${T}`,$)};\n            let indexA${T} = offsetA${T} / 4u;\n            let indexB${T} = offsetB${T} / 4u;\n            let componentA${T} = offsetA${T} % 4u;\n            let componentB${T} = offsetB${T} % 4u;\n            ${P}[${T}] = ${k}(${w(W,N)});\n          `};l===9?A=`\n            var data = vec4<u32>(0);\n            ${x("data",0,"u32")}\n            ${x("data",1,"u32")}\n            ${x("data",2,"u32")}\n            ${x("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:A=`\n            ${x("outputData[global_idx]",0)}\n            ${x("outputData[global_idx]",1)}\n            ${x("outputData[global_idx]",2)}\n            ${x("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(S,E,$)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${A}\n      }`},sc=(e,t,r,o,i,u,a=r.dataType)=>{let c=!M.areEqual(r.dims,o.dims),p=r.dims,h=M.size(r.dims),l=!1,y=!1,w=[c];if(c){let _=It.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");p=_,h=M.size(p);let $=M.size(r.dims)===1,S=M.size(o.dims)===1,E=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,A=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push($),w.push(S),w.push(E),w.push(A);let x=1;for(let P=1;P<p.length;P++){let T=r.dims[r.dims.length-P]??1,k=o.dims[o.dims.length-P]??1;if(T===k)x*=T;else break}x%4===0?(y=!0,l=!0):($||S||E||A)&&(l=!0)}else l=!0;return w.push(l),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>ac(_,r.dims,o.dims,p,l,c,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(p)/4)},...Z(r.dims,o.dims,p)]})}},kt=(e,t,r,o,i,u)=>{e.compute(sc(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},Ms=e=>{kt(e,"Add",(t,r)=>`${t}+${r}`)},zs=e=>{kt(e,"Div",(t,r)=>`${t}/${r}`)},Us=e=>{kt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Vs=e=>{kt(e,"Mul",(t,r)=>`${t}*${r}`)},Ws=e=>{let t=z("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;kt(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Ns=e=>{kt(e,"Sub",(t,r)=>`${t}-${r}`)},Gs=e=>{kt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Hs=e=>{kt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ls=e=>{kt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Fs=e=>{kt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var lc,dc,cc,pc,js,Ks,Ys=K(()=>{"use strict";fe();Se();Ke();$e();lc=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],i=o.dataType,u=o.dims.length;e.forEach((a,c)=>{if(c!==r){if(a.dataType!==i)throw new Error("input tensors should be one type");if(a.dims.length!==u)throw new Error("input tensors should have the same shape");a.dims.forEach((p,h)=>{if(h!==t&&p!==o.dims[h])throw new Error("non concat dimensions must match")})}})},dc=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,cc=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},pc=(e,t,r,o)=>{let i=M.size(r),u=new Array(e.length),a=new Array(e.length),c=0,p=[],h=[],l=[{type:12,data:i}];for(let S=0;S<e.length;++S)c+=e[S].dims[t],u[S]=c,h.push(e[S].dims.length),a[S]=z(`input${S}`,o,h[S]),p.push("rank"),l.push({type:12,data:u[S]});for(let S=0;S<e.length;++S)l.push(...Z(e[S].dims));l.push(...Z(r));let y=j("output",o,r.length),w=y.indicesGet("indices",t),_=Array.from(Array(u.length).keys()).map(S=>`uniforms.sizeInConcatAxis${S}`).join(","),$=S=>`\n\n  ${(()=>{S.registerUniform("outputSize","u32");for(let E=0;E<e.length;E++)S.registerUniform(`sizeInConcatAxis${E}`,"u32");return S.declareVariables(...a,y)})()}\n\n  ${dc(u.length,_)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${_});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${cc(a,y)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:l}),getShaderSource:$}},js=(e,t)=>{let r=e.inputs,o=r[0].dims,i=M.normalizeAxis(t.axis,o.length);lc(r,i);let u=o.slice();u[i]=r.reduce((c,p)=>c+(p.dims.length>i?p.dims[i]:0),0);let a=r.filter(c=>M.size(c.dims)>0);e.compute(pc(a,i,u,r[0].dataType),{inputs:a})},Ks=e=>we({axis:e.axis})});var $t,_t,St,zn,Lt=K(()=>{"use strict";fe();Se();$t=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},_t=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},St=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},zn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[Tn,En];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var Qe,Un,Vn=K(()=>{"use strict";Qe=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Un=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Wn,Ro=K(()=>{"use strict";Wn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var mc,fc,Hr,Zs,hc,Lr,gc,Nn,Fr=K(()=>{"use strict";fe();Se();$e();Lt();Vn();mc=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,fc=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Hr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32)=>{let p=t[1]*e[1],h=t[0]*e[0],l=i?p:u,y=i?u:p,w=l/t[0],_=u/t[1];if(!((i&&w===4&&e[1]===4||!i&&(w===3||w===4))&&l%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${l/w}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${p};\n\n  let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${mc(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${fc(i,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Zs=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,hc=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Lr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32,p=!1)=>{let h=e[1]*t[1],l=e[0]*t[0],y=i?h:u,w=i?u:h;if(!(w%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],$=y/t[0],S=u/t[1],E=p?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${l};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Zs(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${$};\nlet tileRowB = i32(localId.y) * ${S};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${$}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Zs(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${hc(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${l}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${E}\n  }\n`},gc=(e,t,r,o,i,u=!1)=>{let[a,c,p]=i,[h,l,y,w]=o,_=gr(a,p),$=gr(c,p),S=De(o[0].type.tensor),E=()=>{let P=l.rank,T=h.rank,k=`var aIndices: ${l.type.indices};`;for(let W=P-2-1,N=T-1;W>=0;W--,N--)k+=`\naIndices[${W}] = ${T>1?`batchIndices[${N}]`:"batchIndices"};`;return _.forEach(W=>{k+=`\naIndices[${W}] = 0;`}),k+=`\naIndices[${P-2}] = u32(row);\n                   aIndices[${P-1}] = u32(colIn);`,k},A=()=>{let P=y.rank,T=h.rank,k=`var bIndices: ${y.type.indices};`;for(let W=P-2-1,N=T-1;W>=0;W--,N--)k+=`\nbIndices[${W}] = ${T>1?`batchIndices[${N}]`:"batchIndices"};`;return $.forEach(W=>{k+=`\nbIndices[${W}] = 0;`}),k+=`\nbIndices[${P-2}] = u32(row);\n                   bIndices[${P-1}] = u32(colIn);`,k};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${Qe(e,S)} {\n      var value = ${Qe(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${E()}\n        value = ${l.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${Qe(e,S)} {\n      var value = ${Qe(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${A()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Qe(e,S)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${Qe(e,S)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Nn=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u.slice(0,-2),p=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),l=M.size(h),y=u[u.length-2],w=u[u.length-1],_=a[a.length-1],$=w%4===0&&_%4===0,S=y<=8?[4,1,1]:[4,4,1],E=[8,8,1],A=[Math.ceil(_/E[0]/S[0]),Math.ceil(y/E[1]/S[1]),Math.ceil(l/E[2]/S[2])],x=$?4:1,P=[...c,y,w/x],T=P.length,k=[...p,w,_/x],W=k.length,N=[l,y,_/x],G=[{type:6,data:y},{type:6,data:_},{type:6,data:w}];_t(t,G),G.push(...Z(h,P,k));let oe=["rank","rank"],X=e.length>2;X&&(G.push(...Z(e[2].dims)),oe.push("rank")),G.push(...Z(N));let U=re=>{let Be=h.length,Ee=Pn("batchDims",e[0].dataType,Be,1),Ae=De(e[0].dataType),te=z("a",e[0].dataType,T,x),Me=z("b",e[1].dataType,W,x),ye=j("result",e[0].dataType,N.length,x),he=[te,Me];if(X){let F=i?x:1;he.push(z("bias",e[2].dataType,e[2].dims.length,F))}let ue=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];St(t,ue);let ge=De(ye.type.tensor),Pe=$t(t,ye.type.value,ge),Le=gc(x,X,Pe,[Ee,te,Me,ye],[c,p,h],i);return`\n  ${re.registerUniforms(ue).registerInternalVariables(Ee).declareVariables(...he,ye)}\n  ${Le}\n  ${$?Hr(S,E,Ae,Ee):Lr(S,E,Ae,Ee)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${S};${t.activation};${$};${i}`,inputDependencies:oe},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:G}),getShaderSource:U}}});var yc,Xs,Js=K(()=>{"use strict";fe();Ht();$e();Lt();Vn();Ro();Fr();yc=(e,t,r,o,i=!1,u,a=4,c=4,p=4,h="f32")=>{let l=X=>{switch(X){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${X} is not supported.`)}},y=X=>{switch(X){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${X} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,$=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",E=e?"row":"col",A=e?"col":"row",x=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${E} / outWidth;\n    let outCol = ${E} % outWidth;\n\n    let WRow = ${A} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${A} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${A} % inChannels;\n    var resData = ${Qe(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${$} && xCol >= 0 && xCol < ${S}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${l(a)}\n    }\n    return resData;`,P=e?t&&o?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${x}\n    }\n    return ${Qe(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${x}\n    }\n    return ${Qe(a,h)}(0.0);`,T=`${y(c)}`,k=Qe(p,h),W=e?Qe(a,h):Qe(c,h),N=e?Qe(c,h):Qe(a,h),G=$t(u,k,h);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${W} {\n      ${e?P:T}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${N} {\n      ${e?T:P}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {\n      let col = colIn * ${p};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Un(i)}\n      ${G}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Xs=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],l=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],$=p&&(h%4===0||h%3===0)&&_%4===0,S=p?_:y*w,E=p?y*w:_,A=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],P=[Math.ceil(S/A[0]/x[0]),Math.ceil(E/A[1]/x[1]),Math.ceil(l/A[2]/x[2])];Ve("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${P}`);let T=$?p&&h%4!==0?3:4:1,k=A[1]*x[1],W=A[0]*x[0],N=Math.max(A[0]*T,A[1]),G=o%k===0,oe=i%W===0,X=u%N===0,U=$?[T,4,4]:[1,1,1],re=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];_t(t,re),re.push(...Z(e[0].dims,e[1].dims));let Be=["rank","rank"];a&&(re.push(...Z(e[2].dims)),Be.push("rank")),re.push(...Z(r));let Ee=Ae=>{let te=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];St(t,te);let Me=$?4:1,ye=De(e[0].dataType),he=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${$?`vec4<${ye}>`:ye}) {\n        result[flatIndex] = ${$?`vec4<${ye}>`:ye}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${$?`vec4<${ye}>`:ye}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${$?"/ 4":""}, value);\n      }`,ue=z("x",e[0].dataType,e[0].dims.length,T===3?1:T),ge=z("w",e[1].dataType,e[1].dims.length,Me),Pe=[ue,ge],Le=j("result",e[0].dataType,r.length,Me);if(a){let F=z("bias",e[2].dataType,e[2].dims.length,Me);Pe.push(F),he+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?`vec4<${ye}>`:ye} {\n          return bias[coords.${p?"w":"y"}${$?"/ 4":""}];\n        }`}return`\n        ${Wn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${Ae.registerUniforms(te).declareVariables(...Pe,Le)}\n        ${he}\n        ${yc(p,G,oe,X,a,t,U[0],U[1],U[2],ye)}\n        ${$?Hr(x,A,ye,void 0,!p,N):Lr(x,A,ye,void 0,!p,N,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${T};${$};${G};${oe};${X};${k};${W};${N}`,inputDependencies:Be},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:P[0],y:P[1],z:P[2]},programUniforms:re}),getShaderSource:Ee}}});var Bo,Qs,eu=K(()=>{"use strict";fe();Se();$e();Do();Lt();Bo=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,c=a[0]/t.group,p=t.format==="NHWC",h=Gn(u,a,t.dilations,t.pads,t.strides,p),l=M.size(h),y=[{type:12,data:l},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];_t(t,y),y.push(...Z(u,a));let w=["rank","rank"];o&&(y.push(...Z(e[2].dims)),w.push("rank")),y.push(...Z(h));let _=$=>{let S=j("output",e[0].dataType,h.length),E=De(S.type.tensor),A=$t(t,S.type.value,E),x=z("x",e[0].dataType,u.length),P=z("w",e[1].dataType,a.length),T=[x,P];o&&T.push(z("b",e[2].dataType,e[2].dims.length));let k=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return St(t,k),`\n  ${$.registerUniforms(k).declareVariables(...T,S)}\n\n  ${$.mainStart()}\n    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${S.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${p?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${S.type.value} = ${S.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${p?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${p?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${p?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${P.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${A}\n    ${S.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:y}),getShaderSource:_}},Qs=(e,t,r)=>{let o=e.length>2,i=We(r[3]),u=We(r[2]),a=M.size(r)/i/u,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],p=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],h=[r[0],r[1],r[2],r[3]/i],l=[{type:12,data:a},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];_t(t,l),l.push(...Z(c,p,h));let y=(u-1)*t.strides[1]+p[1],w=_=>{let $=j("output",e[0].dataType,h.length,i),S=De($.type.tensor),E=$t(t,$.type.value,S),A=z("x",e[0].dataType,c.length,i),x=z("w",e[1].dataType,p.length,i),P=[A,x];o&&P.push(z("b",e[2].dataType,e[2].dims,i));let T=o?"value += b[output_channel];":"",k=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return St(t,k),`\n  ${_.registerUniforms(k).declareVariables(...P,$)}\n  ${_.mainStart()}\n    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${u}u;\n    let col = (index1 % width1) * ${u}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${A.type.value}, ${y}>;\n    var values: array<${$.type.value}, ${u}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${p[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${y}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${A.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${A.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${p[1]}; w_width++) {\n          let w_val = ${x.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${u}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${u}u; i++) {\n      var value = values[i];\n      ${T}\n      ${E}\n      ${$.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${u};${y};${p[0]};${p[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:l}),getShaderSource:w}}});var Mo,bc,tu,zo=K(()=>{"use strict";fe();Se();Fr();$e();Lt();Mo=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u[u.length-2],p=a[a.length-1],h=u[u.length-1],l=We(p),y=We(h),w=We(c),_=M.size(r)/l/w,$=e.length>2,S=o?o.slice(0,-2):r.slice(0,-2),A=[M.size(S),c,p],x=[{type:12,data:_},{type:12,data:c},{type:12,data:p},{type:12,data:h}];_t(t,x),x.push(...Z(S,u,a)),$&&x.push(...Z(e[2].dims)),x.push(...Z(A));let P=T=>{let k=Pn("batch_dims",e[0].dataType,S.length),W=z("a",e[0].dataType,u.length,y),N=z("b",e[1].dataType,a.length,l),G=j("output",e[0].dataType,A.length,l),oe=De(G.type.tensor),X=$t(t,G.type.value,oe),U=[W,N],re="";if($){let ue=i?l:1;U.push(z("bias",e[2].dataType,e[2].dims.length,ue)),re=`${i?`value += bias[col / ${ue}];`:`value += ${G.type.value}(bias[row + i]);`}`}let Be=u.slice(0,-2),Ee=a.slice(0,-2),Ae=gr(Be,S),te=gr(Ee,S),Me=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];St(t,Me);let ye=(ue,ge)=>{let Pe=ue.rank,Le=ue.name;if(Pe===2)return`var ${Le}_indices = ${ue.type.indices}(0u, 0u);`;let F=k.rank,ie=`var ${Le}_indices: ${ue.type.indices};`;for(let xe=Pe-2-1,Ne=F-1;xe>=0;xe--,Ne--)ie+=`\n${Le}_indices[${xe}] = ${F>1?`batch_indices[${Ne}]`:"batch_indices"};`;return ge.forEach(xe=>{ie+=`\n${Le}_indices[${xe}] = 0;`}),ie+=`${Le}_indices[${Pe-2}] = 0u;\n                     ${Le}_indices[${Pe-1}] = 0u;`,ie},he=()=>{let ue=`var a_data: ${W.type.value};`;for(let ge=0;ge<y;ge++)ue+=`\n              let b_data${ge} = b[(b_offset + (k + ${ge}) * uniforms.N + col) / ${l}];`;for(let ge=0;ge<w;ge++){ue+=`a_data = a[(a_offset + (row + ${ge}) * uniforms.K + k) / ${y}];`;for(let Pe=0;Pe<y;Pe++)ue+=`\n            values[${ge}] = fma(${N.type.value}(a_data${y===1?"":`[${Pe}]`}), b_data${Pe}, values[${ge}]);\n`}return ue};return`\n  ${T.registerUniforms(Me).registerInternalVariables(k).declareVariables(...U,G)}\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${l})) * ${l};\n    var index1 = global_idx / (uniforms.N / ${l});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${k.offsetToIndices("batch")};`}\n    ${ye(W,Ae)}\n    let a_offset = ${W.indicesToOffset("a_indices")};\n    ${ye(N,te)}\n    let b_offset = ${N.indicesToOffset("b_indices")};\n    var values: array<${G.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${he()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${re}\n      ${X}\n      let cur_indices = ${G.type.indices}(batch, row + i, col);\n      let offset = ${G.indicesToOffset("cur_indices")};\n      ${G.setByOffset(`offset / ${l}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${l};${y};${w};${i}`,inputDependencies:$?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:x}),getShaderSource:P}},bc=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},tu=e=>{bc(e.inputs);let t=It.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Mo(e.inputs,{activation:""},t)):e.compute(Nn(e.inputs,{activation:""},t))}});var Gn,Uo,wc,ru,Vo,vc,$c,Wo,Do=K(()=>{"use strict";Se();Js();Fr();eu();Lt();zo();yr();Gn=(e,t,r,o,i,u)=>{let a=e[0],c=e.slice(u?1:2,u?3:4),p=c.length,h=t[0],y=t.slice(2).map(($,S)=>$+($-1)*(r[S]-1)),_=c.map(($,S)=>$+o[S]+o[S+p]).map(($,S)=>Math.floor(($-y[S]+i[S])/i[S]));return _.splice(0,0,a),_.splice(u?3:1,0,h),_},Uo=[2,3,1,0],wc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},ru=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();er.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},Vo=e=>{let t=zn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,c=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},vc=(e,t,r)=>{let o=ru(r,t),i=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let N=Gn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),G=e.kernelCustomData.wT??e.compute(yt(t[1],Uo),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=G);let oe=[t[0],G];t.length===3&&oe.push(t[2]),e.compute(Qs(oe,o,N),{inputs:oe})}else e.compute(Bo(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],c=t[0].dims[i?2:3],p=t[0].dims[i?3:1],h=t[1].dims[2],l=t[1].dims[3],y=Gn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),w=y[i?1:2],_=y[i?2:3],$=y[i?3:1],S=i&&h===a&&l===c&&r.pads[0]===0&&r.pads[1]===0;if(S||h===1&&l===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let W=y[0],N,G,oe,X=[];if(i){let Be=e.kernelCustomData.wT??e.compute(yt(t[1],Uo),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Be),S){let Ee=a*c*p;N=t[0].reshape([1,W,Ee]),G=Be.reshape([1,Ee,$]),oe=[1,W,$]}else N=t[0].reshape([W,a*c,p]),G=Be.reshape([1,p,$]),oe=[W,w*_,$];X.push(N),X.push(G)}else N=t[0].reshape([W,p,a*c]),G=t[1].reshape([1,$,p]),oe=[W,$,w*_],X.push(G),X.push(N);u&&X.push(t[2]);let U=oe[2],re=X[0].dims[X[0].dims.length-1];U<8&&re<8?e.compute(Mo(X,o,y,oe,i),{inputs:X}):e.compute(Nn(X,o,y,oe,i),{inputs:X});return}let E=!0,A=e.kernelCustomData.wT??e.compute(yt(t[1],Uo),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let x=[t[0],A];u&&x.push(t[2]);let P=i?w*_:$,T=i?$:w*_,k=h*l*p;e.compute(Xs(x,o,y,P,T,k,u,E),{inputs:x})},$c=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),c=[1].concat(t.kernelShape),p=ru({...t,pads:i,strides:u,dilations:a,kernelShape:c},o);e.compute(Bo(o,p,h=>r?[h[0],h[2],h[3]]:[]))},Wo=(e,t)=>{wc(e.inputs,t),e.inputs[0].dims.length===3?$c(e,t):vc(e,e.inputs,t)}});var _c,nu,ou=K(()=>{"use strict";fe();Ht();$e();Lt();Vn();Ro();Fr();_c=(e,t=!1,r,o,i=4)=>{let u=A=>{switch(A){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${o}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${A} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",l=e?"row":"col",y=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${l} / outWidth;\n      let outCol = ${l} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {\n        return ${o}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${o}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,_=e?`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${o}(0.0);`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${o}(0.0);`,$=`\n      let col = colIn * ${i};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(i)}\n      }\n      return ${o}(0.0);\n      `,S=$t(r,o);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?_:$}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?$:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {\n    let col = colIn * ${i};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Un(t)}\n      ${S}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;\n    }\n  }`},nu=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],l=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],$=p&&h%4===0&&h%3&&_%4===0,S=p?_:y*w,E=p?y*w:_,A=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],P=[Math.ceil(S/A[0]/x[0]),Math.ceil(E/A[1]/x[1]),Math.ceil(l/A[2]/x[2])];Ve("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${P}`);let T=$?4:1,k=Math.max(A[0]*T,A[1]),W=$?4:1,N=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],G=[N[0]+(t.dilations[0]<=1?0:(N[0]-1)*(t.dilations[0]-1)),N[1]+(t.dilations[1]<=1?0:(N[1]-1)*(t.dilations[1]-1))],oe=[G[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),G[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],X=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:N},{type:6,data:oe}];_t(t,X),X.push(...Z(e[0].dims,e[1].dims));let U=["rank","rank"];a&&(X.push(...Z(e[2].dims)),U.push("rank")),X.push(...Z(r));let re=Be=>{let Ee=z("x",e[0].dataType,e[0].dims.length,W),Ae=z("w",e[1].dataType,e[1].dims.length,1),te=j("result",e[0].dataType,r.length,W),Me=[Ee,Ae],ye="";if(a){let ge=z("bias",e[2].dataType,e[2].dims.length,W);Me.push(ge),ye+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ge.type.value} {\n            return bias[coords.${p?"w":"y"}${$?"/ 4":""}];\n          }`}let he=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:N.length},{name:"pads",type:"i32",length:oe.length}];St(t,he);let ue=De(e[0].dataType,1);if(ue!=="f16"&&ue!=="f32")throw new Error(`elemType ${ue} is not supported.`);return`\n        ${Wn("uniforms.result_strides")}\n        ${Be.registerUniforms(he).declareVariables(...Me,te)};\n        ${ye}\n        ${_c(p,a,t,Ee.type.value,T)}\n        ${$?Hr(x,A,ue,void 0,!p,k):Lr(x,A,ue,void 0,!p,k,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${x};${A};${$}`,inputDependencies:U},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:P[0],y:P[1],z:P[2]},programUniforms:X}),getShaderSource:re}}});var Sc,No,iu=K(()=>{"use strict";fe();Ht();Se();$e();Sc=(e,t,r,o,i,u=!1,a,c,p=!1)=>{let h=p?1:2,l=p?2:3,y=p?3:1,w=u?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${p?"w":"y"}${u?"/ 4":""}];\n    }`);let $=u?4:1,S=z("W",t[1].dataType,t[1].dims.length,$),E=z("Dy",t[0].dataType,t[0].dims.length,$),A=[E,S];o&&A.push(z("bias",t[2].dataType,[r[y]].length,$));let x=j("result",t[0].dataType,r.length,$),P=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${E.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${E.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${E.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${E.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${x.set("batch","r","c + i","d1","value")};\n        }\n      }`,T=`\n          let outputIndices = ${x.offsetToIndices("global_idx")};\n          let batch = ${x.indicesGet("outputIndices",0)};\n          let d1 = ${x.indicesGet("outputIndices",y)};\n          let r = ${x.indicesGet("outputIndices",h)};\n          let c = ${x.indicesGet("outputIndices",l)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${l}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${p?E.get("batch","idyR","idyC","inputChannel"):E.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${x.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(c).declareVariables(...A,x)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?P:T}}`},No=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=M.size(i),a=[Math.ceil(u/64),1,1];Ve("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let c=t.format==="NHWC",p=["rank","rank"],h=[t.strides[0],t.strides[1]],l=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],y=[t.dilations[0],t.dilations[1]],w=[l[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),l[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],$=!1,S=t.group,E=e[1].dims,A=E[0]/S,x=E[1],P=[{type:12,data:u},{type:12,data:h},{type:12,data:l},{type:12,data:y},{type:12,data:w},{type:6,data:_},{type:12,data:A},{type:12,data:x},...Z(e[0].dims,e[1].dims)];o&&(P.push(...Z(e[2].dims)),p.push("rank")),P.push(...Z(i));let T=a[1]===1&&a[2]===1,k=W=>{let N=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:l.length},{name:"dilations",type:"u32",length:l.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],G=De(e[0].dataType);return`${Sc(W,e,i,o,T,$,G,N,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:P}),getShaderSource:k}}});var xc,Cc,Ac,au,su,Ic,Tc,Ec,Pc,uu,lu=K(()=>{"use strict";ou();iu();Lt();yr();xc=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,Cc=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},Ac=(e,t,r,o,i,u,a,c,p,h)=>{let l=e.length-2,y=h.length===0;if(p.length===0)for(let $=0;$<l;++$)p.push(0);let w=e[0],_=t[c?3:1]*i;for(let $=0,S=e.length-l-(c?1:0);$<l;++$,++S){let E=e[S],A=y?E*a[$]:h[$],x=xc(E,a[$],u[$],t[S],r[$],A);Cc(x,o,u,$,$+l),y&&h.push(a[$]*(E-1)+p[$]+(t[S]-1)*r[$]+1-u[$]-u[$+l])}h.splice(0,0,w),h.splice(c?3:1,0,_)},au=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,w)=>y*w,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),c=t[0].dims,p=e.dilations.slice();if(p.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;p=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}Ac(c,r,p,e.autoPad,e.group,i,h,o,a,u);let l=Object.assign({},e);return Object.assign(l,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:p,strides:h}),l},su=e=>{let t=zn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,c=e.pads,p=e.strides,h=e.wIsConst(),l=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:l,outputShape:y,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},Ic=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((l,y)=>l+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((l,y)=>l+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((l,y)=>l+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((l,y)=>l+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Tc=[2,3,1,0],Ec=(e,t,r)=>{let o=au(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],c=t[0].dims[i?3:1];if(o.group!==1||a===1&&c===1){e.compute(No(t,o));return}let p=u[i?1:2],h=u[i?2:3],l=t[1].dims[2],y=t[1].dims[3],w=i?p*h:a,_=i?a:p*h,$=l*y*c,S=!0,E=e.kernelCustomData.wT??e.compute(yt(t[1],Tc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=E);let A=[t[0],E],x=t.length===3;x&&(!i&&t[2].dims.length===1?A.push(t[2].reshape([t[2].dims[0],1,1])):A.push(t[2])),e.compute(nu(A,o,u,w,_,$,x,S),{inputs:A})},Pc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let p=au({...t,pads:c,strides:a,dilations:u,kernelShape:i},o);e.compute(No(o,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},uu=(e,t)=>{Ic(e.inputs,t),e.inputs[0].dims.length===3?Pc(e,t):Ec(e,e.inputs,t)}});var Oc,du,cu,pu=K(()=>{"use strict";fe();Se();Ke();$e();Oc=(e,t,r,o)=>{let i=M.size(t),u=t.length,a=z("input",e,u),c=j("output",e,u),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=M.normalizeAxis(p,u),l=y=>{let w=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=se("uniforms.input_shape","uniforms.axis",u),$=o.reverse?w+(o.exclusive?" + 1":""):"0",S=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,c)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${$};\n                  let last : i32 = ${S};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:6,data:h},...Z(t,t)]}),getShaderSource:l}},du=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(Oc(o,r,i,t),{inputs:[0]})},cu=e=>{let t=e.exclusive===1,r=e.reverse===1;return we({exclusive:t,reverse:r})}});var Go,Hn,mu,kc,Rc,Ho,Lo,fu,Bc,hu,gu,yu=K(()=>{"use strict";fe();Se();Ke();$e();Go="[a-zA-Z]|\\\\.\\\\.\\\\.",Hn="("+Go+")+",mu="^"+Hn+"$",kc="("+Hn+",)*"+Hn,Rc="^"+kc+"$",Ho=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Lo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Rc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,p)=>{let h=t[p].dims.slice();if(!c.match(RegExp(mu)))throw new Error("Invalid LHS term");let l=this.processTerm(c,!0,h,p);this.lhs.push(l)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,p])=>p.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(Hn)))throw new Error("Invalid RHS");i.match(RegExp(Go,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let p=this.symbolToInfo.get(c);if(p===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(p.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,c=[],p=0;if(!t.match(RegExp(mu))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Go,"g")),l=new Ho(i);return h?.forEach((y,w)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let _=u-h.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(p,p+_),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let $=0;$<c.length;$++){let S=String.fromCharCode("0".charCodeAt(0)+$);l.addSymbol(S,w+$),this.addSymbol(S,o[p++],i)}}else l.addSymbol(y,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[p++],i)}),l}},fu=e=>e+"_max",Bc=(e,t,r,o)=>{let u=e.map(l=>l.length).map((l,y)=>z(`input${y}`,t,l)),a=M.size(o),c=j("output",t,o.length),p=[...r.symbolToInfo.keys()].filter(l=>!r.rhs.symbolToIndices.has(l)),h=l=>{let y=[],w="var prod = 1.0;",_="var sum = 0.0;",$="sum += prod;",S=[],E=[],A=[],x=[],P=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((k,W)=>{if(r.rhs.symbolToIndices.has(W)){let N=r.rhs.symbolToIndices.get(W)?.[0];N!==void 0&&r.lhs.forEach((G,oe)=>{if(k.inputIndices.includes(oe)){let X=G.symbolToIndices.get(W);if(X===void 0)throw new Error("Invalid symbol error");X.forEach(U=>{y.push(`${u[oe].indicesSet(`input${oe}Indices`,U,c.indicesGet("outputIndices",N))}`)})}})}else r.lhs.forEach((N,G)=>{if(k.inputIndices.includes(G)){let oe=N.symbolToIndices.get(W);if(oe===void 0)throw new Error("Invalid symbol error");oe.forEach(X=>{S.push(`${u[G].indicesSet(`input${G}Indices`,X,`${W}`)}`)}),x.push(`prod *= ${u[G].getByIndices(`input${G}Indices`)};`)}}),E.push(`for(var ${W}: u32 = 0; ${W} < uniforms.${fu(W)}; ${W}++) {`),A.push("}")});let T=P?[...y,`let sum = ${u.map((k,W)=>k.getByIndices(`input${W}Indices`)).join(" * ")};`]:[...y,_,...E,...S,w,...x,$,...A];return`\n            ${l.registerUniforms(p.map(k=>({name:`${fu(k)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,c)}\n\n            ${l.mainStart()}\n            ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${c.offsetToIndices("global_idx")};\n            ${u.map((k,W)=>`var input${W}Indices: ${u[W].type.indices};`).join(`\n`)}\n            ${T.join(`\n`)};\n            ${c.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let l=p.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:12,data:r.symbolToInfo.get(w)?.dimValue||0}));l.push({type:12,data:a});let y=e.map((w,_)=>[...Z(w)]).reduce((w,_)=>w.concat(_),l);return y.push(...Z(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},hu=(e,t)=>{let r=new Lo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(Bc(i,e.inputs[0].dataType,r,o))},gu=e=>{let t=e.equation.replace(/\\s+/g,"");return we({equation:t})}});var Dc,bu,Mc,zc,wu,vu=K(()=>{"use strict";fe();Se();$e();Dc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},bu=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},Mc=(e,t)=>e.length>t.length?bu(e,t):bu(t,e),zc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Mc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(M.size(o)/u),c=h=>{let l=z("input",i,t.length,u),y=j("output",i,o.length,u),w;if(i===9){let _=($,S,E="")=>`\n          let outputIndices${S} = ${y.offsetToIndices(`outputOffset + ${S}u`)};\n          let offset${S} = ${l.broadcastedIndicesToOffset(`outputIndices${S}`,y)};\n          let index${S} = offset${S} / 4u;\n          let component${S} = offset${S} % 4u;\n          ${$}[${S}] = ${E}(${l.getByOffset(`index${S}`)}[component${S}]);\n        `;w=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${l.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",l.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(l,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},p=[{type:12,data:a},...Z(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},wu=e=>{Dc(e.inputs),e.compute(zc(e.inputs),{inputs:[0]})}});var Uc,$u,_u=K(()=>{"use strict";fe();Se();$e();Mn();Uc=e=>{let t=e[0].dataType,r=M.size(e[0].dims),o=M.size(e[1].dims),i=o%4===0,u=a=>{let c=z("x",t,[1],4),p=z("bias",t,[1],4),h=j("y",t,[1],4),l=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],y=_=>`\n      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;\n      let bias${_} = ${p.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,w=i?`\n      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${y(0)}${y(1)}${y(2)}${y(3)}\n      let bias = ${c.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(l).declareVariables(c,p,h)}\n\n    ${Oo(ut(t))}\n\n    ${a.mainStart(tr)}\n      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${c.getByOffset("global_idx")};\n      ${w}\n      let x_in = x + bias;\n      ${h.setByOffset("global_idx",ko("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:u,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/tr/4)}})}},$u=e=>{e.inputs.length<2||M.size(e.inputs[1].dims)===0?Ps(e):e.compute(Uc(e.inputs))}});var Vc,Wc,Su,xu,Cu=K(()=>{"use strict";fe();Se();Ke();$e();Vc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Wc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=M.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let c=r[u],p=e[0].dataType===9?4:1,h=Math.ceil(M.size(a)/p),l=[{type:12,data:h},{type:6,data:c},{type:12,data:u},...Z(e[0].dims,e[1].dims,a)],y=w=>{let _=z("data",e[0].dataType,e[0].dims.length,p),$=z("inputIndices",e[1].dataType,e[1].dims.length),S=j("output",e[0].dataType,a.length,p),E=x=>{let P=o.length,T=`var indicesIndices${x}  = ${$.type.indices}(0);`;for(let k=0;k<P;k++)T+=`${P>1?`indicesIndices${x}[${k}]`:`indicesIndices${x}`} = ${a.length>1?`outputIndices${x}[uniforms.axis + ${k}]`:`outputIndices${x}`};`;T+=`\n          var idx${x} = ${$.getByIndices(`indicesIndices${x}`)};\n          if (idx${x} < 0) {\n            idx${x} = idx${x} + uniforms.axisDimLimit;\n          }\n          var dataIndices${x} : ${_.type.indices};\n        `;for(let k=0,W=0;k<i;k++)k===u?(T+=`${i>1?`dataIndices${x}[${k}]`:`dataIndices${x}`} = u32(idx${x});`,W+=P):(T+=`${i>1?`dataIndices${x}[${k}]`:`dataIndices${x}`} = ${a.length>1?`outputIndices${x}[${W}]`:`outputIndices${x}`};`,W++);return T},A;if(e[0].dataType===9){let x=(P,T,k="")=>`\n          let outputIndices${T} = ${S.offsetToIndices(`outputOffset + ${T}u`)};\n          ${E(T)};\n          let offset${T} = ${_.indicesToOffset(`dataIndices${T}`)};\n          let index${T} = offset${T} / 4u;\n          let component${T} = offset${T} % 4u;\n          ${P}[${T}] = ${k}(${_.getByOffset(`index${T}`)}[component${T}]);\n        `;A=`\n        let outputOffset = global_idx * ${p};\n        var value = vec4<u32>(0);\n        ${x("value",0,"u32")}\n        ${x("value",1,"u32")}\n        ${x("value",2,"u32")}\n        ${x("value",3,"u32")}\n        ${S.setByOffset("global_idx","value")}\n      `}else A=`\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n      ${E("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${S.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,$,S)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${A}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:l}),getShaderSource:y}},Su=e=>we({axis:e.axis}),xu=(e,t)=>{let r=e.inputs;Vc(r),e.compute(Wc(e.inputs,t))}});var Nc,Gc,Au,Iu,Tu=K(()=>{"use strict";fe();Se();Ke();$e();Nc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Gc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,c=M.normalizeAxis(t.axis,i),p=r[c],h=u.slice(0),l=M.size(h),y=z("input",o,i),w=z("indicesInput",a,u.length),_=j("output",o,h.length),$=[{type:12,data:l},{type:6,data:p},{type:12,data:c}];return $.push(...Z(r,u,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:$}),getShaderSource:A=>`\n      ${A.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,w,_)}\n      ${A.mainStart()}\n      ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},Au=e=>we({axis:e.axis}),Iu=(e,t)=>{let r=e.inputs;Nc(r),e.compute(Gc(e.inputs,t))}});var Hc,Lc,Eu,Pu,Ou=K(()=>{"use strict";fe();Se();$e();Hc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Lc=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=In.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[i,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");let p=M.size(c),h=[{type:12,data:p},{type:12,data:i},{type:12,data:u},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],l=["type","type"];e.length===3&&(h.push(...Z(e[2].dims)),l.push("rank")),h.push(...Z(c));let y=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let $=t.alpha===1?"":"value *= uniforms.alpha;",S=z("a",e[0].dataType,e[0].dims),E=z("b",e[1].dataType,e[1].dims),A=S.type.value,x=null,P=[S,E];e.length===3&&(x=z("c",e[2].dataType,e[2].dims.length),P.push(x));let T=j("output",e[0].dataType,c.length);P.push(T);let k=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(k).declareVariables(...P)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${A}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${$}\n    ${(()=>x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",T)}; value += ${A}(uniforms.beta) * ${x.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:y}},Eu=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Pu=(e,t)=>{Hc(e.inputs),e.compute(Lc(e.inputs,t))}});var Fc,qc,jc,ku,Ru=K(()=>{"use strict";fe();Se();$e();Fc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=M.sizeToDimension(r,i),a=M.sizeFromDimension(r,i),c=We(a),p=a/c,h=[r[0],r[1],p],l=["rank","type","type"],y=[{type:12,data:a},{type:12,data:p}];y.push(...Z(h,h));let w=_=>{let $=z("x",e[0].dataType,h.length,c),S=z("scale",e[1].dataType,e[1].dims),E=z("bias",e[2].dataType,e[2].dims),A=j("output",e[0].dataType,h.length,c),x=[$,S,E,A],P=$.type.value,T=c===1?"f32":`vec${c}<f32>`,k=64,W=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${T}, ${k}>;\n  const workgroupSize = ${k}u;\n  ${_.registerUniforms(W).declareVariables(...x)}\n  ${_.mainStart(k)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${T}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${T}(${$.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${lt("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${T}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${T}(${$.get("batch","channel","h")}) - ${T}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${lt("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${S.getByOffset("channel")});\n    let channelShift = f32(${E.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${$.get("batch","channel","h")} * ${P}(${T}(channelScale)) + ${P}(${T}(channelShift));\n      ${A.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:w}},qc=(e,t,r,o,i,u,a,c)=>{let p=We(a),h=64,l=p===1?"vec2f":`mat2x${p}f`,y=p===1?"f32":`vec${p}f`,w=(W,N)=>`${l}(${W}, ${N})`,_=i*a/p,$=Math.ceil(u/h),S=["type"],E=[{type:12,data:$},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(u*a/p)}],A=W=>{let N=z("input",t.dataType,t.dims,p);return`\n  ${W.declareVariables(N)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${l}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${W.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${Je("f32",p)};\n    var squaredSum = ${Je("f32",p)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},x=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${p}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/p},programUniforms:E}),getShaderSource:A},{inputs:[t],outputs:[-1]})[0],P=[{type:12,data:_},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(h*a/p)}],T=["type","type","type"],k=W=>{let N=z("scale",r.dataType,r.dims,p),G=z("bias",o.dataType,o.dims,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${l}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${N.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${G.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${l}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${W.mainStart()}\n    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${Je("f32",p)};\n    var squaredSum = ${Je("f32",p)};\n    for (var i: u32 = 0; i < min(${h}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${c}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:P}),getShaderSource:k},{inputs:[x,r,o],outputs:[-1]})[0]},jc=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],c=M.sizeFromDimension(o,1)/a,p=We(a),h=M.size(i)/p,l=[{type:12,data:c},{type:12,data:Math.floor(a/p)}],y=["type","type"],w=qc(e,t[0],t[1],t[2],u,c,a,r.epsilon),_=$=>{let S=De(t[0].dataType),E=p===1?"vec2f":`mat2x${p}f`,A=p===1?S:`vec${p}<${S}>`,x=z("input",t[0].dataType,t[0].dims,p),P=j("output",t[0].dataType,i,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${E}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${P.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${$.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${A}(scale[0]), ${A}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:l}),getShaderSource:_},{inputs:[t[0],w]})},ku=(e,t)=>{t.format==="NHWC"?jc(e,e.inputs,t):e.compute(Fc(e.inputs,t))}});var Kc,Yc,Bu,Du=K(()=>{"use strict";fe();Se();$e();Kc=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Yc=(e,t,r)=>{let o=e[0].dims,i=e[1],u=e[2],a=o,c=M.normalizeAxis(t.axis,o.length),p=M.sizeToDimension(o,c),h=M.sizeFromDimension(o,c),l=M.size(i.dims),y=u?M.size(u.dims):0;if(l!==h||u&&y!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${l} and bias size of ${y}`);let w=[];for(let T=0;T<o.length;++T)T<c?w.push(o[T]):w.push(1);let _=We(h),$=["type","type"],S=[{type:12,data:p},{type:1,data:h},{type:12,data:Math.floor(h/_)},{type:1,data:t.epsilon}];u&&$.push("type");let E=r>1,A=r>2,x=T=>{let k=De(e[0].dataType),W=[z("x",e[0].dataType,e[0].dims,_),z("scale",i.dataType,i.dims,_)];u&&W.push(z("bias",u.dataType,u.dims,_)),W.push(j("output",e[0].dataType,a,_)),E&&W.push(j("mean_data_output",1,w)),A&&W.push(j("inv_std_output",1,w));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${T.registerUniforms(N).declareVariables(...W)}\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${Je("f32",_)};\n    var mean_square_vector = ${Je("f32",_)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${vt(k,_,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${lt("mean_vector",_)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${lt("mean_square_vector",_)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${vt(k,_,"x[j + offset]")};\n      let f32scale = ${vt(k,_,"scale[j]")};\n      output[j + offset] = ${W[0].type.value}((f32input - mean) * inv_std_dev * f32scale\n        ${u?`+ ${vt(k,_,"bias[j]")}`:""}\n      );\n    }\n\n    ${E?"mean_data_output[global_idx] = mean":""};\n    ${A?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},P=[{dims:a,dataType:e[0].dataType}];return E&&P.push({dims:w,dataType:1}),A&&P.push({dims:w,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${_};${r}`,inputDependencies:$},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(p/64)},programUniforms:S}),getShaderSource:x}},Bu=(e,t)=>{Kc(e.inputs),e.compute(Yc(e.inputs,t,e.outputCount))}});var Zc,Xc,Mu,zu,Uu=K(()=>{"use strict";fe();Se();Ke();$e();Zc=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),u=t.blockSize/8*t.bits,a=e[1];if(!M.areEqual(a.dims,[t.n,i,u]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let p=e[2].dims;if(M.size(p)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,y=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(M.size(l)!==y)throw new Error("zeroPoints input size error.")}},Xc=(e,t)=>{let r=e[0].dims,o=r.length,i=r.slice(0,o-1).concat(t.n),u=r[o-2],c=t.blockSize/8*t.bits/4,p=We(u),h=We(t.n),l=We(t.k),y=We(c),w=M.size(i)/h/p,_=[{type:12,data:w},{type:12,data:t.k},{type:12,data:t.n},{type:12,data:t.accuracyLevel},{type:12,data:t.bits},{type:12,data:t.blockSize}],$=r.slice();$.splice(-1,1,t.k/l);let S=M.convertShape(e[1].dims).slice();S.splice(-1,1,c/y),_.push(...Z($)),_.push(...Z(S)),_.push(...Z(e[2].dims)),e.length===4&&_.push(...Z(M.convertShape(e[3].dims)));let E=i.slice();E.splice(-1,1,t.n/h),_.push(...Z(E));let A=x=>{let P=z("a",e[0].dataType,$.length,l),T=z("b",12,S.length,y),k=z("scales",e[2].dataType,e[2].dims.length),W=[P,T,k],N=e.length===4?z("zero_points",12,e[3].dims.length):void 0;N&&W.push(N);let G=j("output",e[0].dataType,i.length,h),oe=[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],X=Math.floor((t.k+t.blockSize-1)/t.blockSize),U=De(e[0].dataType),re=(()=>{switch(l){case 1:return`array<${U}, 8>`;case 2:return`mat4x2<${U}>`;case 4:return`mat2x4<${U}>`;default:throw new Error(`${l}-component is not supported.`)}})(),Be=`\n        fn dequantize(quantized: ${re}, zero_point: ${U}, scale: ${U}) -> ${re} {\n          ${(()=>l===1?`var dequantized = ${re}(${Array.from({length:8},(te,Me)=>`(quantized[${Me}] - zero_point) * scale`).join(", ")});\n              return dequantized;`:`var zero_points: ${re} = ${re}(${Array(8).fill("zero_point").join(",")});\n              return (quantized - zero_points) * scale;`)()}\n        }`,Ee=`\n        fn ortUnpack8x4snorm(value: u32) -> ${re} {\n          var quantized: ${re};\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            var result = ${U}(extractBits(value, offset, count));\n            ${(()=>{switch(l){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${l}-component is not supported.`)}})()}\n            offset += count;\n          }\n          return quantized;\n        }`,Ae=N?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${N.getByOffset("zero_point_index")};\n          }`:"";return`\n        ${Be};\n        ${Ee};\n        ${x.registerUniforms(oe).declareVariables(...W,G)}\n        ${x.mainStart()}\n          ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${G.type.value}, ${p}>;\n          var output_indices = ${G.offsetToIndices("global_idx")};\n          var n = ${G.indicesGet("output_indices",o-1)};\n          var m = ${G.indicesGet("output_indices",o-2)};\n          var a_indices: ${P.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${N?`\n          var zero_point_index: u32 = n * ${h} * ((${X} + 1) / 2) / 4;\n          var zero_point_word: u32 = ${N.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = 0;`:""}\n          var scale_index = n * ${X*h};\n          var b_indices: ${T.type.indices};\n          for (var c: u32 = 0; c < ${h}; c++) {\n            ${T.indicesSet("b_indices","0",`n * ${h} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${X}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${k.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${U}(${N?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${T.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              for (var word: u32 = 0; word < ${c}; word += ${y}) {\n                ${T.indicesSet("b_indices","2","word")};\n                let b_data = ${T.getByIndices("b_indices")};\n                for (var i: u32 = 0; i < ${y}; i++) {\n                  let b_value = ${y===1?"b_data":"b_data[word + i]"};\n                  let b_quantized_values: ${re} = ortUnpack8x4snorm(b_value);\n                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);\n                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n                  var offset: u32 = word_offset;\n                  for (var j: u32 = 0; j < 8/${l}; j++) {\n                    ${P.indicesSet("a_indices",o-1,`offset/${l}`)};\n                    for (var k: u32 = 0; k < ${p}u; k++) {\n                      ${P.indicesSet("a_indices",o-2,`m * ${p} + k`)};\n                      let a_data = ${P.getByIndices("a_indices")};\n                      output_values[k]${h>1?"[c]":""} += ${l===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};\n                    }\n                    offset += ${l};\n                  }\n                  word_offset += 8;\n                }\n              }\n              scale_index++;\n              ${Ae}\n              block_offset += uniforms.block_size;\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${N?`if (zero_point_offset % 8 > 0) {\n                ${Ae}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${p}u; k++) {\n              ${G.indicesSet("output_indices",o-2,`${p+" * m + k"}`)};\n              ${G.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:_}),getShaderSource:A}},Mu=(e,t)=>{Zc(e.inputs,t),e.compute(Xc(e.inputs,t))},zu=e=>we(e)});var Jc,Wu,Vu,Qc,Fo,Nu,Gu=K(()=>{"use strict";fe();Se();Ke();Cn();Po();$e();yr();Jc=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5],p=e[6],h=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let l=!1,y=r.dims[0],w=r.dims[1],_=r.dims.length===3?l?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],$=w,S=0,E=0,A=Math.floor(_/t.numHeads);if(p&&h){if(p.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');S=p.dims[2],E=p.dims[2]}else if(p||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let x;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');x=2,$=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==A)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');x=5,$=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==A)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');x=0,$=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');x=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let P=0;if(a){P=8;let G=a.dims;throw G.length===1?G[0]===y?P=1:G[0]===3*y+2&&(P=3):G.length===2&&G[0]===y&&G[1]===$&&(P=5),P===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let T=!1,k=_;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if($!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');k=i.dims[2]}else{if($!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');k=i.dims[1]*i.dims[3],T=!0}}let W=S+$,N=!1;if(a)throw new Error("Key padding mask is not supported");if(c)throw new Error("extraAddQk is not supported");if(p)throw new Error("pastKey is not supported");if(h)throw new Error("pastValue is not supported");return{batchSize:y,sequenceLength:w,pastSequenceLength:S,kvSequenceLength:$,totalSequenceLength:W,maxSequenceLength:E,inputHiddenSize:0,hiddenSize:_,vHiddenSize:k,headSize:A,vHeadSize:Math.floor(k/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:P,scale:t.scale,broadcastResPosBias:N,passPastInKv:T,qkvFormat:x}},Wu=e=>we({...e}),Vu=we({perm:[0,2,1,3]}),Qc=(e,t,r,o,i,u,a)=>{let c=[o,i,u],p=M.size(c),h=[{type:12,data:p},{type:12,data:a},{type:12,data:u}],l=y=>{let w=j("qkv_with_bias",t.dataType,c),_=z("qkv",t.dataType,c),$=z("bias",r.dataType,c),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(S).declareVariables(_,$,w)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:l},{inputs:[t,r],outputs:[-1]})[0]},Fo=(e,t,r,o,i,u,a,c)=>{let p=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=Qc(e,u,a,t,o,r*i,c),p=p.reshape([t,o,r,i]),e.compute(yt(p,Vu.perm),{inputs:[p],outputs:[-1]})[0]}else return u.dims.length===3&&(p=u.reshape([t,o,r,i])),e.compute(yt(p,Vu.perm),{inputs:[p],outputs:[-1]})[0]},Nu=(e,t)=>{let r=Jc(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,i=Fo(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return Rn(e,i,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let u=Fo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),a=Fo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);Rn(e,i,u,a,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var ep,tp,rp,np,op,ip,ap,sp,Hu,Lu=K(()=>{"use strict";fe();Se();$e();ep=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},tp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${se("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${se("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${se("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},rp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${se("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${se("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${se("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${se("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},np=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${se("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${se("uniforms.x_shape",i,t)})) {\n                  k = i32(${se("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${se("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},op=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${se("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${se("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${se("uniforms.x_shape",i,t)})) {\n                  k -= i32(${se("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${se("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},ip=(e,t,r)=>{switch(r.mode){case 0:return tp(e,t,r.pads.length);case 1:return rp(e,t,r.pads.length);case 2:return np(e,t,r.pads.length);case 3:return op(e,t,r.pads.length);default:throw new Error("Invalid mode")}},ap=(e,t)=>{let r=M.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=M.size(r),u=[{type:12,data:i},{type:6,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...Z(e[0].dims,r));let a=["rank"],c=p=>{let h=j("output",e[0].dataType,r.length),l=z("x",e[0].dataType,o.length),y=l.type.value,w=ip(h,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:y}),`\n            ${p.registerUniforms(_).declareVariables(l,h)}\n            ${p.mainStart()}\n            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(r)/64)},programUniforms:u}),getShaderSource:c}},sp=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let p=0;p<c.length;p++)u[Number(c[p])]=Number(r[p]),u[Number(c[p])+i]=Number(r[p+c.length])}else r.forEach((c,p)=>u[Number(p)]=Number(c));let a=[];return u.forEach(c=>a.push(c)),{mode:t.mode,value:o,pads:a}}else return t},Hu=(e,t)=>{ep(e.inputs);let r=sp(e.inputs,t);e.compute(ap(e.inputs,r),{inputs:[0]})}});var Ln,Fu,qu,ju,Ku,up,lp,Yu,Zu,Xu,Ju,Qu,el,tl,rl,nl,ol,il,al,sl=K(()=>{"use strict";hr();fe();Se();$e();Ln=e=>{if(fr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Fu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),c=t.strides.slice(),p=u?t.dilations.slice():[],h=t.pads.slice();er.adjustPoolAttributes(r,i,a,c,p,h);let l=er.computePoolOutputShape(r,i,c,p,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:c,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:c,pads:h,cacheKey:t.cacheKey});let w=l.slice();return w.push(w.splice(1,1)[0]),[y,o?w:l]},qu=(e,t)=>{let r=t.format==="NHWC",o=M.size(e),i=M.size(t.kernelShape),u=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],l=t.pads[t.pads.length-1],y=!!(h+l);u.push({type:12,data:c},{type:12,data:p},{type:12,data:h},{type:12,data:l}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],$=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],E=t.pads[t.pads.length-2];w=!!(S+E),u.push({type:12,data:_},{type:12,data:$},{type:12,data:S},{type:12,data:E}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=M.computeStrides(t.kernelShape);u.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,l)=>h+l);return[u,a,!!p,!1,!1]}},ju=(e,t,r,o,i,u,a,c,p,h,l,y)=>{let w=i.format==="NHWC",_=t.type.value,$=j("output",t.type.tensor,o);if(i.kernelShape.length<=2){let S="",E="",A="",x=r-(w?2:1);if(l?S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${x}] < 0 || xIndices[${x}]\n                      >= uniforms.x_shape[${x}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let T=r-(w?3:2);y?E=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${T}] = indices[${T}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${T}] < 0 || xIndices[${T}] >= uniforms.x_shape[${T}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:E=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${T}] = indices[${T}] * uniforms.sh - uniforms.phStart + j;\n                `,A=`\n              }\n            `}return`\n            ${e.registerUniforms(p).declareVariables(t,$)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${$.offsetToIndices("global_idx")};\n              var xIndices = ${$.offsetToIndices("global_idx")};\n\n              var value = ${_}(${c});\n              var pad = 0;\n              ${E}\n              ${S}\n              ${A}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=i.kernelShape.length,E=i.pads.length,A="";return h?A=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:A=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(p).declareVariables(t,$)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${$.offsetToIndices("global_idx")};\n              var xIndices = ${$.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${S}>;\n\n              var value = ${_}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${S-1}u; j++) {\n                  offsets[j] = offset / ${se("uniforms.kernelStrides","j",S)};\n                  offset -= offsets[j] * ${se("uniforms.kernelStrides","j",S)};\n                }\n                offsets[${S-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-S}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${se("uniforms.strides",`j - ${r-S}u`,S)}\n                    + offsets[j - ${r-S}u] - ${se("uniforms.pads","j - 2u",E)};\n                  ${A}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Ku=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,up=e=>`${Ku(e)};${e.countIncludePad}`,lp=e=>`${Ku(e)};${e.storageOrder};${e.dilations}`,Yu=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Zu=(e,t,r,o)=>{let[i,u]=Fu(t,o,r),a=z("x",t.dataType,t.dims.length),c=a.type.value,p="value += x_val;",h="";i.countIncludePad?h+=`value /= ${c}(uniforms.kernelSize);`:h+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[l,y,w,_,$]=qu(u,i);l.push(...Z(t.dims,u));let S=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${$}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:l}),getShaderSource:E=>ju(E,a,t.dims.length,u.length,i,p,h,0,y,w,_,$)}},Xu=e=>{let t=e.count_include_pad!==0,r=Yu(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:up(o)}},Ju=(e,t)=>{Ln(e.inputs),e.compute(Zu("AveragePool",e.inputs[0],!1,t))},Qu={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},el=e=>{let t=e.format;return{format:t,...Qu,cacheKey:t}},tl=(e,t)=>{Ln(e.inputs),e.compute(Zu("GlobalAveragePool",e.inputs[0],!0,t))},rl=(e,t,r,o)=>{let[i,u]=Fu(t,o,r),a=`\n      value = max(x_val, value);\n    `,c="",p=z("x",t.dataType,t.dims.length),h=["rank"],[l,y,w,_,$]=qu(u,i);return l.push(...Z(t.dims,u)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${$}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:l}),getShaderSource:S=>ju(S,p,t.dims.length,u.length,i,a,c,t.dataType===10?-65504:-1e5,y,w,_,$)}},nl=(e,t)=>{Ln(e.inputs),e.compute(rl("MaxPool",e.inputs[0],!1,t))},ol=e=>{let t=e.storage_order,r=e.dilations,o=Yu(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:lp(i)}},il=e=>{let t=e.format;return{format:t,...Qu,cacheKey:t}},al=(e,t)=>{Ln(e.inputs),e.compute(rl("GlobalMaxPool",e.inputs[0],!0,t))}});var cp,pp,ul,ll=K(()=>{"use strict";hr();fe();$e();cp=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},pp=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,c=[{type:12,data:a},{type:o,data:e},{type:o,data:r},...Z(u)],p=h=>{let l=j("output",o,u.length),y=l.type.value,w=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`\n        ${h.registerUniforms(w).declareVariables(l)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c})}},ul=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),fr.webgpu.validateInputContent&&cp(t,r,o),e.compute(pp(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var mp,fp,hp,gp,yp,bp,wp,vp,$p,_p,Sp,dl,xp,Cp,Ap,Ip,Tp,cl,pl,ml=K(()=>{"use strict";fe();Se();Ke();$e();mp=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},fp=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},hp=(e,t,r,o,i,u)=>{let[a,c,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(l=>u.push(l));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(l=>o.push(l)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");mp(o,t),t.axes.length>0&&fp(o,t.axes,h).forEach((l,y)=>o[y]=l)}if(p>0&&e.length>p&&(e[p].getBigInt64Array().forEach(l=>i.push(Number(l))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},gp=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",yp=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",bp=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},wp=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},vp=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},$p=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${se("uniforms.scales","i",o)};\n        var roi_low = ${se("uniforms.roi","i",i)};\n        var roi_hi = ${se("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${se("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${se("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,_p=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${se("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${se("uniforms.roi","i",u)};\n          var roi_hi = ${se("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${se("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${se("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Sp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${se("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,dl=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",xp=(e,t,r,o,i)=>{let[a,c,p,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],l=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${l} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(col, ${r[p]} - 1))`)};\n      ${dl(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${l} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${l} = originalIndices[${c}];\n      var col:${l} = originalIndices[${p}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[p]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[p]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${l} = getInputValue(batch, channel, row1, col1);\n      var x12: ${l} = getInputValue(batch, channel, row1, col2);\n      var x21: ${l} = getInputValue(batch, channel, row2, col1);\n      var x22: ${l} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${l} = abs(row - ${l}(row1));\n      var dx2: ${l} = abs(${l}(row2) - row);\n      var dy1: ${l} = abs(col - ${l}(col1));\n      var dy2: ${l} = abs(${l}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Cp=(e,t,r,o,i,u,a,c,p,h)=>{let l=r.length===2,y=!0,[w,_]=l?[0,1]:y?[2,3]:[1,2],$=e.type.value,S=E=>{let A=E===w?"row":"col";return`\n      fn ${A}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${$} {\n        var output_index = ${t.indicesGet("output_indices",E)};\n        var originalIdx: ${$} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[E]},\n        ${o[E]}, ${r[E]}, ${u[E]}, ${u[E]} + ${r.length});\n        var fractOriginalIdx: ${$} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[E]} - 1))) {\n          return ${p};\n        }\n        var data: array<${$}, 4> = array<${$}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${A}: ${$} = originalIdx + ${$}(i);\n          if (${A} < 0 || ${A} >= ${r[E]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${p};`:`${A} = max(0, min(${A}, ${r[E]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",E,`u32(${A})`)};\n          data[i + 1] = ${E===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${S(w)};\n    ${S(_)};\n  fn getCubicInterpolationCoefs(s: ${$}) -> array<${$}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${$}, 4> = array<${$}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${$} = 1.0 - absS;\n    var twoMinusAbsS: ${$} = 2.0 - absS;\n    var onePlusAbsS: ${$} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${$}, 4>, coefs: array<${$}, 4>) -> ${$} {\n    var coefsSum: ${$} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${$} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Ap=(e,t,r,o,i)=>{let[a,c,p,h,l]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(height, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${dl(e,l,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${c}];\n      var height:${y} = originalIndices[${p}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[p]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[p]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${l}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Ip=(e,t,r,o,i,u)=>{let a=e.dims,c=bp(u,t.axes,a.length),p=wp(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((x,P)=>x===0?1:p[P]/x),t.keepAspectRatioPolicy!=="stretch"&&(p=vp(a,h,t)));let l=j("output",e.dataType,p.length),y=z("input",e.dataType,a.length),w=M.size(p),_=a.length===p.length&&a.every((x,P)=>x===p[P]),$=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,E=y.type.value,A=x=>`\n      ${_?"":`\n      ${gp(t.coordinateTransformMode,E)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Sp(y,a)};\n              ${yp(t.nearestMode,r,E)};\n              ${_p(y,l,a,p,h.length,c.length,$)};\n              `;case"linear":return`\n              ${$p(l,a,p,h.length,c.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${xp(y,l,a,$,S)}`;if(a.length===3||a.length===5)return`${Ap(y,l,a,$,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${Cp(y,l,a,p,h,c,t.cubicCoeffA,$,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",c.length).declareVariables(y,l)}\n      ${x.mainStart()}\n        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${l.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${c.length>0?c:""}|${_}|${a}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},{type:1,data:h},{type:1,data:c},...Z(a,p)]})}},Tp=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},cl=(e,t)=>{let r=[],o=[],i=[],u=Tp(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");hp(e.inputs,t,u,r,o,i),e.compute(Ip(e.inputs[0],t,u,r,o,i),{inputs:[0]})},pl=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,c=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return we({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:c,mode:p,nearestMode:h})}});var Ep,Pp,fl,hl=K(()=>{"use strict";fe();Se();Ke();$e();Ep=(e,t)=>{let[r,o,i,u]=e,{numHeads:a,rotaryEmbeddingDim:c}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input \'x\' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!M.areEqual(o.dims,[])&&!M.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input \'position_ids\' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input \'cos_cache\' is expected to have 2 dimensions, got ${i.dims.length}`);if(u.dims.length!==2)throw new Error(`Input \'sin_cache\' is expected to have 2 dimensions, got ${u.dims.length}`);if(!M.areEqual(i.dims,u.dims))throw new Error("Inputs \'cos_cache\' and \'sin_cache\' are expected to have the same shape");if(c>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=r.dims[0],h=r.dims[r.dims.length-2],l=i.dims[0],y=M.sizeFromDimension(r.dims,1)/h,w=c===0?i.dims[1]*2:y/a;if(c>w)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(p!==o.dims[0])throw new Error(`Input \'position_ids\' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(h!==o.dims[1])throw new Error(`Input \'position_ids\' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(w/2!==i.dims[1]&&c/2!==i.dims[1])throw new Error(`Input \'cos_cache\' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>l)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Pp=(e,t)=>{let{interleaved:r,numHeads:o,rotaryEmbeddingDim:i,scale:u}=t,a=e[0].dims[0],c=M.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=c/p,l=e[2].dims[1],y=i===0?l*2:h/o,w=new Array(a,p,h/y,y-l),_=M.computeStrides(w),$=[{type:1,data:u},{type:12,data:w},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[c,h,y,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[c,y,p*y,1]}):[],...Z(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],S=E=>{let A=z("input",e[0].dataType,e[0].dims.length),x=z("position_ids",e[1].dataType,e[1].dims.length),P=z("cos_cache",e[2].dataType,e[2].dims.length),T=z("sin_cache",e[3].dataType,e[3].dims.length),k=j("output",e[0].dataType,e[0].dims.length);return E.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:w.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`\n        ${E.declareVariables(A,x,P,T,k)}\n\n        ${E.mainStart(tr)}\n          let half_rotary_emb_dim = uniforms.${P.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${E.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${x.broadcastedIndicesToOffset("bsnh.xy",j("",x.type.tensor,2))};\n            let position_id =\n                u32(${x.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});\n            let j = i + select(half_rotary_emb_dim, 1, ${r});\n            let re = ${A.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} -\n                ${A.getByOffset("j")} * ${T.get("position_id","bsnh[3]")};\n            ${k.setByOffset("i","re")}\n            let im = ${A.getByOffset("i")} * ${T.get("position_id","bsnh[3]")} +\n                ${A.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};\n            ${k.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${k.setByOffset("k",A.getByOffset("k"))}\n          }\n        }`};return{name:"RotaryEmbedding",shaderCache:{hint:we({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(w)/tr)},programUniforms:$})}},fl=(e,t)=>{Ep(e.inputs,t),e.compute(Pp(e.inputs,t))}});var Op,kp,gl,yl=K(()=>{"use strict";fe();Se();$e();Op=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},kp=(e,t,r,o)=>{let i=e[0].dims,u=M.size(i),a=i,c=u,p=i.slice(-1)[0],h=o?i.slice(0,-1).concat(1):[],l=e.length>3,y=e.length>4,w=o&&r>1,_=o&&r>2,$=r>3,S=We(p),E=[{type:12,data:c},{type:12,data:S},{type:12,data:p},{type:1,data:t.epsilon}],A=P=>{let T=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],k=[z("x",e[0].dataType,e[0].dims,S),z("skip",e[1].dataType,e[1].dims,S),z("gamma",e[2].dataType,e[2].dims,S)];l&&k.push(z("beta",e[3].dataType,e[3].dims,S)),y&&k.push(z("bias",e[4].dataType,e[4].dims,S)),k.push(j("output",e[0].dataType,a,S)),w&&k.push(j("mean_output",1,h)),_&&k.push(j("inv_std_output",1,h)),$&&k.push(j("input_skip_bias_sum",e[0].dataType,a,S));let W=De(e[0].dataType);return`\n\n      ${P.registerUniforms(T).declareVariables(...k)}\n\n      ${P.mainStart()}\n        ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${Je("f32",S)};\n        var squareSum = ${Je("f32",S)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${y?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${$?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${vt(W,S,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${lt("sum",S)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${lt("squareSum",S)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${w?"mean_output[global_idx] = mean;":""}\n        ${_?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${W}(mean)) * ${W}(inv_std_dev) * gamma[i] + ${l?"beta[i]":"0.0"};\n        }\n      }`},x=[{dims:a,dataType:e[0].dataType}];return r>1&&x.push({dims:h,dataType:1}),r>2&&x.push({dims:h,dataType:1}),r>3&&x.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${S};${w};${_};${$}`,inputDependencies:e.map((P,T)=>"type")},getShaderSource:A,getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(c/p/64)},programUniforms:E})}},gl=(e,t)=>{Op(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(kp(e.inputs,t,e.outputCount,!1),{outputs:o})}});var Rp,Fn,Bp,bl,Dp,Mp,wl,vl,$l=K(()=>{"use strict";fe();Se();Ke();$e();Rp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Fn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Bp=(e,t)=>{if(e.length>1){let r=Fn(e,1),o=Fn(e,2),i=Fn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),we({starts:r,ends:o,axes:i})}else return t},bl=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},Dp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${se("uniforms.input_shape","i",r.length)};\n            let steps_i = ${se("uniforms.steps","i",r.length)};\n            let signs_i = ${se("uniforms.signs","i",r.length)};\n            let starts_i = ${se("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Mp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=t.axes.length>0?M.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Fn(e,4);u.forEach(A=>A!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((A,x)=>bl(A,x,r,i,u)),c=t.ends.map((A,x)=>bl(A,x,r,i,u));if(i.length!==a.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let A=0;A<r.length;++A)i.includes(A)||(a.splice(A,0,0),c.splice(A,0,r[A]),u.splice(A,0,1));let p=u.map(A=>Math.sign(A));u.forEach((A,x,P)=>{if(A<0){let T=(c[x]-a[x])/A,k=a[x],W=k+T*u[x];a[x]=W,c[x]=k,P[x]=-A}});let h=r.slice(0);i.forEach((A,x)=>{h[A]=Math.ceil((c[A]-a[A])/u[A])});let l={dims:h,dataType:e[0].dataType},y=j("output",e[0].dataType,h.length),w=z("input",e[0].dataType,e[0].dims.length),_=M.size(h),$=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:u.length}],S=[{type:12,data:_},{type:12,data:a},{type:6,data:p},{type:12,data:u},...Z(e[0].dims,h)],E=A=>`\n      ${A.registerUniforms($).declareVariables(w,y)}\n        ${Dp(w,y,r)}\n        ${A.mainStart()}\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:E,getRunData:()=>({outputs:[l],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},wl=(e,t)=>{Rp(e.inputs,t);let r=Bp(e.inputs,t);e.compute(Mp(e.inputs,r),{inputs:[0]})},vl=e=>{let t=e.starts,r=e.ends,o=e.axes;return we({starts:t,ends:r,axes:o})}});var zp,Up,_l,Sl,xl=K(()=>{"use strict";fe();Se();Ke();$e();zp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Up=(e,t)=>{let r=e.dims,o=M.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],c=o/a,p=We(a),h=a/p,l=(E,A)=>A===4?`max(max(${E}.x, ${E}.y), max(${E}.z, ${E}.w))`:A===2?`max(${E}.x, ${E}.y)`:A===3?`max(max(${E}.x, ${E}.y), ${E}.z)`:E,y=z("x",e.dataType,e.dims,p),w=j("result",e.dataType,e.dims,p),_=y.type.value,$=De(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,S=E=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${E.registerUniform("packedCols","i32").declareVariables(y,w)}\n      ${E.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${$}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${l("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${lt("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${p}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:6,data:h}]}),getShaderSource:S}},_l=(e,t)=>{zp(e.inputs),e.compute(Up(e.inputs[0],t))},Sl=e=>we({axis:e.axis})});var Vp,Wp,Np,Gp,Hp,Cl,Al,Il=K(()=>{"use strict";fe();Se();Ke();$e();Vp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Wp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),we({numOutputs:o,axis:t.axis,splitSizes:r})},Np=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${se("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Gp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Hp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=e[0].dataType,u=M.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),c=z("input",i,r.length),p=new Array(t.numOutputs),h=[],l=[],y=0,w=[{type:12,data:o}];for(let $=0;$<t.numOutputs;$++){y+=t.splitSizes[$],p[$]=y;let S=r.slice();S[t.axis]=t.splitSizes[$],l.push(S),a[$]=j(`output${$}`,i,S.length),h.push({dims:l[$],dataType:e[0].dataType})}w.push({type:12,data:p},...Z(r,...l));let _=$=>`\n  ${$.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(c,...a)}\n  ${Np(p.length)}\n  ${Gp(a)}\n\n  ${$.mainStart()}\n    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${se("uniforms.size_in_split_axis","output_number - 1u",p.length)};\n      ${c.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},Cl=(e,t)=>{Vp(e.inputs);let r=e.inputs.length===1?t:Wp(e.inputs,t);e.compute(Hp(e.inputs,r),{inputs:[0]})},Al=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return we({axis:t,numOutputs:o,splitSizes:r})}});var Tl,Lp,Fp,qp,El,Pl=K(()=>{"use strict";fe();Se();$e();Tl=e=>Array.from(e.getBigInt64Array(),Number),Lp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Tl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Fp=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},qp=e=>{let t=e[0].dims,r=Tl(e[1]),o=Fp(t,r),i=M.size(o),u=e[0].dataType,a=z("input",u,t.length),c=j("output",u,o.length),p=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,c)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...Z(e[0].dims,o)]}),getShaderSource:p}},El=e=>{Lp(e.inputs),e.compute(qp(e.inputs),{inputs:[0]})}});var jp,Kp,Ol,kl=K(()=>{"use strict";fe();Se();$e();jp=(e,t,r,o,i)=>{let u=j("output_data",i,r.length,4),a=z("a_data",t[1].dataType,t[1].dims.length,4),c=z("b_data",t[2].dataType,t[2].dims.length,4),p=z("c_data",t[0].dataType,t[0].dims.length,4),h,l=(y,w,_)=>`select(${w}, ${y}, ${_})`;if(!o)h=u.setByOffset("global_idx",l(a.getByOffset("global_idx"),c.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let y=(w,_,$="")=>{let S=`a_data[index_a${_}][component_a${_}]`,E=`b_data[index_b${_}][component_b${_}]`,A=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`\n            let output_indices${_} = ${u.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_b${_} = ${c.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_c${_} = ${p.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            let component_c${_} = offset_c${_} % 4u;\n            ${w}[${_}] = ${$}(${l(S,E,A)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(p,a,c,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},Kp=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(M.areEqual(t,r)&&M.areEqual(r,o)),a=t,c=M.size(t);if(u){let h=It.calcShape(It.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,c=M.size(a)}let p=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>jp(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:p},...Z(o,t,r,a)]})}},Ol=e=>{e.compute(Kp(e.inputs))}});var Rl,Bl=K(()=>{"use strict";qa();Po();Ya();Xa();Ds();qs();Ys();Do();lu();pu();yu();vu();_u();Cu();Tu();Ou();Ru();Du();zo();Uu();Gu();Lu();sl();ll();On();ml();hl();yl();$l();xl();Il();Pl();yr();Mn();kl();Rl=new Map([["Abs",[Ja]],["Acos",[Qa]],["Acosh",[es]],["Add",[Ms]],["ArgMax",[Fa,Eo]],["ArgMin",[La,Eo]],["Asin",[ts]],["Asinh",[rs]],["Atan",[ns]],["Atanh",[os]],["Attention",[ja]],["AveragePool",[Ju,Xu]],["BatchNormalization",[Ka]],["BiasAdd",[Za]],["BiasSplitGelu",[Bs]],["Cast",[as,is]],["Ceil",[us]],["Clip",[ss]],["Concat",[js,Ks]],["Conv",[Wo,Vo]],["ConvTranspose",[uu,su]],["Cos",[ls]],["Cosh",[ds]],["CumSum",[du,cu]],["Div",[zs]],["Einsum",[hu,gu]],["Elu",[cs,Bn]],["Equal",[Us]],["Erf",[ps]],["Exp",[ms]],["Expand",[wu]],["FastGelu",[$u]],["Floor",[fs]],["FusedConv",[Wo,Vo]],["Gather",[xu,Su]],["GatherElements",[Iu,Au]],["Gelu",[hs]],["Gemm",[Pu,Eu]],["GlobalAveragePool",[tl,el]],["GlobalMaxPool",[al,il]],["Greater",[Gs]],["GreaterOrEqual",[Ls]],["HardSigmoid",[Ss,_s]],["InstanceNormalization",[ku]],["LayerNormalization",[Bu]],["LeakyRelu",[gs,Bn]],["Less",[Hs]],["LessOrEqual",[Fs]],["Log",[ks]],["MatMul",[tu]],["MatMulNBits",[Mu,zu]],["MaxPool",[nl,ol]],["Mul",[Vs]],["MultiHeadAttention",[Nu,Wu]],["Neg",[bs]],["Not",[ys]],["Pad",[Hu]],["Pow",[Ws]],["Range",[ul]],["Reciprocal",[ws]],["ReduceMin",[Ua]],["ReduceMean",[Ra]],["ReduceMax",[za]],["ReduceSum",[Wa]],["ReduceProd",[Va]],["ReduceL1",[Ba]],["ReduceL2",[Da]],["ReduceLogSum",[Ga]],["ReduceLogSumExp",[Ma]],["ReduceSumSquare",[Na]],["Relu",[vs]],["Resize",[cl,pl]],["RotaryEmbedding",[fl]],["Sigmoid",[$s]],["Sin",[xs]],["Sinh",[Cs]],["Slice",[wl,vl]],["SkipLayerNormalization",[gl]],["Split",[Cl,Al]],["Sqrt",[As]],["Softmax",[_l,Sl]],["Sub",[Ns]],["Tan",[Is]],["Tanh",[Es]],["ThresholdedRelu",[Os,Bn]],["Tile",[El]],["Transpose",[va,$a]],["Where",[Ol]]])});var qn,Dl=K(()=>{"use strict";hr();Ht();$e();qn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){Qt(t.programInfo.name);let a=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let p=[];for(let l of r)p.push({binding:p.length,resource:{buffer:l.buffer}});for(let l of o)p.push({binding:p.length,resource:{buffer:l.buffer}});u&&p.push({binding:p.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:p,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let l={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:h,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(l)}c.setPipeline(t.computePipeline),c.setBindGroup(0,h),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Gt(t.programInfo.name)}dispose(){}build(t,r){Qt(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=ba(r,this.backend.device.limits),a=t.getShaderSource(u),c=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,p=o.createShaderModule({code:c,label:t.name});Ve("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let h=o.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:t.name});return Gt(t.name),{programInfo:t,computePipeline:h,uniformVariablesInfo:u.variablesInfo}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,c=Math.ceil(Math.sqrt(a));if(c>u){if(c=Math.ceil(Math.cbrt(a)),c>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var Yp,Zp,qo,jn,Ml=K(()=>{"use strict";hr();fe();Ht();ma();ya();Bl();Dl();Yp=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Zp=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${Yp(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},qo=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},jn=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.adapterInfo=new qo(await r.requestAdapterInfo()),this.gpuDataManager=ga(this),this.programManager=new qn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ca(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Qt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,c=this.kernels.get(a),p=c.kernelType,h=c.kernelName,l=u.programName,y=u.inputTensorViews,w=u.outputTensorViews,_=r[i*2],$=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let S=Number(_-this.queryTimeBase),E=Number($-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(E))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(A=>({dims:A.dims,dataType:Nt(A.dataType)})),outputsMetadata:w.map(A=>({dims:A.dims,dataType:Nt(A.dataType)})),kernelId:a,kernelType:p,kernelName:h,programName:l,startTime:S,endTime:E});else{let A="";y.forEach((P,T)=>{A+=`input[${T}]: [${P.dims}] | ${Nt(P.dataType)}, `});let x="";w.forEach((P,T)=>{x+=`output[${T}]: [${P.dims}] | ${Nt(P.dataType)}, `}),console.log(`[profiling] kernel "${a}|${p}|${h}|${l}" ${A}${x}execution time: ${E-S} ns`)}wo("GPU",`${l}::${_}::${$}`)}t.unmap(),this.pendingQueries.delete(t)}),Gt()}run(t,r,o,i,u){Qt(t.name);let a=[];for(let x=0;x<r.length;++x){let P=r[x].data;if(P===0)continue;let T=this.gpuDataManager.get(P);if(!T)throw new Error(`no GPU data for input: ${P}`);a.push(T)}let{outputs:c,dispatchGroup:p,programUniforms:h}=t.getRunData(r),l=o.length===0?c.map((x,P)=>P):o;if(l.length!==c.length)throw new Error(`Output size ${l.length} must be equal to ${c.length}.`);let y=[],w=[];for(let x=0;x<c.length;++x){if(!Number.isInteger(l[x])||l[x]<-3||l[x]>=c.length)throw new Error(`Invalid output index: ${l[x]}`);if(l[x]===-3)continue;let P=l[x]===-1,T=l[x]===-2,k=P||T?u(c[x].dataType,c[x].dims):i(l[x],c[x].dataType,c[x].dims);if(y.push(k),k.data===0)continue;let W=this.gpuDataManager.get(k.data);if(!W)throw new Error(`no GPU data for output: ${k.data}`);if(P&&this.temporaryData.push(W),T){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(W)}w.push(W)}if(a.length!==r.length||w.length!==y.length){if(w.length===0)return Gt(t.name),y;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let _;if(h){let x=0,P=[];h.forEach(N=>{let G=typeof N.data=="number"?[N.data]:N.data;if(G.length===0)return;let oe=N.type===10?2:4,X,U;N.type===10?(U=G.length>4?16:G.length>2?8:G.length*oe,X=G.length>4?16:oe*G.length):(U=G.length<=2?G.length*oe:16,X=16),x=Math.ceil(x/U)*U,P.push(x);let re=N.type===10?8:4;x+=G.length>4?Math.ceil(G.length/re)*X:G.length*oe});let T=16;x=Math.ceil(x/T)*T;let k=new ArrayBuffer(x);h.forEach((N,G)=>{let oe=P[G],X=typeof N.data=="number"?[N.data]:N.data;if(N.type===6)new Int32Array(k,oe,X.length).set(X);else if(N.type===12)new Uint32Array(k,oe,X.length).set(X);else if(N.type===10)new Uint16Array(k,oe,X.length).set(X);else if(N.type===1)new Float32Array(k,oe,X.length).set(X);else throw new Error(`Unsupported uniform type: ${Nt(N.type)}`)});let W=this.gpuDataManager.create(x,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(W.buffer,0,k,0,x),this.gpuDataManager.release(W.id),_={offset:0,size:x,buffer:W.buffer}}let $=this.programManager.normalizeDispatchGroupSize(p),S=$[1]===1&&$[2]===1,E=Zp(t,r,S),A=this.programManager.getArtifact(E);if(A||(A=this.programManager.build(t,$),this.programManager.setArtifact(E,A),Ve("info",()=>`[artifact] key: ${E}, programName: ${t.name}`)),h&&A.uniformVariablesInfo){if(h.length!==A.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${A.uniformVariablesInfo.length}, got ${h.length} in program "${A.programInfo.name}".`);for(let x=0;x<h.length;x++){let P=h[x],T=P.type,k=typeof P.data=="number"?1:P.data.length,[W,N]=A.uniformVariablesInfo[x];if(T!==W||k!==N)throw new Error(`Uniform variable ${x} mismatch: expect type ${W} with size ${N}, got type ${T} with size ${k} in program "${A.programInfo.name}".`)}}if(Ve("info",()=>`[ProgramManager] run "${t.name}" (key=${E}) with ${$[0]}x${$[1]}x${$[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let x={kernelId:this.currentKernelId,programName:A.programInfo.name,inputTensorViews:r,outputTensorViews:y};this.pendingKernels.push(x),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(x)}return this.programManager.run(A,a,w,$,_),Gt(t.name),y}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=Rl.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,c=i.kernelEntry,p=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),Ve("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),c(r,p[1]),0}catch(l){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${l}`)),1}finally{h&&o.push(this.device.popErrorScope().then(l=>l?`GPU validation error for kernel "[${u}] ${a}": ${l.message}`:null));for(let l of this.temporaryData)this.gpuDataManager.release(l.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),c=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await _o(this,t,r);return pa(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ve("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ve("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ve("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let i=0;i<o;i++){let u=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(a.computePipeline),u.setBindGroup(0,a.bindGroup),u.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var zl={};wn(zl,{init:()=>Xp});var qr,jo,Xp,Ul=K(()=>{"use strict";fe();Ml();Ht();Se();qr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(M.size(t)!==M.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},jo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let c=[];for(let p=0;p<a;p++){let h=i[u++],l=i[u++],y=i[u++],w=[];for(let _=0;_<y;_++)w.push(i[u++]);c.push(new qr(t,h,l,w))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],u=(c,p,h)=>new qr(this.module,p,this.output(c,h),h),a=(c,p)=>{let h=Nr(c);if(!h)throw new Error(`Unsupported data type: ${c}`);let l=h*M.size(p),y=l>0?this.backend.gpuDataManager.create(l).id:0;return new qr(this.module,c,y,p)};return this.backend.run(t,o,i,u,a)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},Xp=async(e,t,r,o)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let u=new jn;await u.initialize(r,o),i("webgpu",[u,a=>u.alloc(a),a=>u.free(a),(a,c,p,h=!1)=>{if(h)Ve("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${a}, dst=${c}, size=${p}`),u.memcpy(a,c);else{Ve("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${a}, gpuDataId=${c}, size=${p}`);let l=t.HEAPU8.subarray(a>>>0,(a>>>0)+p);u.upload(c,l)}},async(a,c,p)=>{Ve("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${c}, size=${p}`),await u.download(a,()=>t.HEAPU8.subarray(c>>>0,(c>>>0)+p))},(a,c,p)=>u.createKernel(a,c,p,t.UTF8ToString(t._JsepGetNodeName(c))),a=>u.releaseKernel(a),(a,c,p,h)=>{Ve("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${a}, contextDataOffset=${c}`);let l=new jo(t,u,c);return u.computeKernel(a,l,h)},()=>u.captureBegin(),()=>u.captureEnd(),()=>u.replay()])}else i("webnn")}});var Ui;Ui=Ti();var ud=Di(),fo,ho=!1,vn=!1,zi=!1,ld=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},dd=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},cd=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Vi=async e=>{if(ho)return Promise.resolve();if(vn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(zi)throw new Error("previous call to \'initializeWebAssembly()\' failed.");vn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=ld(r),u=o&&dd(),a=e.wasmPaths,c=typeof a=="string"?a:void 0,p=cd(u,i),h=typeof a=="object"?a[p]:void 0,l=!1,y=[];if(t>0&&y.push(new Promise(w=>{setTimeout(()=>{l=!0,w()},t)})),y.push(new Promise((w,_)=>{let $=i?ud:Ui,S={locateFile:(E,A)=>{if(i&&E.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Mi()],{type:"text/javascript"}));if(E.endsWith(".wasm")){if(h)return h;let x=c??A;return p==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":p==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+p}return A+E}};if(i)if(S.numThreads=r,typeof Blob>"u")S.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let E=`var ortWasmThreaded=${$.toString()};`;S.mainScriptUrlOrBlob=new Blob([E],{type:"text/javascript"})}$(S).then(E=>{vn=!1,ho=!0,fo=E,w()},E=>{vn=!1,zi=!0,_(E)})})),await Promise.race(y),l)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ge=()=>{if(ho&&fo)return fo;throw new Error("WebAssembly is not initialized yet.")};var He=(e,t)=>{let r=Ge(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Wr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Wr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Ue=e=>{let t=Ge(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Wi=e=>{let t=Ge(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=He(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Ue("Can\'t create run options."),e?.extra!==void 0&&Wr(e.extra,"",new WeakSet,(a,c)=>{let p=He(a,o),h=He(c,o);t._OrtAddRunConfigEntry(r,p,h)!==0&&Ue(`Can\'t set a run config entry: ${a} - ${c}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var pd=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},md=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},fd=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},hd=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let c=He("deviceType",r),p=He(a.deviceType,r);Ge()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let c=a.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let p=He("numThreads",r),h=He(c.toString(),r);Ge()._OrtAddSessionConfigEntry(e,p,h)!==0&&Ue(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let c=He("powerPreference",r),p=He(a.powerPreference,r);Ge()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let c=He("preferredLayout",r),p=He(a.preferredLayout,r);Ge()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=He(i,r);Ge()._OrtAppendExecutionProvider(e,u)!==0&&Ue(`Can\'t append execution provider: ${i}.`)}},Ni=e=>{let t=Ge(),r=0,o=[],i=e||{};fd(i);try{let u=pd(i.graphOptimizationLevel??"all"),a=md(i.executionMode??"sequential"),c=typeof i.logId=="string"?He(i.logId,o):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let l=typeof i.optimizedModelFilePath=="string"?He(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,c,p,h,l),r===0&&Ue("Can\'t create session options."),i.executionProviders&&hd(r,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let y=He("enableGraphCapture",o),w=He(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,y,w)!==0&&Ue(`Can\'t set a session config entry: \'enableGraphCapture\' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[y,w]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=He(y,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&Ue(`Can\'t set a free dimension override: ${y} - ${w}.`)}return i.extra!==void 0&&Wr(i.extra,"",new WeakSet,(y,w)=>{let _=He(y,o),$=He(w,o);t._OrtAddSessionConfigEntry(r,_,$)!==0&&Ue(`Can\'t set a session config entry: ${y} - ${w}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};fe();var Hi=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(c){if(c instanceof RangeError){let p=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw c}let a=0;for(;;){let{done:c,value:p}=await i.read();if(c)break;let h=p.byteLength;new Uint8Array(u,a,h).set(p),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Jp=(e,t)=>{Ge()._OrtInit(e,t)!==0&&Ue("Can\'t initialize onnxruntime.")},Wl=async e=>{Jp(e.wasm.numThreads,Gr(e.logLevel))},Nl=async(e,t)=>{{let r=(Ul(),mr(zl)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let u=e.webgpu.forceFallbackAdapter;if(u!==void 0&&typeof u!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${u}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:u}),!o)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",Ge(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Ge(),e)}}},rr=new Map,Qp=e=>{let t=Ge(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ue("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Ko=e=>{let t=Ge(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Gl=async(e,t)=>{let r,o,i=Ge();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Ko(e);let u=0,a=0,c=0,p=[],h=[],l=[];try{if([a,p]=Ni(t),t?.externalData&&i.mountExternalData){let x=[];for(let P of t.externalData){let T=typeof P=="string"?P:P.path;x.push(Hi(typeof P=="string"?P:P.data).then(k=>{i.mountExternalData(T,k)}))}await Promise.all(x)}u=await i._OrtCreateSession(r,o,a),u===0&&Ue("Can\'t create a session.");let[y,w]=Qp(u),_=!!t?.enableGraphCapture,$=[],S=[],E=[];for(let x=0;x<y;x++){let P=i._OrtGetInputName(u,x);P===0&&Ue("Can\'t get an input name."),h.push(P),$.push(i.UTF8ToString(P))}for(let x=0;x<w;x++){let P=i._OrtGetOutputName(u,x);P===0&&Ue("Can\'t get an output name."),l.push(P);let T=i.UTF8ToString(P);S.push(T);{if(_&&t?.preferredOutputLocation===void 0){E.push("gpu-buffer");continue}let k=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[T]??"cpu";if(k!=="cpu"&&k!=="cpu-pinned"&&k!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${k}.`);if(_&&k!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${k}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);E.push(k)}}let A=null;return E.some(x=>x==="gpu-buffer")&&(c=i._OrtCreateBinding(u),c===0&&Ue("Can\'t create IO binding."),A={handle:c,outputPreferredLocations:E,outputPreferredLocationsEncoded:E.map(x=>yo(x))}),rr.set(u,[u,h,l,A,_,!1]),[u,$,S]}catch(y){throw h.forEach(w=>i._OrtFree(w)),l.forEach(w=>i._OrtFree(w)),c!==0&&i._OrtReleaseBinding(c),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),p.forEach(y=>i._free(y)),i.unmountExternalData?.()}},Hl=e=>{let t=Ge(),r=rr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a,c]=r;a&&(c&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(o),rr.delete(e)},Vl=(e,t,r,o,i,u=!1)=>{if(!e){t.push(0);return}let a=Ge(),c=e[0],p=e[1],h=e[3],l,y;if(c==="string"&&h==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let $=e[2].gpuBuffer,S=Nr(go(c));y=p.reduce((A,x)=>A*x,1)*S;let E=a.jsepRegisterBuffer;if(!E)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');l=E(o,i,$,y)}else{let $=e[2];if(Array.isArray($)){y=4*$.length,l=a._malloc(y),r.push(l);let S=l/4;for(let E=0;E<$.length;E++){if(typeof $[E]!="string")throw new TypeError(`tensor data at index ${E} is not a string`);a.HEAPU32[S++]=He($[E],r)}}else y=$.byteLength,l=a._malloc(y),r.push(l),a.HEAPU8.set(new Uint8Array($.buffer,$.byteOffset,y),l)}let w=a.stackSave(),_=a.stackAlloc(4*p.length);try{let $=_/4;p.forEach(E=>a.HEAP32[$++]=E);let S=a._OrtCreateTensor(go(c),l,y,_,p.length,yo(h));S===0&&Ue(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(S)}finally{a.stackRestore(w)}},Ll=async(e,t,r,o,i,u)=>{let a=Ge(),c=rr.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let p=c[0],h=c[1],l=c[2],y=c[3],w=c[4],_=c[5],$=t.length,S=o.length,E=0,A=[],x=[],P=[],T=[],k=a.stackSave(),W=a.stackAlloc($*4),N=a.stackAlloc($*4),G=a.stackAlloc(S*4),oe=a.stackAlloc(S*4);try{[E,A]=Wi(u);for(let te=0;te<$;te++)Vl(r[te],x,T,e,t[te],w);for(let te=0;te<S;te++)Vl(i[te],P,T,e,$+o[te],w);let X=W/4,U=N/4,re=G/4,Be=oe/4;for(let te=0;te<$;te++)a.HEAPU32[X++]=x[te],a.HEAPU32[U++]=h[t[te]];for(let te=0;te<S;te++)a.HEAPU32[re++]=P[te],a.HEAPU32[Be++]=l[o[te]];if(y&&!_){let{handle:te,outputPreferredLocations:Me,outputPreferredLocationsEncoded:ye}=y;if(h.length!==$)throw new Error(`input count from feeds (${$}) is expected to be always equal to model\'s input count (${h.length}).`);for(let he=0;he<$;he++){let ue=t[he];await a._OrtBindInput(te,h[ue],x[he])!==0&&Ue(`Can\'t bind input[${he}] for session=${e}.`)}for(let he=0;he<S;he++){let ue=o[he];i[he]?.[3]?a._OrtBindOutput(te,l[ue],P[he],0)!==0&&Ue(`Can\'t bind pre-allocated output[${he}] for session=${e}.`):a._OrtBindOutput(te,l[ue],0,ye[ue])!==0&&Ue(`Can\'t bind output[${he}] to ${Me[he]} for session=${e}.`)}rr.set(e,[p,h,l,y,w,!0])}a.jsepOnRunStart?.(p);let Ee;y?Ee=await a._OrtRunWithBinding(p,y.handle,S,G,E):Ee=await a._OrtRun(p,N,W,$,oe,S,G,E),Ee!==0&&Ue("failed to call OrtRun().");let Ae=[];for(let te=0;te<S;te++){let Me=a.HEAPU32[G/4+te];if(Me===P[te]){Ae.push(i[te]);continue}let ye=a.stackSave(),he=a.stackAlloc(4*4),ue=!1,ge,Pe=0;try{a._OrtGetTensorData(Me,he,he+4,he+8,he+12)!==0&&Ue(`Can\'t access output tensor data on index ${te}.`);let F=he/4,ie=a.HEAPU32[F++];Pe=a.HEAPU32[F++];let xe=a.HEAPU32[F++],Ne=a.HEAPU32[F++],Ye=[];for(let Fe=0;Fe<Ne;Fe++)Ye.push(a.HEAPU32[xe/4+Fe]);a._OrtFree(xe);let dt=Ye.reduce((Fe,qe)=>Fe*qe,1);ge=Nt(ie);let et=y?.outputPreferredLocations[o[te]];if(ge==="string"){if(et==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Fe=[],qe=Pe/4;for(let ct=0;ct<dt;ct++){let zt=a.HEAPU32[qe++],xt=ct===dt-1?void 0:a.HEAPU32[qe]-zt;Fe.push(a.UTF8ToString(zt,xt))}Ae.push([ge,Ye,Fe,"cpu"])}else if(et==="gpu-buffer"&&dt>0){let Fe=a.jsepGetBuffer;if(!Fe)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let qe=Fe(Pe),ct=Nr(ie);if(ct===void 0||!Gi(ge))throw new Error(`Unsupported data type: ${ge}`);ue=!0,Ae.push([ge,Ye,{gpuBuffer:qe,download:a.jsepCreateDownloader(qe,dt*ct,ge),dispose:()=>{a._OrtReleaseTensor(Me)}},"gpu-buffer"])}else{let Fe=$n(ge),qe=new Fe(dt);new Uint8Array(qe.buffer,qe.byteOffset,qe.byteLength).set(a.HEAPU8.subarray(Pe,Pe+qe.byteLength)),Ae.push([ge,Ye,qe,"cpu"])}}finally{a.stackRestore(ye),ge==="string"&&Pe&&a._free(Pe),ue||a._OrtReleaseTensor(Me)}}return y&&!w&&(a._OrtClearBoundOutputs(y.handle),rr.set(e,[p,h,l,y,w,!1])),Ae}finally{a.stackRestore(k),x.forEach(X=>a._OrtReleaseTensor(X)),P.forEach(X=>a._OrtReleaseTensor(X)),T.forEach(X=>a._free(X)),E!==0&&a._OrtReleaseRunOptions(E),A.forEach(X=>a._free(X))}},Fl=e=>{let t=Ge(),r=rr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Ue("Can\'t get an profile file name."),t._OrtFree(i)},ql=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Vi(r.wasm).then(()=>{Wl(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;Nl(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Ko(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;Gl(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":Hl(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:c}=r;Ll(o,i,u,a,new Array(a.length).fill(null),c).then(p=>{p.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:p},ql([...u,...p]))},p=>{postMessage({type:t,err:p})});break}case"end-profiling":Fl(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var Nn,mr,ii,rs,ns,fl,pl,co,fo,I$,ts,D0,B0,R0,z0,N0,M0,L0,hl=z(()=>{"use strict";Pt();P0();so();Nn=()=>!!ge.wasm.proxy&&typeof document<"u",ii=!1,rs=!1,ns=!1,pl=new Map,co=(r,e)=>{let n=pl.get(r);n?n.push(e):pl.set(r,[e])},fo=()=>{if(ii||!rs||ns||!mr)throw new Error("worker not ready")},I$=r=>{switch(r.data.type){case"init-wasm":ii=!1,r.data.err?(ns=!0,fl[1](r.data.err)):(rs=!0,fl[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=pl.get(r.data.type);r.data.err?e.shift()[1](r.data.err):e.shift()[0](r.data.out);break}default:}},ts=typeof document<"u"?document?.currentScript?.src:void 0,D0=async()=>{if(!rs){if(ii)throw new Error("multiple calls to 'initWasm()' detected.");if(ns)throw new Error("previous call to 'initWasm()' failed.");if(ii=!0,Nn())return ge.wasm.wasmPaths===void 0&&ts&&ts.indexOf("blob:")!==0&&(ge.wasm.wasmPaths=ts.substr(0,+ts.lastIndexOf("/")+1)),new Promise((r,e)=>{mr?.terminate();let n=URL.createObjectURL(new Blob([k0()],{type:"text/javascript"}));mr=new Worker(n,{name:"ort-wasm-proxy-worker"}),mr.onerror=o=>e(o),mr.onmessage=I$,URL.revokeObjectURL(n),fl=[r,e];let t={type:"init-wasm",in:ge};mr.postMessage(t)});try{await Vm(ge.wasm),await T0(ge),rs=!0}catch(r){throw ns=!0,r}finally{ii=!1}}},B0=async r=>{if(Nn())return fo(),new Promise((e,n)=>{co("init-ep",[e,n]);let t={type:"init-ep",in:{epName:r,env:ge}};mr.postMessage(t)});await S0(ge,r)},R0=async r=>Nn()?(fo(),new Promise((e,n)=>{co("copy-from",[e,n]);let t={type:"copy-from",in:{buffer:r}};mr.postMessage(t,[r.buffer])})):cl(r),z0=async(r,e)=>{if(Nn()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return fo(),new Promise((n,t)=>{co("create",[n,t]);let o={type:"create",in:{model:r,options:{...e}}},i=[];r instanceof Uint8Array&&i.push(r.buffer),mr.postMessage(o,i)})}else return I0(r,e)},N0=async r=>{if(Nn())return fo(),new Promise((e,n)=>{co("release",[e,n]);let t={type:"release",in:r};mr.postMessage(t)});A0(r)},M0=async(r,e,n,t,o,i)=>{if(Nn()){if(n.some(s=>s[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(s=>s))throw new Error("pre-allocated output tensor is not supported for proxy.");return fo(),new Promise((s,a)=>{co("run",[s,a]);let u=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:u,outputIndices:t,options:i}};mr.postMessage(l,C0(u))})}else return O0(r,e,n,t,o,i)},L0=async r=>{if(Nn())return fo(),new Promise((e,n)=>{co("end-profiling",[e,n]);let t={type:"end-profiling",in:r};mr.postMessage(t)});E0(r)}});var F0,A$,os,U0=z(()=>{"use strict";Pt();hl();Se();Nu();F0=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},A$=r=>{switch(r[3]){case"cpu":return new $t(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Pa(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return $t.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},os=class{async fetchModelAndCopyToWasmMemory(e){return R0(await ei(e))}async loadModel(e,n){jt();let t;typeof e=="string"?typeof process<"u"&&process.versions&&process.versions.node?t=await ei(e):t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await z0(t,n),Ut()}async dispose(){return N0(this.sessionId)}async run(e,n,t){jt();let o=[],i=[];Object.entries(e).forEach(m=>{let b=m[0],v=m[1],w=this.inputNames.indexOf(b);if(w===-1)throw new Error(`invalid input '${b}'`);o.push(v),i.push(w)});let s=[],a=[];Object.entries(n).forEach(m=>{let b=m[0],v=m[1],w=this.outputNames.indexOf(b);if(w===-1)throw new Error(`invalid output '${b}'`);s.push(v),a.push(w)});let u=o.map((m,b)=>F0(m,()=>`input "${this.inputNames[i[b]]}"`)),l=s.map((m,b)=>m?F0(m,()=>`output "${this.outputNames[a[b]]}"`):null),d=await M0(this.sessionId,i,u,a,l,t),p={};for(let m=0;m<d.length;m++)p[this.outputNames[a[m]]]=s[m]??A$(d[m]);return Ut(),p}startProfiling(){}endProfiling(){L0(this.sessionId)}}});var O$,is,V0=z(()=>{"use strict";Pt();hl();U0();O$=()=>{if((typeof ge.wasm.initTimeout!="number"||ge.wasm.initTimeout<0)&&(ge.wasm.initTimeout=0),typeof ge.wasm.simd!="boolean"&&(ge.wasm.simd=!0),typeof ge.wasm.proxy!="boolean"&&(ge.wasm.proxy=!1),typeof ge.wasm.trace!="boolean"&&(ge.wasm.trace=!1),typeof ge.wasm.numThreads!="number"||!Number.isInteger(ge.wasm.numThreads)||ge.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(ge.wasm.numThreads=1);let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;ge.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},is=class{async init(e){O$(),await D0(),await B0(e)}async createInferenceSessionHandler(e,n){let t=new os;return await t.loadModel(e,n),Promise.resolve(t)}}});var G0={};tn(G0,{wasmBackend:()=>E$});var E$,W0=z(()=>{"use strict";V0();E$=new is});var P$={};tn(P$,{InferenceSession:()=>pd,TRACE:()=>Ro,TRACE_FUNC_BEGIN:()=>jt,TRACE_FUNC_END:()=>Ut,Tensor:()=>$t,TrainingSession:()=>wd,default:()=>C$,env:()=>ge,registerBackend:()=>jr});Pt();Pt();Pt();var _d="1.18.0";var C$=xs;{let r=(Am(),qr(Im)).onnxjsBackend;jr("webgl",r,-10)}{let r=(W0(),qr(G0)).wasmBackend;jr("webgpu",r,5),jr("webnn",r,5),jr("cpu",r,10),jr("wasm",r,10)}Object.defineProperty(ge.versions,"web",{value:_d,enumerable:!0});return qr(P$);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
